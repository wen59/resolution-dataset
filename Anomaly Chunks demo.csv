chunk_id,kpis,kpi_label,log_seqs,log_label
Mq5ZEz2Y,"[[0.015854108029192, 0.668770779891729, -0.6940955480384908, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.5612477114360956, -0.112135526515572, -0.1949096116354857], [0.0495007215950624, 0.5911655391703223, -0.6129434522086042, -0.324916725359467, 3.2306975150622166, -0.4562203188819567, -0.1757397941801383, -0.4186728489241292, -0.5542023059284693, -0.1112706273311484, 0.0837512449781833], [1.2271321964005286, -0.7446909640341142, 0.5060410804316605, -0.3046129885745859, -0.4131752583334878, -0.405982092996468, -0.1741013035756064, -0.4186728489241292, -0.5450432787685551, -0.0939067244784862, 5.5153882093166775], [-0.072061237094534, 0.574162143731363, -0.5237904455222503, -0.3299926595556873, -0.4162210126437726, -0.6169826417155208, -0.1757397941801383, -0.4673696678830764, -0.512634413433474, -0.1118910624795304, -0.1887235113866447], [0.0115126095045635, 0.722396873199218, -0.762103290318466, -0.3299926595556873, -0.3910427770120843, -0.6169826417155208, -0.1757397941801383, -0.4673696678830764, -0.506998089027373, -0.1121567266487788, -0.1948598362145879], [-0.2446358034485148, 0.5497470118190103, -0.4009193145122109, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4359040310172949, -0.4999526835197467, -0.1121428140613618, -0.1949057827569551], [-0.2164160630384299, 0.3007998632127001, -0.0917412592729957, -0.324916725359467, -0.4204850686781715, -0.5968873513613252, -0.1753301715290053, -0.4344056673570197, -0.493611818562883, -0.1120788824096599, -0.1948844504337132], [-0.2337820571369436, 0.2502256613942555, -0.0140181252387383, -0.3299926595556873, -0.4110770720308471, -0.6169826417155208, -0.1757397941801383, -0.4418974856583963, -0.4872709536060194, -0.1120556947639649, -0.1948694084109144], [-0.1675742046363598, 0.3478861890436658, -0.176893810531116, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.438151576507708, -0.4851573319537314, -0.1117502803449536, -0.1947378590842557], [0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
h94PLylT,"[[1.2271321964005286, -0.7446909640341142, 0.5060410804316605, -0.3046129885745859, -0.4131752583334878, -0.405982092996468, -0.1741013035756064, -0.4186728489241292, -0.5450432787685551, -0.0939067244784862, 5.5153882093166775], [-0.072061237094534, 0.574162143731363, -0.5237904455222503, -0.3299926595556873, -0.4162210126437726, -0.6169826417155208, -0.1757397941801383, -0.4673696678830764, -0.512634413433474, -0.1118910624795304, -0.1887235113866447], [0.0115126095045635, 0.722396873199218, -0.762103290318466, -0.3299926595556873, -0.3910427770120843, -0.6169826417155208, -0.1757397941801383, -0.4673696678830764, -0.506998089027373, -0.1121567266487788, -0.1948598362145879], [-0.2446358034485148, 0.5497470118190103, -0.4009193145122109, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4359040310172949, -0.4999526835197467, -0.1121428140613618, -0.1949057827569551], [-0.2164160630384299, 0.3007998632127001, -0.0917412592729957, -0.324916725359467, -0.4204850686781715, -0.5968873513613252, -0.1753301715290053, -0.4344056673570197, -0.493611818562883, -0.1120788824096599, -0.1948844504337132], [-0.2337820571369436, 0.2502256613942555, -0.0140181252387383, -0.3299926595556873, -0.4110770720308471, -0.6169826417155208, -0.1757397941801383, -0.4418974856583963, -0.4872709536060194, -0.1120556947639649, -0.1948694084109144], [-0.1675742046363598, 0.3478861890436658, -0.176893810531116, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.438151576507708, -0.4851573319537314, -0.1117502803449536, -0.1947378590842557], [0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009], [0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
aFv4b9OE,"[[-0.072061237094534, 0.574162143731363, -0.5237904455222503, -0.3299926595556873, -0.4162210126437726, -0.6169826417155208, -0.1757397941801383, -0.4673696678830764, -0.512634413433474, -0.1118910624795304, -0.1887235113866447], [0.0115126095045635, 0.722396873199218, -0.762103290318466, -0.3299926595556873, -0.3910427770120843, -0.6169826417155208, -0.1757397941801383, -0.4673696678830764, -0.506998089027373, -0.1121567266487788, -0.1948598362145879], [-0.2446358034485148, 0.5497470118190103, -0.4009193145122109, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4359040310172949, -0.4999526835197467, -0.1121428140613618, -0.1949057827569551], [-0.2164160630384299, 0.3007998632127001, -0.0917412592729957, -0.324916725359467, -0.4204850686781715, -0.5968873513613252, -0.1753301715290053, -0.4344056673570197, -0.493611818562883, -0.1120788824096599, -0.1948844504337132], [-0.2337820571369436, 0.2502256613942555, -0.0140181252387383, -0.3299926595556873, -0.4110770720308471, -0.6169826417155208, -0.1757397941801383, -0.4418974856583963, -0.4872709536060194, -0.1120556947639649, -0.1948694084109144], [-0.1675742046363598, 0.3478861890436658, -0.176893810531116, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.438151576507708, -0.4851573319537314, -0.1117502803449536, -0.1947378590842557], [0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009], [0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004], [-0.1567204583247887, -0.1674474881063483, 0.4928967268817493, -0.3299926595556873, -0.4078959508623273, -0.6169826417155208, -0.1757397941801383, -0.1736903904691173, -0.4372485745018725, -0.1120447634452801, -0.1947947452795676]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root""], [""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)""], [""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
rR8lTZB9,"[[0.0115126095045635, 0.722396873199218, -0.762103290318466, -0.3299926595556873, -0.3910427770120843, -0.6169826417155208, -0.1757397941801383, -0.4673696678830764, -0.506998089027373, -0.1121567266487788, -0.1948598362145879], [-0.2446358034485148, 0.5497470118190103, -0.4009193145122109, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4359040310172949, -0.4999526835197467, -0.1121428140613618, -0.1949057827569551], [-0.2164160630384299, 0.3007998632127001, -0.0917412592729957, -0.324916725359467, -0.4204850686781715, -0.5968873513613252, -0.1753301715290053, -0.4344056673570197, -0.493611818562883, -0.1120788824096599, -0.1948844504337132], [-0.2337820571369436, 0.2502256613942555, -0.0140181252387383, -0.3299926595556873, -0.4110770720308471, -0.6169826417155208, -0.1757397941801383, -0.4418974856583963, -0.4872709536060194, -0.1120556947639649, -0.1948694084109144], [-0.1675742046363598, 0.3478861890436658, -0.176893810531116, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.438151576507708, -0.4851573319537314, -0.1117502803449536, -0.1947378590842557], [0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009], [0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004], [-0.1567204583247887, -0.1674474881063483, 0.4928967268817493, -0.3299926595556873, -0.4078959508623273, -0.6169826417155208, -0.1757397941801383, -0.1736903904691173, -0.4372485745018725, -0.1120447634452801, -0.1947947452795676], [0.0668667156935762, -0.2690318762416726, 0.5083270549620797, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1594559356965021, -0.4245668445881451, -0.1083221525549881, 2.799984750231016]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
NQqROdv2,"[[-0.2446358034485148, 0.5497470118190103, -0.4009193145122109, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4359040310172949, -0.4999526835197467, -0.1121428140613618, -0.1949057827569551], [-0.2164160630384299, 0.3007998632127001, -0.0917412592729957, -0.324916725359467, -0.4204850686781715, -0.5968873513613252, -0.1753301715290053, -0.4344056673570197, -0.493611818562883, -0.1120788824096599, -0.1948844504337132], [-0.2337820571369436, 0.2502256613942555, -0.0140181252387383, -0.3299926595556873, -0.4110770720308471, -0.6169826417155208, -0.1757397941801383, -0.4418974856583963, -0.4872709536060194, -0.1120556947639649, -0.1948694084109144], [-0.1675742046363598, 0.3478861890436658, -0.176893810531116, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.438151576507708, -0.4851573319537314, -0.1117502803449536, -0.1947378590842557], [0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009], [0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004], [-0.1567204583247887, -0.1674474881063483, 0.4928967268817493, -0.3299926595556873, -0.4078959508623273, -0.6169826417155208, -0.1757397941801383, -0.1736903904691173, -0.4372485745018725, -0.1120447634452801, -0.1947947452795676], [0.0668667156935762, -0.2690318762416726, 0.5083270549620797, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1594559356965021, -0.4245668445881451, -0.1083221525549881, 2.799984750231016], [-0.1295860925458609, 0.1974715370836367, 0.0008407092089872, -0.3299926595556873, -0.3926671793109029, -0.6169826417155208, -0.1757397941801383, -0.1811822087704939, -0.4027260875145035, -0.1121100201053075, -0.1948877323295965]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:""], [""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>""], [""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>""], [""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
jPSshHQf,"[[-0.2164160630384299, 0.3007998632127001, -0.0917412592729957, -0.324916725359467, -0.4204850686781715, -0.5968873513613252, -0.1753301715290053, -0.4344056673570197, -0.493611818562883, -0.1120788824096599, -0.1948844504337132], [-0.2337820571369436, 0.2502256613942555, -0.0140181252387383, -0.3299926595556873, -0.4110770720308471, -0.6169826417155208, -0.1757397941801383, -0.4418974856583963, -0.4872709536060194, -0.1120556947639649, -0.1948694084109144], [-0.1675742046363598, 0.3478861890436658, -0.176893810531116, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.438151576507708, -0.4851573319537314, -0.1117502803449536, -0.1947378590842557], [0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009], [0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004], [-0.1567204583247887, -0.1674474881063483, 0.4928967268817493, -0.3299926595556873, -0.4078959508623273, -0.6169826417155208, -0.1757397941801383, -0.1736903904691173, -0.4372485745018725, -0.1120447634452801, -0.1947947452795676], [0.0668667156935762, -0.2690318762416726, 0.5083270549620797, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1594559356965021, -0.4245668445881451, -0.1083221525549881, 2.799984750231016], [-0.1295860925458609, 0.1974715370836367, 0.0008407092089872, -0.3299926595556873, -0.3926671793109029, -0.6169826417155208, -0.1757397941801383, -0.1811822087704939, -0.4027260875145035, -0.1121100201053075, -0.1948877323295965], [-0.2120745645138014, 0.5558507947970985, -0.4260650343468236, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1774362996198056, -0.394271600905352, -0.1121229389364804, -0.1949000394391592]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030""], [""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root""], [""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy""], [""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
cSCt6Wrm,"[[-0.2337820571369436, 0.2502256613942555, -0.0140181252387383, -0.3299926595556873, -0.4110770720308471, -0.6169826417155208, -0.1757397941801383, -0.4418974856583963, -0.4872709536060194, -0.1120556947639649, -0.1948694084109144], [-0.1675742046363598, 0.3478861890436658, -0.176893810531116, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.438151576507708, -0.4851573319537314, -0.1117502803449536, -0.1947378590842557], [0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009], [0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004], [-0.1567204583247887, -0.1674474881063483, 0.4928967268817493, -0.3299926595556873, -0.4078959508623273, -0.6169826417155208, -0.1757397941801383, -0.1736903904691173, -0.4372485745018725, -0.1120447634452801, -0.1947947452795676], [0.0668667156935762, -0.2690318762416726, 0.5083270549620797, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1594559356965021, -0.4245668445881451, -0.1083221525549881, 2.799984750231016], [-0.1295860925458609, 0.1974715370836367, 0.0008407092089872, -0.3299926595556873, -0.3926671793109029, -0.6169826417155208, -0.1757397941801383, -0.1811822087704939, -0.4027260875145035, -0.1121100201053075, -0.1948877323295965], [-0.2120745645138014, 0.5558507947970985, -0.4260650343468236, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1774362996198056, -0.394271600905352, -0.1121229389364804, -0.1949000394391592], [-0.2609164229158714, 0.5876776631828434, -0.4449243242227831, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1759379359595304, -0.386521654846963, -0.1121719642445212, -0.1949068767222496]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
6pQ2Hzcu,"[[-0.1675742046363598, 0.3478861890436658, -0.176893810531116, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.438151576507708, -0.4851573319537314, -0.1117502803449536, -0.1947378590842557], [0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009], [0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004], [-0.1567204583247887, -0.1674474881063483, 0.4928967268817493, -0.3299926595556873, -0.4078959508623273, -0.6169826417155208, -0.1757397941801383, -0.1736903904691173, -0.4372485745018725, -0.1120447634452801, -0.1947947452795676], [0.0668667156935762, -0.2690318762416726, 0.5083270549620797, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1594559356965021, -0.4245668445881451, -0.1083221525549881, 2.799984750231016], [-0.1295860925458609, 0.1974715370836367, 0.0008407092089872, -0.3299926595556873, -0.3926671793109029, -0.6169826417155208, -0.1757397941801383, -0.1811822087704939, -0.4027260875145035, -0.1121100201053075, -0.1948877323295965], [-0.2120745645138014, 0.5558507947970985, -0.4260650343468236, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1774362996198056, -0.394271600905352, -0.1121229389364804, -0.1949000394391592], [-0.2609164229158714, 0.5876776631828434, -0.4449243242227831, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1759379359595304, -0.386521654846963, -0.1121719642445212, -0.1949068767222496], [-0.2446358034485148, 0.2380180954380791, 0.0071271391676404, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.1759379359595304, -0.3858171142962003, -0.1121378452801415, -0.194903047843719]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0""], [""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB""], [""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
xQFPrkpL,"[[0.1808310519650729, 0.1887518471149392, -0.1511765970638985, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4299105763761939, -0.4759983047938173, 2.3205439837467874, -0.1908840928432009], [0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004], [-0.1567204583247887, -0.1674474881063483, 0.4928967268817493, -0.3299926595556873, -0.4078959508623273, -0.6169826417155208, -0.1757397941801383, -0.1736903904691173, -0.4372485745018725, -0.1120447634452801, -0.1947947452795676], [0.0668667156935762, -0.2690318762416726, 0.5083270549620797, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1594559356965021, -0.4245668445881451, -0.1083221525549881, 2.799984750231016], [-0.1295860925458609, 0.1974715370836367, 0.0008407092089872, -0.3299926595556873, -0.3926671793109029, -0.6169826417155208, -0.1757397941801383, -0.1811822087704939, -0.4027260875145035, -0.1121100201053075, -0.1948877323295965], [-0.2120745645138014, 0.5558507947970985, -0.4260650343468236, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1774362996198056, -0.394271600905352, -0.1121229389364804, -0.1949000394391592], [-0.2609164229158714, 0.5876776631828434, -0.4449243242227831, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1759379359595304, -0.386521654846963, -0.1121719642445212, -0.1949068767222496], [-0.2446358034485148, 0.2380180954380791, 0.0071271391676404, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.1759379359595304, -0.3858171142962003, -0.1121378452801415, -0.194903047843719], [-0.266343296071657, 0.2524055838864297, 0.0002692155763825, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1392280262827856, -0.3801807898900993, -0.1121163138948532, -0.1948983984912175]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:""], [""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)""], [""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
rL9UEJma,"[[0.1667211817600305, 0.277692684795652, -0.2637608426870507, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4186728489241292, -0.4619074937785645, 4.676461786692085, -0.1870628720696563], [-0.1035371013980902, -0.1173092707863388, 0.3986002775019517, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.2965562106116921, -0.4379531150526351, -0.1049347687710295, -0.1948622976365004], [-0.1567204583247887, -0.1674474881063483, 0.4928967268817493, -0.3299926595556873, -0.4078959508623273, -0.6169826417155208, -0.1757397941801383, -0.1736903904691173, -0.4372485745018725, -0.1120447634452801, -0.1947947452795676], [0.0668667156935762, -0.2690318762416726, 0.5083270549620797, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1594559356965021, -0.4245668445881451, -0.1083221525549881, 2.799984750231016], [-0.1295860925458609, 0.1974715370836367, 0.0008407092089872, -0.3299926595556873, -0.3926671793109029, -0.6169826417155208, -0.1757397941801383, -0.1811822087704939, -0.4027260875145035, -0.1121100201053075, -0.1948877323295965], [-0.2120745645138014, 0.5558507947970985, -0.4260650343468236, -0.3299926595556873, 1.4293030491015075, -0.5366014802987388, -0.1757397941801383, -0.1774362996198056, -0.394271600905352, -0.1121229389364804, -0.1949000394391592], [-0.2609164229158714, 0.5876776631828434, -0.4449243242227831, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1759379359595304, -0.386521654846963, -0.1121719642445212, -0.1949068767222496], [-0.2446358034485148, 0.2380180954380791, 0.0071271391676404, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.1759379359595304, -0.3858171142962003, -0.1121378452801415, -0.194903047843719], [-0.266343296071657, 0.2524055838864297, 0.0002692155763825, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1392280262827856, -0.3801807898900993, -0.1121163138948532, -0.1948983984912175], [-0.266343296071657, 0.4372630112228143, -0.3854889864318804, -0.0751807629054293, -0.3247130164769916, 0.7595447475468705, -0.1757397941801383, -0.1392280262827856, -0.3780671682378114, -0.1121719642445212, -0.1949085176701913]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:""], [""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)""], [""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
38JVCOkL,"[[-0.266343296071657, 0.4372630112228143, -0.3854889864318804, -0.0751807629054293, -0.3247130164769916, 0.7595447475468705, -0.1757397941801383, -0.1392280262827856, -0.3780671682378114, -0.1121719642445212, -0.1949085176701913], [-0.2229283108253725, 0.4106679568182874, -0.3237676741105584, -0.1624868310804181, -0.3925994958817855, 0.2471148435148854, -0.1757397941801383, -0.1392280262827856, -0.3780671682378114, -0.1121421515571991, -0.1949046887916607], [-0.2446358034485148, 0.3531180030248844, -0.1466046480030599, -0.324916725359467, -0.4039026285443982, -0.5968873513613252, -0.1757397941801383, -0.1392280262827856, -0.3773626276870488, -0.1120828574346362, -0.1949000394391592], [-0.2435504288173576, 0.1534371027417148, 0.0265579226762047, -0.1665475784373943, -0.3292478062278601, 0.2169719079835923, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1121338702551652, -0.1949085176701913], [-0.2392089302927292, 0.4032562203448945, -0.2546169445653734, -0.2538536466123831, -0.3792658603456495, -0.2050291894545131, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1120156132621206, -0.194899492456512], [-0.2446358034485148, -0.2420008373387111, 0.5991945425462484, -0.2640055150048236, -0.388538490134739, -0.2854103508712951, -0.1757397941801383, -0.1377296626225103, -0.3717263032809476, -0.1121212826760736, -0.1949003129304828], [-0.2500626766043003, 0.3518100495295798, -0.1471761416356647, -0.3147648569670264, -0.4146642937740715, -0.5366014802987388, -0.1757397941801383, -0.1377296626225103, -0.3689081410778972, -0.1121759392694975, -0.1949104321094566], [-0.2381235556615721, 0.1333818158137105, 0.1419996364623812, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1347329353019595, -0.3682036005271347, -0.112135526515572, -0.1941517671777494], [-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096]]",0,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",1
zA2g96nL,"[[-0.2229283108253725, 0.4106679568182874, -0.3237676741105584, -0.1624868310804181, -0.3925994958817855, 0.2471148435148854, -0.1757397941801383, -0.1392280262827856, -0.3780671682378114, -0.1121421515571991, -0.1949046887916607], [-0.2446358034485148, 0.3531180030248844, -0.1466046480030599, -0.324916725359467, -0.4039026285443982, -0.5968873513613252, -0.1757397941801383, -0.1392280262827856, -0.3773626276870488, -0.1120828574346362, -0.1949000394391592], [-0.2435504288173576, 0.1534371027417148, 0.0265579226762047, -0.1665475784373943, -0.3292478062278601, 0.2169719079835923, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1121338702551652, -0.1949085176701913], [-0.2392089302927292, 0.4032562203448945, -0.2546169445653734, -0.2538536466123831, -0.3792658603456495, -0.2050291894545131, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1120156132621206, -0.194899492456512], [-0.2446358034485148, -0.2420008373387111, 0.5991945425462484, -0.2640055150048236, -0.388538490134739, -0.2854103508712951, -0.1757397941801383, -0.1377296626225103, -0.3717263032809476, -0.1121212826760736, -0.1949003129304828], [-0.2500626766043003, 0.3518100495295798, -0.1471761416356647, -0.3147648569670264, -0.4146642937740715, -0.5366014802987388, -0.1757397941801383, -0.1377296626225103, -0.3689081410778972, -0.1121759392694975, -0.1949104321094566], [-0.2381235556615721, 0.1333818158137105, 0.1419996364623812, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1347329353019595, -0.3682036005271347, -0.112135526515572, -0.1941517671777494], [-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612]]",0,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",1
kvdoB7m0,"[[-0.2446358034485148, 0.3531180030248844, -0.1466046480030599, -0.324916725359467, -0.4039026285443982, -0.5968873513613252, -0.1757397941801383, -0.1392280262827856, -0.3773626276870488, -0.1120828574346362, -0.1949000394391592], [-0.2435504288173576, 0.1534371027417148, 0.0265579226762047, -0.1665475784373943, -0.3292478062278601, 0.2169719079835923, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1121338702551652, -0.1949085176701913], [-0.2392089302927292, 0.4032562203448945, -0.2546169445653734, -0.2538536466123831, -0.3792658603456495, -0.2050291894545131, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1120156132621206, -0.194899492456512], [-0.2446358034485148, -0.2420008373387111, 0.5991945425462484, -0.2640055150048236, -0.388538490134739, -0.2854103508712951, -0.1757397941801383, -0.1377296626225103, -0.3717263032809476, -0.1121212826760736, -0.1949003129304828], [-0.2500626766043003, 0.3518100495295798, -0.1471761416356647, -0.3147648569670264, -0.4146642937740715, -0.5366014802987388, -0.1757397941801383, -0.1377296626225103, -0.3689081410778972, -0.1121759392694975, -0.1949104321094566], [-0.2381235556615721, 0.1333818158137105, 0.1419996364623812, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1347329353019595, -0.3682036005271347, -0.112135526515572, -0.1941517671777494], [-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751]]",0,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",1
mWINQYfR,"[[-0.2435504288173576, 0.1534371027417148, 0.0265579226762047, -0.1665475784373943, -0.3292478062278601, 0.2169719079835923, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1121338702551652, -0.1949085176701913], [-0.2392089302927292, 0.4032562203448945, -0.2546169445653734, -0.2538536466123831, -0.3792658603456495, -0.2050291894545131, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1120156132621206, -0.194899492456512], [-0.2446358034485148, -0.2420008373387111, 0.5991945425462484, -0.2640055150048236, -0.388538490134739, -0.2854103508712951, -0.1757397941801383, -0.1377296626225103, -0.3717263032809476, -0.1121212826760736, -0.1949003129304828], [-0.2500626766043003, 0.3518100495295798, -0.1471761416356647, -0.3147648569670264, -0.4146642937740715, -0.5366014802987388, -0.1757397941801383, -0.1377296626225103, -0.3689081410778972, -0.1121759392694975, -0.1949104321094566], [-0.2381235556615721, 0.1333818158137105, 0.1419996364623812, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1347329353019595, -0.3682036005271347, -0.112135526515572, -0.1941517671777494], [-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751], [0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",1
wxLyEnhC,"[[-0.2392089302927292, 0.4032562203448945, -0.2546169445653734, -0.2538536466123831, -0.3792658603456495, -0.2050291894545131, -0.1757397941801383, -0.1392280262827856, -0.3724308438317104, -0.1120156132621206, -0.194899492456512], [-0.2446358034485148, -0.2420008373387111, 0.5991945425462484, -0.2640055150048236, -0.388538490134739, -0.2854103508712951, -0.1757397941801383, -0.1377296626225103, -0.3717263032809476, -0.1121212826760736, -0.1949003129304828], [-0.2500626766043003, 0.3518100495295798, -0.1471761416356647, -0.3147648569670264, -0.4146642937740715, -0.5366014802987388, -0.1757397941801383, -0.1377296626225103, -0.3689081410778972, -0.1121759392694975, -0.1949104321094566], [-0.2381235556615721, 0.1333818158137105, 0.1419996364623812, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1347329353019595, -0.3682036005271347, -0.112135526515572, -0.1941517671777494], [-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751], [0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752], [0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""I/O error constructing remote block reader."", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully connected to <*> for <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms""]]",1
awT7Q09h,"[[-0.2446358034485148, -0.2420008373387111, 0.5991945425462484, -0.2640055150048236, -0.388538490134739, -0.2854103508712951, -0.1757397941801383, -0.1377296626225103, -0.3717263032809476, -0.1121212826760736, -0.1949003129304828], [-0.2500626766043003, 0.3518100495295798, -0.1471761416356647, -0.3147648569670264, -0.4146642937740715, -0.5366014802987388, -0.1757397941801383, -0.1377296626225103, -0.3689081410778972, -0.1121759392694975, -0.1949104321094566], [-0.2381235556615721, 0.1333818158137105, 0.1419996364623812, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1347329353019595, -0.3682036005271347, -0.112135526515572, -0.1941517671777494], [-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751], [0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752], [0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951], [-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms""], [""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them""], [""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null""]]",1
GqQtFf1D,"[[-0.2500626766043003, 0.3518100495295798, -0.1471761416356647, -0.3147648569670264, -0.4146642937740715, -0.5366014802987388, -0.1757397941801383, -0.1377296626225103, -0.3689081410778972, -0.1121759392694975, -0.1949104321094566], [-0.2381235556615721, 0.1333818158137105, 0.1419996364623812, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1347329353019595, -0.3682036005271347, -0.112135526515572, -0.1941517671777494], [-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751], [0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752], [0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951], [-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112], [-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms""], [""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Driver requested a total number of 0 executor(s)."", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>""], [""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream""], [""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""]]",1
gO94NYUG,"[[-0.2381235556615721, 0.1333818158137105, 0.1419996364623812, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1347329353019595, -0.3682036005271347, -0.112135526515572, -0.1941517671777494], [-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751], [0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752], [0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951], [-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112], [-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025], [-0.091597980455362, 0.2489177078989508, -0.4546397159770653, 0.3227724780782405, 2.428581196591416, 1.894928652558916, -0.1757397941801383, 0.0255919763474976, -0.1906593817349516, -0.111960294164534, -0.1947572769682324]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms""], [""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>""], [""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""]]",1
ECDzwe4i,"[[-0.1285007179147038, -1.7274000235063074, 2.5228421098941194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1212476623594818, -0.365385438324084, -0.1118549560026624, -0.19394828963298], [-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751], [0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752], [0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951], [-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112], [-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025], [-0.091597980455362, 0.2489177078989508, -0.4546397159770653, 0.3227724780782405, 2.428581196591416, 1.894928652558916, -0.1757397941801383, 0.0255919763474976, -0.1906593817349516, -0.111960294164534, -0.1947572769682324], [-0.1415252134885891, 0.1944196455945923, -0.6506620319605233, 0.8445785134496853, 0.9536915926932455, 1.904976297736014, -0.1736916809244734, -0.2171429366171012, -0.3745444654839982, -0.1117817492926825, -0.1920125180444352]]",1,"[[""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms""], [""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>""], [""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""]]",1
QY6qONZR,"[[-0.1621473314805743, -0.7699780649433364, 1.285558395304654, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1175017532087935, -0.3527037084103566, -0.101584485220183, -0.1946087711795096], [-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751], [0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752], [0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951], [-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112], [-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025], [-0.091597980455362, 0.2489177078989508, -0.4546397159770653, 0.3227724780782405, 2.428581196591416, 1.894928652558916, -0.1757397941801383, 0.0255919763474976, -0.1906593817349516, -0.111960294164534, -0.1947572769682324], [-0.1415252134885891, 0.1944196455945923, -0.6506620319605233, 0.8445785134496853, 0.9536915926932455, 1.904976297736014, -0.1736916809244734, -0.2171429366171012, -0.3745444654839982, -0.1117817492926825, -0.1920125180444352], [-0.266343296071657, 0.6979817412868652, -0.8769735104720376, 0.1897830021372692, 3.577304355572635, 1.894928652558916, -0.1695954544131437, -0.6007240336475781, -0.5133389539842367, -0.111974206751951, -0.1948086933370719]]",1,"[[""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms""], [""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>""], [""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""]]",1
kwPiM2rZ,"[[-0.1295860925458609, -1.219042098331251, 1.8570520279094884, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, -0.076296752551223, -0.338612897395104, 0.0673540762719799, -0.194371380710612], [-0.2229283108253725, -0.1425963716955611, 0.4951827014121687, -0.3299926595556873, -0.413987459482897, -0.6169826417155208, -0.1757397941801383, -0.0665573887594333, -0.3231130052783262, -0.0905362345506769, -0.1932533481796751], [0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752], [0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951], [-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112], [-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025], [-0.091597980455362, 0.2489177078989508, -0.4546397159770653, 0.3227724780782405, 2.428581196591416, 1.894928652558916, -0.1757397941801383, 0.0255919763474976, -0.1906593817349516, -0.111960294164534, -0.1947572769682324], [-0.1415252134885891, 0.1944196455945923, -0.6506620319605233, 0.8445785134496853, 0.9536915926932455, 1.904976297736014, -0.1736916809244734, -0.2171429366171012, -0.3745444654839982, -0.1117817492926825, -0.1920125180444352], [-0.266343296071657, 0.6979817412868652, -0.8769735104720376, 0.1897830021372692, 3.577304355572635, 1.894928652558916, -0.1695954544131437, -0.6007240336475781, -0.5133389539842367, -0.111974206751951, -0.1948086933370719], [-0.2500626766043003, 0.696237803293126, -0.8855459149611101, 0.1948589363334895, 1.9463367641296443, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.512634413433474, -0.1120212445475037, -0.1948877323295965]]",1,"[[""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""I/O error constructing remote block reader."", ""Failed to connect to /172.17.0.2:50010 for block, add to deadNodes and continue. java.net.ConnectException: Connection refused"", ""Successfully connected to <*> for <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>""], [""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>""], [""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""]]",1
XC9q6Qmz,"[[0.0722935888493618, -1.9283888772847817, 2.680574352493054, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0628114796087453, -0.3224084647275635, 0.3223065469655928, 0.0867240956658752], [0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951], [-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112], [-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025], [-0.091597980455362, 0.2489177078989508, -0.4546397159770653, 0.3227724780782405, 2.428581196591416, 1.894928652558916, -0.1757397941801383, 0.0255919763474976, -0.1906593817349516, -0.111960294164534, -0.1947572769682324], [-0.1415252134885891, 0.1944196455945923, -0.6506620319605233, 0.8445785134496853, 0.9536915926932455, 1.904976297736014, -0.1736916809244734, -0.2171429366171012, -0.3745444654839982, -0.1117817492926825, -0.1920125180444352], [-0.266343296071657, 0.6979817412868652, -0.8769735104720376, 0.1897830021372692, 3.577304355572635, 1.894928652558916, -0.1695954544131437, -0.6007240336475781, -0.5133389539842367, -0.111974206751951, -0.1948086933370719], [-0.2500626766043003, 0.696237803293126, -0.8855459149611101, 0.1948589363334895, 1.9463367641296443, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.512634413433474, -0.1120212445475037, -0.1948877323295965], [-0.2229283108253725, 0.7380923151428731, -0.9026907239392552, 0.1024769339622804, 2.4356879566487475, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.5246116027964388, -0.1121255889531312, -0.1948740577634158], [-0.2826239155390136, 0.7049574932618236, -0.899833255776231, 0.2303904757070314, 2.1612316515775216, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.112186539336101, -0.1949180898665178]]",1,"[[""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>"", ""Excluding datanode <*>""], [""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""], [""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>""], [""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""]]",1
W7P1zLY4,"[[0.094001081472504, -1.723040178521959, 2.397113510721056, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.0103687514991096, -0.2787269505802805, 2.070779914403472, -0.1913936071790951], [-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112], [-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025], [-0.091597980455362, 0.2489177078989508, -0.4546397159770653, 0.3227724780782405, 2.428581196591416, 1.894928652558916, -0.1757397941801383, 0.0255919763474976, -0.1906593817349516, -0.111960294164534, -0.1947572769682324], [-0.1415252134885891, 0.1944196455945923, -0.6506620319605233, 0.8445785134496853, 0.9536915926932455, 1.904976297736014, -0.1736916809244734, -0.2171429366171012, -0.3745444654839982, -0.1117817492926825, -0.1920125180444352], [-0.266343296071657, 0.6979817412868652, -0.8769735104720376, 0.1897830021372692, 3.577304355572635, 1.894928652558916, -0.1695954544131437, -0.6007240336475781, -0.5133389539842367, -0.111974206751951, -0.1948086933370719], [-0.2500626766043003, 0.696237803293126, -0.8855459149611101, 0.1948589363334895, 1.9463367641296443, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.512634413433474, -0.1120212445475037, -0.1948877323295965], [-0.2229283108253725, 0.7380923151428731, -0.9026907239392552, 0.1024769339622804, 2.4356879566487475, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.5246116027964388, -0.1121255889531312, -0.1948740577634158], [-0.2826239155390136, 0.7049574932618236, -0.899833255776231, 0.2303904757070314, 2.1612316515775216, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.112186539336101, -0.1949180898665178], [-0.2826239155390136, 0.7420161756287871, -0.9055481921022792, 0.1532362759244832, 1.7707659489990009, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.1121325452468397, -0.1949098851268094]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream""], [""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>""], [""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""]]",1
n7LR0BmH,"[[-0.1295860925458609, -1.728271992503177, 2.524556590791934, -0.3299926595556873, -0.3727682511503751, -0.6069349965384231, -0.1757397941801383, 0.0121067034050196, -0.2089774360547798, 0.3457972883150374, -0.1782419564091112], [-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025], [-0.091597980455362, 0.2489177078989508, -0.4546397159770653, 0.3227724780782405, 2.428581196591416, 1.894928652558916, -0.1757397941801383, 0.0255919763474976, -0.1906593817349516, -0.111960294164534, -0.1947572769682324], [-0.1415252134885891, 0.1944196455945923, -0.6506620319605233, 0.8445785134496853, 0.9536915926932455, 1.904976297736014, -0.1736916809244734, -0.2171429366171012, -0.3745444654839982, -0.1117817492926825, -0.1920125180444352], [-0.266343296071657, 0.6979817412868652, -0.8769735104720376, 0.1897830021372692, 3.577304355572635, 1.894928652558916, -0.1695954544131437, -0.6007240336475781, -0.5133389539842367, -0.111974206751951, -0.1948086933370719], [-0.2500626766043003, 0.696237803293126, -0.8855459149611101, 0.1948589363334895, 1.9463367641296443, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.512634413433474, -0.1120212445475037, -0.1948877323295965], [-0.2229283108253725, 0.7380923151428731, -0.9026907239392552, 0.1024769339622804, 2.4356879566487475, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.5246116027964388, -0.1121255889531312, -0.1948740577634158], [-0.2826239155390136, 0.7049574932618236, -0.899833255776231, 0.2303904757070314, 2.1612316515775216, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.112186539336101, -0.1949180898665178], [-0.2826239155390136, 0.7420161756287871, -0.9055481921022792, 0.1532362759244832, 1.7707659489990009, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.1121325452468397, -0.1949098851268094], [-0.2500626766043003, 0.7285006561773061, -0.9026907239392552, 0.149175528567507, 2.1552755098151866, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.1121173076510973, -0.1949003129304828]]",1,"[[""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1""], [""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>""], [""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0""], [""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>""], [""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""]]",1
hjxV651E,"[[-0.0905126058242049, -1.8246245666572836, 2.630282912823828, -0.3299926595556873, 3.883977972903763, -0.4260773833506636, -0.1757397941801383, 0.0136050670652952, -0.1984093277933405, -0.1043090335893458, -0.1761016133105025], [-0.091597980455362, 0.2489177078989508, -0.4546397159770653, 0.3227724780782405, 2.428581196591416, 1.894928652558916, -0.1757397941801383, 0.0255919763474976, -0.1906593817349516, -0.111960294164534, -0.1947572769682324], [-0.1415252134885891, 0.1944196455945923, -0.6506620319605233, 0.8445785134496853, 0.9536915926932455, 1.904976297736014, -0.1736916809244734, -0.2171429366171012, -0.3745444654839982, -0.1117817492926825, -0.1920125180444352], [-0.266343296071657, 0.6979817412868652, -0.8769735104720376, 0.1897830021372692, 3.577304355572635, 1.894928652558916, -0.1695954544131437, -0.6007240336475781, -0.5133389539842367, -0.111974206751951, -0.1948086933370719], [-0.2500626766043003, 0.696237803293126, -0.8855459149611101, 0.1948589363334895, 1.9463367641296443, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.512634413433474, -0.1120212445475037, -0.1948877323295965], [-0.2229283108253725, 0.7380923151428731, -0.9026907239392552, 0.1024769339622804, 2.4356879566487475, 1.894928652558916, -0.1753301715290053, -0.6007240336475781, -0.5246116027964388, -0.1121255889531312, -0.1948740577634158], [-0.2826239155390136, 0.7049574932618236, -0.899833255776231, 0.2303904757070314, 2.1612316515775216, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.112186539336101, -0.1949180898665178], [-0.2826239155390136, 0.7420161756287871, -0.9055481921022792, 0.1532362759244832, 1.7707659489990009, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.1121325452468397, -0.1949098851268094], [-0.2500626766043003, 0.7285006561773061, -0.9026907239392552, 0.149175528567507, 2.1552755098151866, 1.894928652558916, -0.1757397941801383, -0.6007240336475781, -0.5365887921594036, -0.1121173076510973, -0.1949003129304828], [-0.2880507886947993, 0.9412610914135215, -0.8969757876132067, -0.3198407911632467, 0.2834225941432213, 0.0059713592645395, -0.1757397941801383, -0.6007240336475781, -0.560543170885333, -0.112186539336101, -0.1949180898665178]]",0,"[[""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called"", ""Exception in createBlockOutputStream"", ""Exception in createBlockOutputStream"", ""Abandoning <*>""], [""Exception in createBlockOutputStream"", ""Abandoning <*>"", ""Abandoning <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Excluding datanode <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared""], [""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",1
LbocuHZX,"[[-0.2989045350063704, 0.9608803938430908, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.2771970423832281, 0.9521607038743932, -0.9112631284283276, -0.3299926595556873, -0.4164240629311249, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9390811689213474, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9112631284283276, -0.324916725359467, -0.4197405509578796, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9456209363978708, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [1.1782903379984586, -0.4769964819951052, 0.1962915315598405, -0.3299926595556873, -0.411686222892904, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.0969767687685046, 4.578311212649436], [-0.1350129657016465, 0.785614625472274, -0.7678182266445143, -0.3299926595556873, -0.4203497018199366, -0.6069349965384231, -0.1757397941801383, -0.4336564855268822, -0.6042246850326161, -0.1120679510909751, -0.1947704045517659], [-0.042756122053292, 0.6504594309574651, -0.6392321593084267, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4336564855268822, -0.5936565767711768, -0.1121057138282498, -0.1948412388045821], [-0.2554895497600858, 0.4381349802196839, -0.2489020082393251, -0.3299926595556873, -0.4095880365902634, -0.6069349965384231, -0.1757397941801383, -0.4006924850008255, -0.5901338740173635, -0.1121428140613618, -0.1949057827569551]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Bbawi39H,"[[-0.2771970423832281, 0.9521607038743932, -0.9112631284283276, -0.3299926595556873, -0.4164240629311249, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9390811689213474, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9112631284283276, -0.324916725359467, -0.4197405509578796, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9456209363978708, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [1.1782903379984586, -0.4769964819951052, 0.1962915315598405, -0.3299926595556873, -0.411686222892904, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.0969767687685046, 4.578311212649436], [-0.1350129657016465, 0.785614625472274, -0.7678182266445143, -0.3299926595556873, -0.4203497018199366, -0.6069349965384231, -0.1757397941801383, -0.4336564855268822, -0.6042246850326161, -0.1120679510909751, -0.1947704045517659], [-0.042756122053292, 0.6504594309574651, -0.6392321593084267, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4336564855268822, -0.5936565767711768, -0.1121057138282498, -0.1948412388045821], [-0.2554895497600858, 0.4381349802196839, -0.2489020082393251, -0.3299926595556873, -0.4095880365902634, -0.6069349965384231, -0.1757397941801383, -0.4006924850008255, -0.5901338740173635, -0.1121428140613618, -0.1949057827569551], [-0.2717701692274425, 0.353989972021754, -0.1300313326575196, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.399943303170688, -0.5830884685097373, -0.1121623579341619, -0.1949057827569551]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
e4BsMZ6c,"[[-0.2717701692274425, 0.9390811689213474, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9112631284283276, -0.324916725359467, -0.4197405509578796, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9456209363978708, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [1.1782903379984586, -0.4769964819951052, 0.1962915315598405, -0.3299926595556873, -0.411686222892904, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.0969767687685046, 4.578311212649436], [-0.1350129657016465, 0.785614625472274, -0.7678182266445143, -0.3299926595556873, -0.4203497018199366, -0.6069349965384231, -0.1757397941801383, -0.4336564855268822, -0.6042246850326161, -0.1120679510909751, -0.1947704045517659], [-0.042756122053292, 0.6504594309574651, -0.6392321593084267, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4336564855268822, -0.5936565767711768, -0.1121057138282498, -0.1948412388045821], [-0.2554895497600858, 0.4381349802196839, -0.2489020082393251, -0.3299926595556873, -0.4095880365902634, -0.6069349965384231, -0.1757397941801383, -0.4006924850008255, -0.5901338740173635, -0.1121428140613618, -0.1949057827569551], [-0.2717701692274425, 0.353989972021754, -0.1300313326575196, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.399943303170688, -0.5830884685097373, -0.1121623579341619, -0.1949057827569551], [-0.217501437669587, -0.3584086984208204, 0.7746430877559324, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.403689212321376, -0.5788612252051614, -0.1120093194725749, -0.1948584687579698]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
HDlmTzPN,"[[-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9112631284283276, -0.324916725359467, -0.4197405509578796, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9456209363978708, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [1.1782903379984586, -0.4769964819951052, 0.1962915315598405, -0.3299926595556873, -0.411686222892904, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.0969767687685046, 4.578311212649436], [-0.1350129657016465, 0.785614625472274, -0.7678182266445143, -0.3299926595556873, -0.4203497018199366, -0.6069349965384231, -0.1757397941801383, -0.4336564855268822, -0.6042246850326161, -0.1120679510909751, -0.1947704045517659], [-0.042756122053292, 0.6504594309574651, -0.6392321593084267, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4336564855268822, -0.5936565767711768, -0.1121057138282498, -0.1948412388045821], [-0.2554895497600858, 0.4381349802196839, -0.2489020082393251, -0.3299926595556873, -0.4095880365902634, -0.6069349965384231, -0.1757397941801383, -0.4006924850008255, -0.5901338740173635, -0.1121428140613618, -0.1949057827569551], [-0.2717701692274425, 0.353989972021754, -0.1300313326575196, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.399943303170688, -0.5830884685097373, -0.1121623579341619, -0.1949057827569551], [-0.217501437669587, -0.3584086984208204, 0.7746430877559324, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.403689212321376, -0.5788612252051614, -0.1120093194725749, -0.1948584687579698], [0.3414664973763255, 0.1346897693090151, -0.1654639378790194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3594874843432546, -0.5739294413498229, -0.1119222001751779, -0.1946369407858419]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
36mabTVx,"[[-0.266343296071657, 0.9456209363978708, -0.9112631284283276, -0.324916725359467, -0.4197405509578796, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9456209363978708, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [1.1782903379984586, -0.4769964819951052, 0.1962915315598405, -0.3299926595556873, -0.411686222892904, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.0969767687685046, 4.578311212649436], [-0.1350129657016465, 0.785614625472274, -0.7678182266445143, -0.3299926595556873, -0.4203497018199366, -0.6069349965384231, -0.1757397941801383, -0.4336564855268822, -0.6042246850326161, -0.1120679510909751, -0.1947704045517659], [-0.042756122053292, 0.6504594309574651, -0.6392321593084267, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4336564855268822, -0.5936565767711768, -0.1121057138282498, -0.1948412388045821], [-0.2554895497600858, 0.4381349802196839, -0.2489020082393251, -0.3299926595556873, -0.4095880365902634, -0.6069349965384231, -0.1757397941801383, -0.4006924850008255, -0.5901338740173635, -0.1121428140613618, -0.1949057827569551], [-0.2717701692274425, 0.353989972021754, -0.1300313326575196, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.399943303170688, -0.5830884685097373, -0.1121623579341619, -0.1949057827569551], [-0.217501437669587, -0.3584086984208204, 0.7746430877559324, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.403689212321376, -0.5788612252051614, -0.1120093194725749, -0.1948584687579698], [0.3414664973763255, 0.1346897693090151, -0.1654639378790194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3594874843432546, -0.5739294413498229, -0.1119222001751779, -0.1946369407858419], [0.1460990637680454, -0.335301520003773, 0.5534750519378618, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3594874843432546, -0.5379978732609287, -0.1120934575012396, -0.1947859935572119]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
jmH6B9Qd,"[[-0.2771970423832281, 0.9456209363978708, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [1.1782903379984586, -0.4769964819951052, 0.1962915315598405, -0.3299926595556873, -0.411686222892904, -0.6069349965384231, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.0969767687685046, 4.578311212649436], [-0.1350129657016465, 0.785614625472274, -0.7678182266445143, -0.3299926595556873, -0.4203497018199366, -0.6069349965384231, -0.1757397941801383, -0.4336564855268822, -0.6042246850326161, -0.1120679510909751, -0.1947704045517659], [-0.042756122053292, 0.6504594309574651, -0.6392321593084267, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4336564855268822, -0.5936565767711768, -0.1121057138282498, -0.1948412388045821], [-0.2554895497600858, 0.4381349802196839, -0.2489020082393251, -0.3299926595556873, -0.4095880365902634, -0.6069349965384231, -0.1757397941801383, -0.4006924850008255, -0.5901338740173635, -0.1121428140613618, -0.1949057827569551], [-0.2717701692274425, 0.353989972021754, -0.1300313326575196, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.399943303170688, -0.5830884685097373, -0.1121623579341619, -0.1949057827569551], [-0.217501437669587, -0.3584086984208204, 0.7746430877559324, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.403689212321376, -0.5788612252051614, -0.1120093194725749, -0.1948584687579698], [0.3414664973763255, 0.1346897693090151, -0.1654639378790194, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3594874843432546, -0.5739294413498229, -0.1119222001751779, -0.1946369407858419], [0.1460990637680454, -0.335301520003773, 0.5534750519378618, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3594874843432546, -0.5379978732609287, -0.1120934575012396, -0.1947859935572119], [-0.150208210537846, -0.5777089011335593, 1.0243858052042452, -0.324916725359467, -0.4066776491382133, -0.6069349965384231, -0.1757397941801383, -0.1107591167375547, -0.539406954362454, -0.1119987194059714, -0.1948975780172467]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
wZxtBcIf,"[[5.961536337507849, -3.379345288076024, 1.4815807112881123, -0.3299926595556873, -0.4204850686781715, 1.0006882317972168, -0.003698280704291, -0.3025496652527934, -0.8346094451319968, -0.1121842205715315, -0.1949145344793108], [7.285693387519527, -3.3510062956777573, 0.7414964570648521, -0.3198407911632467, -0.4204850686781715, 1.8748333622047209, 0.4194419179160665, -0.3025496652527934, -0.8353139856827593, -0.1119553253833137, -0.116795019784654], [7.244991838851135, -3.3510062956777573, 0.7556409244718216, -0.307150955672696, -0.4193344503831749, 1.8848810073818183, 0.2575385650557603, -0.3025496652527934, -0.8339049045812341, -0.1113704170206572, 0.0391402974897855], [7.204290290182743, -3.3510062956777573, 0.7697853918787915, -0.2944611201821453, -0.4181838320881784, 1.894928652558916, 0.095635212195454, -0.3025496652527934, -0.8268594990736077, -0.1107855086580008, 0.195075614764225], [6.932946632393466, -3.337926760724711, 0.9129445468463024, -0.324916725359467, -0.4164917463602424, 0.3576389404629606, 0.2273288945347038, -0.3062955744034817, -0.8240413368705573, -0.1090144694050246, 0.6925218725125962], [7.087069830017774, -3.3422866057090603, 0.8403648555054885, -0.3299926595556873, -0.4201466515325842, -0.0040762859125582, -0.0364680927949286, -0.3047972107432061, -0.8254504179720824, -0.1118155370049809, -0.1888340018813851], [7.130484815264059, -3.3466464506934086, 0.8232200465273434, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1634511146461492, -0.3047972107432061, -0.8247458774213198, -0.1121302264822702, -0.1948048644585413], [7.349730490757795, -3.3510062956777573, 0.7134932690672151, -0.3299926595556873, -0.3895537415715006, -0.4964108995903478, -0.1564875295768887, -0.3047972107432061, -0.8148823097106429, -0.1121428140613618, -0.1949057827569551], [6.851543535056682, -3.3444665282012345, 0.9672364419437616, -0.3299926595556873, -0.4204850686781715, -0.5366014802987388, -0.1548490389723568, -0.3047972107432061, -0.8134732286091177, -0.1121057138282498, -0.1948412388045821], [6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Uq1X2YL3,"[[7.285693387519527, -3.3510062956777573, 0.7414964570648521, -0.3198407911632467, -0.4204850686781715, 1.8748333622047209, 0.4194419179160665, -0.3025496652527934, -0.8353139856827593, -0.1119553253833137, -0.116795019784654], [7.244991838851135, -3.3510062956777573, 0.7556409244718216, -0.307150955672696, -0.4193344503831749, 1.8848810073818183, 0.2575385650557603, -0.3025496652527934, -0.8339049045812341, -0.1113704170206572, 0.0391402974897855], [7.204290290182743, -3.3510062956777573, 0.7697853918787915, -0.2944611201821453, -0.4181838320881784, 1.894928652558916, 0.095635212195454, -0.3025496652527934, -0.8268594990736077, -0.1107855086580008, 0.195075614764225], [6.932946632393466, -3.337926760724711, 0.9129445468463024, -0.324916725359467, -0.4164917463602424, 0.3576389404629606, 0.2273288945347038, -0.3062955744034817, -0.8240413368705573, -0.1090144694050246, 0.6925218725125962], [7.087069830017774, -3.3422866057090603, 0.8403648555054885, -0.3299926595556873, -0.4201466515325842, -0.0040762859125582, -0.0364680927949286, -0.3047972107432061, -0.8254504179720824, -0.1118155370049809, -0.1888340018813851], [7.130484815264059, -3.3466464506934086, 0.8232200465273434, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1634511146461492, -0.3047972107432061, -0.8247458774213198, -0.1121302264822702, -0.1948048644585413], [7.349730490757795, -3.3510062956777573, 0.7134932690672151, -0.3299926595556873, -0.3895537415715006, -0.4964108995903478, -0.1564875295768887, -0.3047972107432061, -0.8148823097106429, -0.1121428140613618, -0.1949057827569551], [6.851543535056682, -3.3444665282012345, 0.9672364419437616, -0.3299926595556873, -0.4204850686781715, -0.5366014802987388, -0.1548490389723568, -0.3047972107432061, -0.8134732286091177, -0.1121057138282498, -0.1948412388045821], [6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274], [6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
wbIx72HM,"[[7.244991838851135, -3.3510062956777573, 0.7556409244718216, -0.307150955672696, -0.4193344503831749, 1.8848810073818183, 0.2575385650557603, -0.3025496652527934, -0.8339049045812341, -0.1113704170206572, 0.0391402974897855], [7.204290290182743, -3.3510062956777573, 0.7697853918787915, -0.2944611201821453, -0.4181838320881784, 1.894928652558916, 0.095635212195454, -0.3025496652527934, -0.8268594990736077, -0.1107855086580008, 0.195075614764225], [6.932946632393466, -3.337926760724711, 0.9129445468463024, -0.324916725359467, -0.4164917463602424, 0.3576389404629606, 0.2273288945347038, -0.3062955744034817, -0.8240413368705573, -0.1090144694050246, 0.6925218725125962], [7.087069830017774, -3.3422866057090603, 0.8403648555054885, -0.3299926595556873, -0.4201466515325842, -0.0040762859125582, -0.0364680927949286, -0.3047972107432061, -0.8254504179720824, -0.1118155370049809, -0.1888340018813851], [7.130484815264059, -3.3466464506934086, 0.8232200465273434, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1634511146461492, -0.3047972107432061, -0.8247458774213198, -0.1121302264822702, -0.1948048644585413], [7.349730490757795, -3.3510062956777573, 0.7134932690672151, -0.3299926595556873, -0.3895537415715006, -0.4964108995903478, -0.1564875295768887, -0.3047972107432061, -0.8148823097106429, -0.1121428140613618, -0.1949057827569551], [6.851543535056682, -3.3444665282012345, 0.9672364419437616, -0.3299926595556873, -0.4204850686781715, -0.5366014802987388, -0.1548490389723568, -0.3047972107432061, -0.8134732286091177, -0.1121057138282498, -0.1948412388045821], [6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274], [6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551], [6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
3Ozm67jY,"[[7.204290290182743, -3.3510062956777573, 0.7697853918787915, -0.2944611201821453, -0.4181838320881784, 1.894928652558916, 0.095635212195454, -0.3025496652527934, -0.8268594990736077, -0.1107855086580008, 0.195075614764225], [6.932946632393466, -3.337926760724711, 0.9129445468463024, -0.324916725359467, -0.4164917463602424, 0.3576389404629606, 0.2273288945347038, -0.3062955744034817, -0.8240413368705573, -0.1090144694050246, 0.6925218725125962], [7.087069830017774, -3.3422866057090603, 0.8403648555054885, -0.3299926595556873, -0.4201466515325842, -0.0040762859125582, -0.0364680927949286, -0.3047972107432061, -0.8254504179720824, -0.1118155370049809, -0.1888340018813851], [7.130484815264059, -3.3466464506934086, 0.8232200465273434, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1634511146461492, -0.3047972107432061, -0.8247458774213198, -0.1121302264822702, -0.1948048644585413], [7.349730490757795, -3.3510062956777573, 0.7134932690672151, -0.3299926595556873, -0.3895537415715006, -0.4964108995903478, -0.1564875295768887, -0.3047972107432061, -0.8148823097106429, -0.1121428140613618, -0.1949057827569551], [6.851543535056682, -3.3444665282012345, 0.9672364419437616, -0.3299926595556873, -0.4204850686781715, -0.5366014802987388, -0.1548490389723568, -0.3047972107432061, -0.8134732286091177, -0.1121057138282498, -0.1948412388045821], [6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274], [6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551], [6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954], [6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ywb2IKjn,"[[7.087069830017774, -3.3422866057090603, 0.8403648555054885, -0.3299926595556873, -0.4201466515325842, -0.0040762859125582, -0.0364680927949286, -0.3047972107432061, -0.8254504179720824, -0.1118155370049809, -0.1888340018813851], [7.130484815264059, -3.3466464506934086, 0.8232200465273434, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1634511146461492, -0.3047972107432061, -0.8247458774213198, -0.1121302264822702, -0.1948048644585413], [7.349730490757795, -3.3510062956777573, 0.7134932690672151, -0.3299926595556873, -0.3895537415715006, -0.4964108995903478, -0.1564875295768887, -0.3047972107432061, -0.8148823097106429, -0.1121428140613618, -0.1949057827569551], [6.851543535056682, -3.3444665282012345, 0.9672364419437616, -0.3299926595556873, -0.4204850686781715, -0.5366014802987388, -0.1548490389723568, -0.3047972107432061, -0.8134732286091177, -0.1121057138282498, -0.1948412388045821], [6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274], [6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551], [6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954], [6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146], [6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
DOEJvFbx,"[[7.130484815264059, -3.3466464506934086, 0.8232200465273434, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1634511146461492, -0.3047972107432061, -0.8247458774213198, -0.1121302264822702, -0.1948048644585413], [7.349730490757795, -3.3510062956777573, 0.7134932690672151, -0.3299926595556873, -0.3895537415715006, -0.4964108995903478, -0.1564875295768887, -0.3047972107432061, -0.8148823097106429, -0.1121428140613618, -0.1949057827569551], [6.851543535056682, -3.3444665282012345, 0.9672364419437616, -0.3299926595556873, -0.4204850686781715, -0.5366014802987388, -0.1548490389723568, -0.3047972107432061, -0.8134732286091177, -0.1121057138282498, -0.1948412388045821], [6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274], [6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551], [6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954], [6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146], [6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
mOnNYAT2,"[[7.349730490757795, -3.3510062956777573, 0.7134932690672151, -0.3299926595556873, -0.3895537415715006, -0.4964108995903478, -0.1564875295768887, -0.3047972107432061, -0.8148823097106429, -0.1121428140613618, -0.1949057827569551], [6.851543535056682, -3.3444665282012345, 0.9672364419437616, -0.3299926595556873, -0.4204850686781715, -0.5366014802987388, -0.1548490389723568, -0.3047972107432061, -0.8134732286091177, -0.1121057138282498, -0.1948412388045821], [6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274], [6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551], [6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954], [6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146], [6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
G8en7tAv,"[[6.851543535056682, -3.3444665282012345, 0.9672364419437616, -0.3299926595556873, -0.4204850686781715, -0.5366014802987388, -0.1548490389723568, -0.3047972107432061, -0.8134732286091177, -0.1121057138282498, -0.1948412388045821], [6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274], [6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551], [6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954], [6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146], [6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551], [7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
lqhNUdQ4,"[[6.677883594071544, -3.3488263731855827, 1.0643903594865831, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1593548881348195, -0.2703348465568744, -0.8106550664060672, -0.1121769330257416, -0.1949112525834274], [6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551], [6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954], [6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146], [6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551], [7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451], [6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
b9OMiBgL,"[[6.50639440234872, -3.353186218169932, 1.160401289764195, -0.3299926595556873, -0.4204850686781715, -0.5868397061842275, -0.1626318693438832, -0.2680873010664614, -0.807132363652254, -0.1121428140613618, -0.1949057827569551], [6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954], [6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146], [6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551], [7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451], [6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787], [6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ImE2TVwU,"[[6.474918538045163, -3.3575460631542806, 1.1832610350683883, -0.3299926595556873, -0.4204850686781715, -0.5566967706529343, -0.1585356428325535, -0.2665889374061861, -0.8029051203476782, -0.1121259202052126, -0.1949027743523954], [6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146], [6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551], [7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451], [6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787], [6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132], [5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
JMc9fqRh,"[[6.669200597022287, -3.353186218169932, 1.0718197767104465, -0.324916725359467, -0.4147319772031889, -0.446172673704859, -0.0876709241865498, -0.2650905737459109, -0.8000869581446277, -0.1121239326927245, -0.1948890997862146], [6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551], [7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451], [6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787], [6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132], [5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098], [6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources""], [""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:""], [""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
958VIJ3o,"[[6.201404130993572, -3.3640858306308035, 1.3352783413412743, -0.3299926595556873, -0.4131075749043703, -0.5366014802987388, -0.1540297936700909, -0.2725823920472872, -0.7993824175938651, -0.1121143263823651, -0.1948874588382729], [6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551], [7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451], [6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787], [6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132], [5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098], [6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343], [5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>""], [""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
gBlnFVci,"[[6.569346130955832, -3.355366140662106, 1.130112127236139, -0.3299926595556873, -0.4204850686781715, -0.3657915122880771, -0.0925863960001454, -0.2725823920472872, -0.7972687959415772, -0.112075238636765, -0.1948929286647452], [7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551], [7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451], [6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787], [6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132], [5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098], [6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343], [5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324], [6.0906959186155465, -3.3640858306308035, 1.3935706918669677, -0.3299926595556873, -0.4191314000958226, 0.7896876830781638, 0.2342924796039643, -0.0021277513675954, -0.7331556058221776, -0.1096004543369454, 1.60776715078097]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>""], [""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>""], [""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
l5oUbMQK,"[[7.233595405223985, -3.3466464506934086, 0.762641721471231, -0.3198407911632467, -0.4204850686781715, 1.1313076190994873, 0.1892339879793376, -0.2643413919157731, -0.7951551742892893, -0.1119785130290086, -0.1946352998379002], [7.30305938161804, -3.3640858306308035, 0.7552123042473681, -0.3299926595556873, -0.4204850686781715, -0.2954579960483928, -0.0675994142810343, -0.2643413919157731, -0.7852916065786124, -0.1121418203051178, -0.1949057827569551], [7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451], [6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787], [6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132], [5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098], [6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343], [5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324], [6.0906959186155465, -3.3640858306308035, 1.3935706918669677, -0.3299926595556873, -0.4191314000958226, 0.7896876830781638, 0.2342924796039643, -0.0021277513675954, -0.7331556058221776, -0.1096004543369454, 1.60776715078097], [6.349015080830938, -3.3728055205995005, 1.2661276117960896, -0.324916725359467, 1.4293030491015075, 1.894928652558916, 0.4194419179160665, 0.0001197941228175, -0.7268147408653141, -0.1070392132438917, 3.9758721827480272]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:""], [""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)""], [""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
DP1AbalN,"[[7.027374225304134, -3.353186218169932, 0.8803694097878267, -0.3198407911632467, -0.4070160662838005, 0.860021199317848, 0.2134017243961828, -0.2643413919157731, -0.7585190656496325, -0.1120845136950429, -0.1947794297654451], [6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787], [6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132], [5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098], [6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343], [5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324], [6.0906959186155465, -3.3640858306308035, 1.3935706918669677, -0.3299926595556873, -0.4191314000958226, 0.7896876830781638, 0.2342924796039643, -0.0021277513675954, -0.7331556058221776, -0.1096004543369454, 1.60776715078097], [6.349015080830938, -3.3728055205995005, 1.2661276117960896, -0.324916725359467, 1.4293030491015075, 1.894928652558916, 0.4194419179160665, 0.0001197941228175, -0.7268147408653141, -0.1070392132438917, 3.9758721827480272], [5.478544626642935, -3.3771653655838496, 1.733037909634239, -0.3299926595556873, 0.4718532608061788, 1.894928652558916, 0.0044941723183683, 0.0001197941228175, -0.7099057676470109, -0.1121249264489685, -0.1948986719825411], [6.583456001160874, -3.3597259856464547, 1.1255401781753005, -0.324916725359467, 0.5369647196171576, 1.8848810073818183, 0.2531351215560809, 0.0001197941228175, -0.7092012270962482, -0.1121295639781075, -0.1949003129304828]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:""], [""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)""], [""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
uBZF4zaL,"[[6.454296420053178, -3.3575460631542806, 1.1935479204552757, -0.3299926595556873, -0.412295373754961, 0.4179248115255473, 0.0982977594278183, -0.1407263899430609, -0.7697917144618346, -0.1121295639781075, -0.1949060562482787], [6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132], [5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098], [6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343], [5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324], [6.0906959186155465, -3.3640858306308035, 1.3935706918669677, -0.3299926595556873, -0.4191314000958226, 0.7896876830781638, 0.2342924796039643, -0.0021277513675954, -0.7331556058221776, -0.1096004543369454, 1.60776715078097], [6.349015080830938, -3.3728055205995005, 1.2661276117960896, -0.324916725359467, 1.4293030491015075, 1.894928652558916, 0.4194419179160665, 0.0001197941228175, -0.7268147408653141, -0.1070392132438917, 3.9758721827480272], [5.478544626642935, -3.3771653655838496, 1.733037909634239, -0.3299926595556873, 0.4718532608061788, 1.894928652558916, 0.0044941723183683, 0.0001197941228175, -0.7099057676470109, -0.1121249264489685, -0.1948986719825411], [6.583456001160874, -3.3597259856464547, 1.1255401781753005, -0.324916725359467, 0.5369647196171576, 1.8848810073818183, 0.2531351215560809, 0.0001197941228175, -0.7092012270962482, -0.1121295639781075, -0.1949003129304828], [6.801616302023454, -3.3597259856464547, 1.0106699580217289, -0.324916725359467, -0.3978788033529459, 0.5987824247133066, 0.0339870031999421, 0.0001197941228175, -0.7021558215886219, -0.1121229389364804, -0.1948896467688619]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:""], [""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)""], [""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
N98nzDOt,"[[6.305600095584653, -3.3575460631542806, 1.271842548122138, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1495239445076282, -0.0178605698004862, -0.7641553900557335, -0.1118894062191236, -0.1948844504337132], [5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098], [6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343], [5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324], [6.0906959186155465, -3.3640858306308035, 1.3935706918669677, -0.3299926595556873, -0.4191314000958226, 0.7896876830781638, 0.2342924796039643, -0.0021277513675954, -0.7331556058221776, -0.1096004543369454, 1.60776715078097], [6.349015080830938, -3.3728055205995005, 1.2661276117960896, -0.324916725359467, 1.4293030491015075, 1.894928652558916, 0.4194419179160665, 0.0001197941228175, -0.7268147408653141, -0.1070392132438917, 3.9758721827480272], [5.478544626642935, -3.3771653655838496, 1.733037909634239, -0.3299926595556873, 0.4718532608061788, 1.894928652558916, 0.0044941723183683, 0.0001197941228175, -0.7099057676470109, -0.1121249264489685, -0.1948986719825411], [6.583456001160874, -3.3597259856464547, 1.1255401781753005, -0.324916725359467, 0.5369647196171576, 1.8848810073818183, 0.2531351215560809, 0.0001197941228175, -0.7092012270962482, -0.1121295639781075, -0.1949003129304828], [6.801616302023454, -3.3597259856464547, 1.0106699580217289, -0.324916725359467, -0.3978788033529459, 0.5987824247133066, 0.0339870031999421, 0.0001197941228175, -0.7021558215886219, -0.1121229389364804, -0.1948896467688619], [6.335990585257052, -3.3597259856464547, 1.2586981945722266, -0.3299926595556873, 2.4263476434305407, 0.7494971023697728, -0.1614030013904843, 0.0001197941228175, -0.7014512810378594, -0.1121454640780127, -0.1949085176701913]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:""], [""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)""], [""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
p4zFdEDw,"[[5.946341092671651, -3.3597259856464547, 1.4632929150447576, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1458373406474315, -0.0178605698004862, -0.7557009034465819, -0.1119987194059714, -0.194892381682098], [6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343], [5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324], [6.0906959186155465, -3.3640858306308035, 1.3935706918669677, -0.3299926595556873, -0.4191314000958226, 0.7896876830781638, 0.2342924796039643, -0.0021277513675954, -0.7331556058221776, -0.1096004543369454, 1.60776715078097], [6.349015080830938, -3.3728055205995005, 1.2661276117960896, -0.324916725359467, 1.4293030491015075, 1.894928652558916, 0.4194419179160665, 0.0001197941228175, -0.7268147408653141, -0.1070392132438917, 3.9758721827480272], [5.478544626642935, -3.3771653655838496, 1.733037909634239, -0.3299926595556873, 0.4718532608061788, 1.894928652558916, 0.0044941723183683, 0.0001197941228175, -0.7099057676470109, -0.1121249264489685, -0.1948986719825411], [6.583456001160874, -3.3597259856464547, 1.1255401781753005, -0.324916725359467, 0.5369647196171576, 1.8848810073818183, 0.2531351215560809, 0.0001197941228175, -0.7092012270962482, -0.1121295639781075, -0.1949003129304828], [6.801616302023454, -3.3597259856464547, 1.0106699580217289, -0.324916725359467, -0.3978788033529459, 0.5987824247133066, 0.0339870031999421, 0.0001197941228175, -0.7021558215886219, -0.1121229389364804, -0.1948896467688619], [6.335990585257052, -3.3597259856464547, 1.2586981945722266, -0.3299926595556873, 2.4263476434305407, 0.7494971023697728, -0.1614030013904843, 0.0001197941228175, -0.7014512810378594, -0.1121454640780127, -0.1949085176701913], [6.916666012926108, -3.355366140662106, 0.941519228476544, -0.3198407911632467, 0.2944549930893643, 1.894928652558916, -0.0553107347470452, 0.000868975952955, -0.7007467404870967, -0.1121378452801415, -0.1949060562482787]]",1,"[[""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>""], [""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
iImyhBu9,"[[6.022317316852647, -3.3575460631542806, 1.4210023862319996, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1691858317620107, -0.0178605698004862, -0.747950957388193, -0.1121398327926296, -0.194829205186343], [5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324], [6.0906959186155465, -3.3640858306308035, 1.3935706918669677, -0.3299926595556873, -0.4191314000958226, 0.7896876830781638, 0.2342924796039643, -0.0021277513675954, -0.7331556058221776, -0.1096004543369454, 1.60776715078097], [6.349015080830938, -3.3728055205995005, 1.2661276117960896, -0.324916725359467, 1.4293030491015075, 1.894928652558916, 0.4194419179160665, 0.0001197941228175, -0.7268147408653141, -0.1070392132438917, 3.9758721827480272], [5.478544626642935, -3.3771653655838496, 1.733037909634239, -0.3299926595556873, 0.4718532608061788, 1.894928652558916, 0.0044941723183683, 0.0001197941228175, -0.7099057676470109, -0.1121249264489685, -0.1948986719825411], [6.583456001160874, -3.3597259856464547, 1.1255401781753005, -0.324916725359467, 0.5369647196171576, 1.8848810073818183, 0.2531351215560809, 0.0001197941228175, -0.7092012270962482, -0.1121295639781075, -0.1949003129304828], [6.801616302023454, -3.3597259856464547, 1.0106699580217289, -0.324916725359467, -0.3978788033529459, 0.5987824247133066, 0.0339870031999421, 0.0001197941228175, -0.7021558215886219, -0.1121229389364804, -0.1948896467688619], [6.335990585257052, -3.3597259856464547, 1.2586981945722266, -0.3299926595556873, 2.4263476434305407, 0.7494971023697728, -0.1614030013904843, 0.0001197941228175, -0.7014512810378594, -0.1121454640780127, -0.1949085176701913], [6.916666012926108, -3.355366140662106, 0.941519228476544, -0.3198407911632467, 0.2944549930893643, 1.894928652558916, -0.0553107347470452, 0.000868975952955, -0.7007467404870967, -0.1121378452801415, -0.1949060562482787], [6.7147863315308856, -3.361905908138629, 1.0563894486301155, -0.3198407911632467, 0.8363962100327192, 1.904976297736014, 0.1044420991948129, 0.0488166130817647, -0.6965194971825208, -0.1121650079508127, -0.1949085176701913]]",1,"[[""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
rP5cLUp7,"[[5.960450962876693, -3.353186218169932, 1.4472910933318222, -0.3299926595556873, -0.4118215897511389, -0.5466491254758366, -0.1650896052506811, -0.0133654788196604, -0.7366783085759909, -0.111988119339368, -0.1947572769682324], [6.0906959186155465, -3.3640858306308035, 1.3935706918669677, -0.3299926595556873, -0.4191314000958226, 0.7896876830781638, 0.2342924796039643, -0.0021277513675954, -0.7331556058221776, -0.1096004543369454, 1.60776715078097], [6.349015080830938, -3.3728055205995005, 1.2661276117960896, -0.324916725359467, 1.4293030491015075, 1.894928652558916, 0.4194419179160665, 0.0001197941228175, -0.7268147408653141, -0.1070392132438917, 3.9758721827480272], [5.478544626642935, -3.3771653655838496, 1.733037909634239, -0.3299926595556873, 0.4718532608061788, 1.894928652558916, 0.0044941723183683, 0.0001197941228175, -0.7099057676470109, -0.1121249264489685, -0.1948986719825411], [6.583456001160874, -3.3597259856464547, 1.1255401781753005, -0.324916725359467, 0.5369647196171576, 1.8848810073818183, 0.2531351215560809, 0.0001197941228175, -0.7092012270962482, -0.1121295639781075, -0.1949003129304828], [6.801616302023454, -3.3597259856464547, 1.0106699580217289, -0.324916725359467, -0.3978788033529459, 0.5987824247133066, 0.0339870031999421, 0.0001197941228175, -0.7021558215886219, -0.1121229389364804, -0.1948896467688619], [6.335990585257052, -3.3597259856464547, 1.2586981945722266, -0.3299926595556873, 2.4263476434305407, 0.7494971023697728, -0.1614030013904843, 0.0001197941228175, -0.7014512810378594, -0.1121454640780127, -0.1949085176701913], [6.916666012926108, -3.355366140662106, 0.941519228476544, -0.3198407911632467, 0.2944549930893643, 1.894928652558916, -0.0553107347470452, 0.000868975952955, -0.7007467404870967, -0.1121378452801415, -0.1949060562482787], [6.7147863315308856, -3.361905908138629, 1.0563894486301155, -0.3198407911632467, 0.8363962100327192, 1.904976297736014, 0.1044420991948129, 0.0488166130817647, -0.6965194971825208, -0.1121650079508127, -0.1949085176701913], [6.157989145747286, -3.366265753122978, 1.360995554808492, -0.3299926595556873, 2.3068187076091387, 1.894928652558916, 0.3256383308066165, 0.0503149767420399, -0.6958149566317583, -0.1121398327926296, -0.1949071502135732]]",1,"[[""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
2K9gEZLM,"[[6.349015080830938, -3.3728055205995005, 1.2661276117960896, -0.324916725359467, 1.4293030491015075, 1.894928652558916, 0.4194419179160665, 0.0001197941228175, -0.7268147408653141, -0.1070392132438917, 3.9758721827480272], [5.478544626642935, -3.3771653655838496, 1.733037909634239, -0.3299926595556873, 0.4718532608061788, 1.894928652558916, 0.0044941723183683, 0.0001197941228175, -0.7099057676470109, -0.1121249264489685, -0.1948986719825411], [6.583456001160874, -3.3597259856464547, 1.1255401781753005, -0.324916725359467, 0.5369647196171576, 1.8848810073818183, 0.2531351215560809, 0.0001197941228175, -0.7092012270962482, -0.1121295639781075, -0.1949003129304828], [6.801616302023454, -3.3597259856464547, 1.0106699580217289, -0.324916725359467, -0.3978788033529459, 0.5987824247133066, 0.0339870031999421, 0.0001197941228175, -0.7021558215886219, -0.1121229389364804, -0.1948896467688619], [6.335990585257052, -3.3597259856464547, 1.2586981945722266, -0.3299926595556873, 2.4263476434305407, 0.7494971023697728, -0.1614030013904843, 0.0001197941228175, -0.7014512810378594, -0.1121454640780127, -0.1949085176701913], [6.916666012926108, -3.355366140662106, 0.941519228476544, -0.3198407911632467, 0.2944549930893643, 1.894928652558916, -0.0553107347470452, 0.000868975952955, -0.7007467404870967, -0.1121378452801415, -0.1949060562482787], [6.7147863315308856, -3.361905908138629, 1.0563894486301155, -0.3198407911632467, 0.8363962100327192, 1.904976297736014, 0.1044420991948129, 0.0488166130817647, -0.6965194971825208, -0.1121650079508127, -0.1949085176701913], [6.157989145747286, -3.366265753122978, 1.360995554808492, -0.3299926595556873, 2.3068187076091387, 1.894928652558916, 0.3256383308066165, 0.0503149767420399, -0.6958149566317583, -0.1121398327926296, -0.1949071502135732], [7.253132148584812, -3.3488263731855827, 0.755783797879973, -0.3198407911632467, 1.5093725457474412, 1.894928652558916, -0.1695954544131437, 0.0503149767420399, -0.6937013349794704, -0.1121378452801415, -0.1949022273697481], [7.272668891945641, -3.3488263731855827, 0.7426394443300618, -0.3147648569670264, 3.1310675074013425, 1.894928652558916, -0.1646799825995481, 0.0503149767420399, -0.6937013349794704, -0.112127245213538, -0.1949076971962204]]",1,"[[""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
FP0jXcw2,"[[5.478544626642935, -3.3771653655838496, 1.733037909634239, -0.3299926595556873, 0.4718532608061788, 1.894928652558916, 0.0044941723183683, 0.0001197941228175, -0.7099057676470109, -0.1121249264489685, -0.1948986719825411], [6.583456001160874, -3.3597259856464547, 1.1255401781753005, -0.324916725359467, 0.5369647196171576, 1.8848810073818183, 0.2531351215560809, 0.0001197941228175, -0.7092012270962482, -0.1121295639781075, -0.1949003129304828], [6.801616302023454, -3.3597259856464547, 1.0106699580217289, -0.324916725359467, -0.3978788033529459, 0.5987824247133066, 0.0339870031999421, 0.0001197941228175, -0.7021558215886219, -0.1121229389364804, -0.1948896467688619], [6.335990585257052, -3.3597259856464547, 1.2586981945722266, -0.3299926595556873, 2.4263476434305407, 0.7494971023697728, -0.1614030013904843, 0.0001197941228175, -0.7014512810378594, -0.1121454640780127, -0.1949085176701913], [6.916666012926108, -3.355366140662106, 0.941519228476544, -0.3198407911632467, 0.2944549930893643, 1.894928652558916, -0.0553107347470452, 0.000868975952955, -0.7007467404870967, -0.1121378452801415, -0.1949060562482787], [6.7147863315308856, -3.361905908138629, 1.0563894486301155, -0.3198407911632467, 0.8363962100327192, 1.904976297736014, 0.1044420991948129, 0.0488166130817647, -0.6965194971825208, -0.1121650079508127, -0.1949085176701913], [6.157989145747286, -3.366265753122978, 1.360995554808492, -0.3299926595556873, 2.3068187076091387, 1.894928652558916, 0.3256383308066165, 0.0503149767420399, -0.6958149566317583, -0.1121398327926296, -0.1949071502135732], [7.253132148584812, -3.3488263731855827, 0.755783797879973, -0.3198407911632467, 1.5093725457474412, 1.894928652558916, -0.1695954544131437, 0.0503149767420399, -0.6937013349794704, -0.1121378452801415, -0.1949022273697481], [7.272668891945641, -3.3488263731855827, 0.7426394443300618, -0.3147648569670264, 3.1310675074013425, 1.894928652558916, -0.1646799825995481, 0.0503149767420399, -0.6937013349794704, -0.112127245213538, -0.1949076971962204], [7.3855478535859795, -3.353186218169932, 0.6917765110282315, -0.3198407911632467, 2.163871305313102, 1.894928652558916, -0.1429699820895007, 0.0533117040625905, -0.6937013349794704, -0.1118894062191236, -0.1948860913816549]]",1,"[[""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Bl03fOEw,"[[6.627956361038317, -3.3575460631542806, 1.099251471075478, -0.324916725359467, 1.93665803376585, 0.066257230327126, -0.1589452654836865, 0.0817806136078214, -0.688769551124132, -0.1121418203051178, -0.1949055092656315], [7.231424655961671, -3.3466464506934086, 0.7614987342060214, -0.3147648569670264, 0.6543954691359188, 1.894928652558916, -0.1634511146461492, 0.0817806136078214, -0.6859513889210813, -0.112141157800955, -0.1949038683176898], [6.770140437719899, -3.3488263731855827, 1.0129559325521482, -0.324916725359467, -0.0887008991444726, 0.267210133869081, -0.1454277179962985, 0.0817806136078214, -0.6859513889210813, -0.1121567266487788, -0.194915081461958], [6.520504272553762, -3.3488263731855827, 1.1472569362142844, -0.3299926595556873, -0.3607206007674705, 0.0461619399729305, -0.1454277179962985, 0.0832789772680966, -0.6859513889210813, -0.1121186326594227, -0.1948975780172467], [6.568260756324674, -3.361905908138629, 1.1392560253578166, -0.3299926595556873, -0.4028873771076366, -0.3155532864025883, -0.1274043213464478, 0.1222364324352544, -0.6845423078195562, -0.1121421515571991, -0.1949022273697481], [5.9767315823440486, -3.3706255981073263, 1.4621499277795478, -0.3299926595556873, -0.4089788857282064, -0.3055056412254905, -0.1265850760441819, 0.1237347960955297, -0.6838377672687935, -0.1121590454133483, -0.1949085176701913], [5.914865228368094, -3.3749854430916755, 1.5004400011640715, -0.3299926595556873, -0.3937467300053261, -0.2587840911519861, -0.1631674509602396, 0.1237347960955297, -0.6824286861672683, -0.1121418203051178, -0.1949055092656315], [6.540041015914591, -3.3488263731855827, 1.1369700508273972, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1593548881348195, 0.1237347960955297, -0.6810196050657431, -0.1121206201719109, -0.1948975780172467], [6.545467889070376, -3.355366140662106, 1.1426849871534457, -0.3299926595556873, -0.4203497018199366, -0.5165061899445433, -0.1474758312519634, 0.1237347960955297, -0.6803150645149804, -0.112116976399016, -0.1949049622829843], [6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
KXMJpwdE,"[[7.231424655961671, -3.3466464506934086, 0.7614987342060214, -0.3147648569670264, 0.6543954691359188, 1.894928652558916, -0.1634511146461492, 0.0817806136078214, -0.6859513889210813, -0.112141157800955, -0.1949038683176898], [6.770140437719899, -3.3488263731855827, 1.0129559325521482, -0.324916725359467, -0.0887008991444726, 0.267210133869081, -0.1454277179962985, 0.0817806136078214, -0.6859513889210813, -0.1121567266487788, -0.194915081461958], [6.520504272553762, -3.3488263731855827, 1.1472569362142844, -0.3299926595556873, -0.3607206007674705, 0.0461619399729305, -0.1454277179962985, 0.0832789772680966, -0.6859513889210813, -0.1121186326594227, -0.1948975780172467], [6.568260756324674, -3.361905908138629, 1.1392560253578166, -0.3299926595556873, -0.4028873771076366, -0.3155532864025883, -0.1274043213464478, 0.1222364324352544, -0.6845423078195562, -0.1121421515571991, -0.1949022273697481], [5.9767315823440486, -3.3706255981073263, 1.4621499277795478, -0.3299926595556873, -0.4089788857282064, -0.3055056412254905, -0.1265850760441819, 0.1237347960955297, -0.6838377672687935, -0.1121590454133483, -0.1949085176701913], [5.914865228368094, -3.3749854430916755, 1.5004400011640715, -0.3299926595556873, -0.3937467300053261, -0.2587840911519861, -0.1631674509602396, 0.1237347960955297, -0.6824286861672683, -0.1121418203051178, -0.1949055092656315], [6.540041015914591, -3.3488263731855827, 1.1369700508273972, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1593548881348195, 0.1237347960955297, -0.6810196050657431, -0.1121206201719109, -0.1948975780172467], [6.545467889070376, -3.355366140662106, 1.1426849871534457, -0.3299926595556873, -0.4203497018199366, -0.5165061899445433, -0.1474758312519634, 0.1237347960955297, -0.6803150645149804, -0.112116976399016, -0.1949049622829843], [6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132], [5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
eN5ypMkV,"[[6.770140437719899, -3.3488263731855827, 1.0129559325521482, -0.324916725359467, -0.0887008991444726, 0.267210133869081, -0.1454277179962985, 0.0817806136078214, -0.6859513889210813, -0.1121567266487788, -0.194915081461958], [6.520504272553762, -3.3488263731855827, 1.1472569362142844, -0.3299926595556873, -0.3607206007674705, 0.0461619399729305, -0.1454277179962985, 0.0832789772680966, -0.6859513889210813, -0.1121186326594227, -0.1948975780172467], [6.568260756324674, -3.361905908138629, 1.1392560253578166, -0.3299926595556873, -0.4028873771076366, -0.3155532864025883, -0.1274043213464478, 0.1222364324352544, -0.6845423078195562, -0.1121421515571991, -0.1949022273697481], [5.9767315823440486, -3.3706255981073263, 1.4621499277795478, -0.3299926595556873, -0.4089788857282064, -0.3055056412254905, -0.1265850760441819, 0.1237347960955297, -0.6838377672687935, -0.1121590454133483, -0.1949085176701913], [5.914865228368094, -3.3749854430916755, 1.5004400011640715, -0.3299926595556873, -0.3937467300053261, -0.2587840911519861, -0.1631674509602396, 0.1237347960955297, -0.6824286861672683, -0.1121418203051178, -0.1949055092656315], [6.540041015914591, -3.3488263731855827, 1.1369700508273972, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1593548881348195, 0.1237347960955297, -0.6810196050657431, -0.1121206201719109, -0.1948975780172467], [6.545467889070376, -3.355366140662106, 1.1426849871534457, -0.3299926595556873, -0.4203497018199366, -0.5165061899445433, -0.1474758312519634, 0.1237347960955297, -0.6803150645149804, -0.112116976399016, -0.1949049622829843], [6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132], [5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011], [5.315738431969368, -3.366265753122978, 1.8016171455468188, -0.324916725359467, 2.1368656170952423, 0.6892112313071863, -0.1507528124610271, 0.1214872506051167, -0.6767923617611672, -0.1121590454133483, -0.1949085176701913]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Got assigned task <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
0wsFS2E3,"[[6.568260756324674, -3.361905908138629, 1.1392560253578166, -0.3299926595556873, -0.4028873771076366, -0.3155532864025883, -0.1274043213464478, 0.1222364324352544, -0.6845423078195562, -0.1121421515571991, -0.1949022273697481], [5.9767315823440486, -3.3706255981073263, 1.4621499277795478, -0.3299926595556873, -0.4089788857282064, -0.3055056412254905, -0.1265850760441819, 0.1237347960955297, -0.6838377672687935, -0.1121590454133483, -0.1949085176701913], [5.914865228368094, -3.3749854430916755, 1.5004400011640715, -0.3299926595556873, -0.3937467300053261, -0.2587840911519861, -0.1631674509602396, 0.1237347960955297, -0.6824286861672683, -0.1121418203051178, -0.1949055092656315], [6.540041015914591, -3.3488263731855827, 1.1369700508273972, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1593548881348195, 0.1237347960955297, -0.6810196050657431, -0.1121206201719109, -0.1948975780172467], [6.545467889070376, -3.355366140662106, 1.1426849871534457, -0.3299926595556873, -0.4203497018199366, -0.5165061899445433, -0.1474758312519634, 0.1237347960955297, -0.6803150645149804, -0.112116976399016, -0.1949049622829843], [6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132], [5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011], [5.315738431969368, -3.366265753122978, 1.8016171455468188, -0.324916725359467, 2.1368656170952423, 0.6892112313071863, -0.1507528124610271, 0.1214872506051167, -0.6767923617611672, -0.1121590454133483, -0.1949085176701913], [6.677883594071544, -3.3575460631542806, 1.0643903594865831, -0.3096889227708062, 1.114372053418052, 1.894928652558916, -0.1626318693438832, 0.1214872506051167, -0.675383280659642, -0.1120609947972666, -0.1941383661028923], [6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
DJlUVvZT,"[[5.9767315823440486, -3.3706255981073263, 1.4621499277795478, -0.3299926595556873, -0.4089788857282064, -0.3055056412254905, -0.1265850760441819, 0.1237347960955297, -0.6838377672687935, -0.1121590454133483, -0.1949085176701913], [5.914865228368094, -3.3749854430916755, 1.5004400011640715, -0.3299926595556873, -0.3937467300053261, -0.2587840911519861, -0.1631674509602396, 0.1237347960955297, -0.6824286861672683, -0.1121418203051178, -0.1949055092656315], [6.540041015914591, -3.3488263731855827, 1.1369700508273972, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1593548881348195, 0.1237347960955297, -0.6810196050657431, -0.1121206201719109, -0.1948975780172467], [6.545467889070376, -3.355366140662106, 1.1426849871534457, -0.3299926595556873, -0.4203497018199366, -0.5165061899445433, -0.1474758312519634, 0.1237347960955297, -0.6803150645149804, -0.112116976399016, -0.1949049622829843], [6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132], [5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011], [5.315738431969368, -3.366265753122978, 1.8016171455468188, -0.324916725359467, 2.1368656170952423, 0.6892112313071863, -0.1507528124610271, 0.1214872506051167, -0.6767923617611672, -0.1121590454133483, -0.1949085176701913], [6.677883594071544, -3.3575460631542806, 1.0643903594865831, -0.3096889227708062, 1.114372053418052, 1.894928652558916, -0.1626318693438832, 0.1214872506051167, -0.675383280659642, -0.1120609947972666, -0.1941383661028923], [6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804], [5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>""], [""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
iMvfna3H,"[[5.914865228368094, -3.3749854430916755, 1.5004400011640715, -0.3299926595556873, -0.3937467300053261, -0.2587840911519861, -0.1631674509602396, 0.1237347960955297, -0.6824286861672683, -0.1121418203051178, -0.1949055092656315], [6.540041015914591, -3.3488263731855827, 1.1369700508273972, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1593548881348195, 0.1237347960955297, -0.6810196050657431, -0.1121206201719109, -0.1948975780172467], [6.545467889070376, -3.355366140662106, 1.1426849871534457, -0.3299926595556873, -0.4203497018199366, -0.5165061899445433, -0.1474758312519634, 0.1237347960955297, -0.6803150645149804, -0.112116976399016, -0.1949049622829843], [6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132], [5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011], [5.315738431969368, -3.366265753122978, 1.8016171455468188, -0.324916725359467, 2.1368656170952423, 0.6892112313071863, -0.1507528124610271, 0.1214872506051167, -0.6767923617611672, -0.1121590454133483, -0.1949085176701913], [6.677883594071544, -3.3575460631542806, 1.0643903594865831, -0.3096889227708062, 1.114372053418052, 1.894928652558916, -0.1626318693438832, 0.1214872506051167, -0.675383280659642, -0.1120609947972666, -0.1941383661028923], [6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804], [5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073], [5.555606225455089, -3.361905908138629, 1.6724595845781265, -0.3299926595556873, -0.4204850686781715, 0.5284489084736225, 0.3002417264363724, 0.1971546154490195, -0.6521334424844751, -0.1120192570350156, -0.1814505566177589]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
sbQJwLae,"[[6.540041015914591, -3.3488263731855827, 1.1369700508273972, -0.3299926595556873, -0.4204850686781715, -0.5767920610071298, -0.1593548881348195, 0.1237347960955297, -0.6810196050657431, -0.1121206201719109, -0.1948975780172467], [6.545467889070376, -3.355366140662106, 1.1426849871534457, -0.3299926595556873, -0.4203497018199366, -0.5165061899445433, -0.1474758312519634, 0.1237347960955297, -0.6803150645149804, -0.112116976399016, -0.1949049622829843], [6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132], [5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011], [5.315738431969368, -3.366265753122978, 1.8016171455468188, -0.324916725359467, 2.1368656170952423, 0.6892112313071863, -0.1507528124610271, 0.1214872506051167, -0.6767923617611672, -0.1121590454133483, -0.1949085176701913], [6.677883594071544, -3.3575460631542806, 1.0643903594865831, -0.3096889227708062, 1.114372053418052, 1.894928652558916, -0.1626318693438832, 0.1214872506051167, -0.675383280659642, -0.1120609947972666, -0.1941383661028923], [6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804], [5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073], [5.555606225455089, -3.361905908138629, 1.6724595845781265, -0.3299926595556873, -0.4204850686781715, 0.5284489084736225, 0.3002417264363724, 0.1971546154490195, -0.6521334424844751, -0.1120192570350156, -0.1814505566177589], [0.7170061197566862, -0.9757627482045944, 1.0803921811995183, -0.3096889227708062, -0.4118215897511389, -0.3959344478193703, -0.1552586616234898, 0.2106398883914972, -0.6267699826570203, 0.1641522282340943, -0.1943008199491194]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
rQv8VJ56,"[[6.545467889070376, -3.355366140662106, 1.1426849871534457, -0.3299926595556873, -0.4203497018199366, -0.5165061899445433, -0.1474758312519634, 0.1237347960955297, -0.6803150645149804, -0.112116976399016, -0.1949049622829843], [6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132], [5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011], [5.315738431969368, -3.366265753122978, 1.8016171455468188, -0.324916725359467, 2.1368656170952423, 0.6892112313071863, -0.1507528124610271, 0.1214872506051167, -0.6767923617611672, -0.1121590454133483, -0.1949085176701913], [6.677883594071544, -3.3575460631542806, 1.0643903594865831, -0.3096889227708062, 1.114372053418052, 1.894928652558916, -0.1626318693438832, 0.1214872506051167, -0.675383280659642, -0.1120609947972666, -0.1941383661028923], [6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804], [5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073], [5.555606225455089, -3.361905908138629, 1.6724595845781265, -0.3299926595556873, -0.4204850686781715, 0.5284489084736225, 0.3002417264363724, 0.1971546154490195, -0.6521334424844751, -0.1120192570350156, -0.1814505566177589], [0.7170061197566862, -0.9757627482045944, 1.0803921811995183, -0.3096889227708062, -0.4118215897511389, -0.3959344478193703, -0.1552586616234898, 0.2106398883914972, -0.6267699826570203, 0.1641522282340943, -0.1943008199491194], [-0.1957939450464447, -1.0991463612616623, 1.4250028416602336, 0.2192234204753469, -0.4204850686781715, 0.468163037411036, 2.544973854645046, 0.1297282507366308, -0.6133837121925304, -0.1110241757826186, 0.0895498080214623]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
vZyzCFos,"[[6.472747788782849, -3.355366140662106, 1.1809750605379692, -0.3299926595556873, -0.4204850686781715, -0.526553835121641, -0.1200311136260544, 0.1237347960955297, -0.6796105239642177, -0.1118894062191236, -0.1948844504337132], [5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011], [5.315738431969368, -3.366265753122978, 1.8016171455468188, -0.324916725359467, 2.1368656170952423, 0.6892112313071863, -0.1507528124610271, 0.1214872506051167, -0.6767923617611672, -0.1121590454133483, -0.1949085176701913], [6.677883594071544, -3.3575460631542806, 1.0643903594865831, -0.3096889227708062, 1.114372053418052, 1.894928652558916, -0.1626318693438832, 0.1214872506051167, -0.675383280659642, -0.1120609947972666, -0.1941383661028923], [6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804], [5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073], [5.555606225455089, -3.361905908138629, 1.6724595845781265, -0.3299926595556873, -0.4204850686781715, 0.5284489084736225, 0.3002417264363724, 0.1971546154490195, -0.6521334424844751, -0.1120192570350156, -0.1814505566177589], [0.7170061197566862, -0.9757627482045944, 1.0803921811995183, -0.3096889227708062, -0.4118215897511389, -0.3959344478193703, -0.1552586616234898, 0.2106398883914972, -0.6267699826570203, 0.1641522282340943, -0.1943008199491194], [-0.1957939450464447, -1.0991463612616623, 1.4250028416602336, 0.2192234204753469, -0.4204850686781715, 0.468163037411036, 2.544973854645046, 0.1297282507366308, -0.6133837121925304, -0.1110241757826186, 0.0895498080214623], [0.2177337894244147, -2.049592567849676, 2.3685388290908143, 0.3715014463619552, -0.4204850686781715, 1.663832813485668, 7.361316986666503, 0.1297282507366308, -0.6091564688879545, -0.1119112688564931, -0.0825722299867752]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
kUlx1q4H,"[[5.9365727209912365, -3.366265753122978, 1.4775802558598785, -0.3299926595556873, -0.4204850686781715, -0.48636325441325, -0.1380545102759051, 0.1214872506051167, -0.6789059834134551, -0.1114988600152035, -0.1926954258795011], [5.315738431969368, -3.366265753122978, 1.8016171455468188, -0.324916725359467, 2.1368656170952423, 0.6892112313071863, -0.1507528124610271, 0.1214872506051167, -0.6767923617611672, -0.1121590454133483, -0.1949085176701913], [6.677883594071544, -3.3575460631542806, 1.0643903594865831, -0.3096889227708062, 1.114372053418052, 1.894928652558916, -0.1626318693438832, 0.1214872506051167, -0.675383280659642, -0.1120609947972666, -0.1941383661028923], [6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804], [5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073], [5.555606225455089, -3.361905908138629, 1.6724595845781265, -0.3299926595556873, -0.4204850686781715, 0.5284489084736225, 0.3002417264363724, 0.1971546154490195, -0.6521334424844751, -0.1120192570350156, -0.1814505566177589], [0.7170061197566862, -0.9757627482045944, 1.0803921811995183, -0.3096889227708062, -0.4118215897511389, -0.3959344478193703, -0.1552586616234898, 0.2106398883914972, -0.6267699826570203, 0.1641522282340943, -0.1943008199491194], [-0.1957939450464447, -1.0991463612616623, 1.4250028416602336, 0.2192234204753469, -0.4204850686781715, 0.468163037411036, 2.544973854645046, 0.1297282507366308, -0.6133837121925304, -0.1110241757826186, 0.0895498080214623], [0.2177337894244147, -2.049592567849676, 2.3685388290908143, 0.3715014463619552, -0.4204850686781715, 1.663832813485668, 7.361316986666503, 0.1297282507366308, -0.6091564688879545, -0.1119112688564931, -0.0825722299867752], [-0.0536098683648631, -1.728707977001612, 1.7147501133908845, 1.037464012906056, 0.5974737052481504, 1.894928652558916, 5.859640347613037, 0.1544512511311734, -0.520384359491863, -0.1115339727358273, -0.1948967575432758]]",1,"[[""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""padding""]]",0
y8XoZl9d,"[[6.677883594071544, -3.3575460631542806, 1.0643903594865831, -0.3096889227708062, 1.114372053418052, 1.894928652558916, -0.1626318693438832, 0.1214872506051167, -0.675383280659642, -0.1120609947972666, -0.1941383661028923], [6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804], [5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073], [5.555606225455089, -3.361905908138629, 1.6724595845781265, -0.3299926595556873, -0.4204850686781715, 0.5284489084736225, 0.3002417264363724, 0.1971546154490195, -0.6521334424844751, -0.1120192570350156, -0.1814505566177589], [0.7170061197566862, -0.9757627482045944, 1.0803921811995183, -0.3096889227708062, -0.4118215897511389, -0.3959344478193703, -0.1552586616234898, 0.2106398883914972, -0.6267699826570203, 0.1641522282340943, -0.1943008199491194], [-0.1957939450464447, -1.0991463612616623, 1.4250028416602336, 0.2192234204753469, -0.4204850686781715, 0.468163037411036, 2.544973854645046, 0.1297282507366308, -0.6133837121925304, -0.1110241757826186, 0.0895498080214623], [0.2177337894244147, -2.049592567849676, 2.3685388290908143, 0.3715014463619552, -0.4204850686781715, 1.663832813485668, 7.361316986666503, 0.1297282507366308, -0.6091564688879545, -0.1119112688564931, -0.0825722299867752], [-0.0536098683648631, -1.728707977001612, 1.7147501133908845, 1.037464012906056, 0.5974737052481504, 1.894928652558916, 5.859640347613037, 0.1544512511311734, -0.520384359491863, -0.1115339727358273, -0.1948967575432758], [-0.1730010777921454, -1.5259751852293983, 2.1067947453578, -0.0183302999077621, 2.309593728202953, 1.1614505546307805, 0.3579985202461211, 0.1559496147914487, -0.4886800347075446, -0.1041182323904841, -0.1816811098035661], [-0.1947085704152876, -1.6890333876440389, 1.8753398241528427, 0.7928039846482384, -0.4043764125482204, 1.6035469424230815, 0.0647087020349148, 0.1559496147914487, -0.4830437103014435, -0.1032255080312265, -0.1874941678869967]]",1,"[[""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Input split: <*>"", ""Successfully loaded & initialized native-zlib library""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>""], [""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null""]]",0
kLl2zUMT,"[[6.130854779968359, -3.3728055205995005, 1.3838553001126856, -0.3299926595556873, 2.043327118054938, 1.894928652558916, -0.1585356428325535, 0.1229856142653919, -0.6718605779058288, -0.1119665879540798, -0.194609865144804], [5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073], [5.555606225455089, -3.361905908138629, 1.6724595845781265, -0.3299926595556873, -0.4204850686781715, 0.5284489084736225, 0.3002417264363724, 0.1971546154490195, -0.6521334424844751, -0.1120192570350156, -0.1814505566177589], [0.7170061197566862, -0.9757627482045944, 1.0803921811995183, -0.3096889227708062, -0.4118215897511389, -0.3959344478193703, -0.1552586616234898, 0.2106398883914972, -0.6267699826570203, 0.1641522282340943, -0.1943008199491194], [-0.1957939450464447, -1.0991463612616623, 1.4250028416602336, 0.2192234204753469, -0.4204850686781715, 0.468163037411036, 2.544973854645046, 0.1297282507366308, -0.6133837121925304, -0.1110241757826186, 0.0895498080214623], [0.2177337894244147, -2.049592567849676, 2.3685388290908143, 0.3715014463619552, -0.4204850686781715, 1.663832813485668, 7.361316986666503, 0.1297282507366308, -0.6091564688879545, -0.1119112688564931, -0.0825722299867752], [-0.0536098683648631, -1.728707977001612, 1.7147501133908845, 1.037464012906056, 0.5974737052481504, 1.894928652558916, 5.859640347613037, 0.1544512511311734, -0.520384359491863, -0.1115339727358273, -0.1948967575432758], [-0.1730010777921454, -1.5259751852293983, 2.1067947453578, -0.0183302999077621, 2.309593728202953, 1.1614505546307805, 0.3579985202461211, 0.1559496147914487, -0.4886800347075446, -0.1041182323904841, -0.1816811098035661], [-0.1947085704152876, -1.6890333876440389, 1.8753398241528427, 0.7928039846482384, -0.4043764125482204, 1.6035469424230815, 0.0647087020349148, 0.1559496147914487, -0.4830437103014435, -0.1032255080312265, -0.1874941678869967], [-0.2055623167268587, 0.1325098468168409, -0.6580914491843862, 1.060813310208669, -0.4201466515325842, 1.8848810073818183, 0.1925109691884014, 0.1559496147914487, -0.4809300886491556, -0.0861832509495622, -0.1811319392257478]]",1,"[[""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Input split: <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms""], [""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""]]",0
horfg7ME,"[[5.785705647260397, -3.3640858306308035, 1.551302934465902, -0.324916725359467, 0.4012594442366872, 1.894928652558916, -0.0163965828894131, 0.1259823415859428, -0.6598833885428641, -0.111997394397646, -0.1899993484113073], [5.555606225455089, -3.361905908138629, 1.6724595845781265, -0.3299926595556873, -0.4204850686781715, 0.5284489084736225, 0.3002417264363724, 0.1971546154490195, -0.6521334424844751, -0.1120192570350156, -0.1814505566177589], [0.7170061197566862, -0.9757627482045944, 1.0803921811995183, -0.3096889227708062, -0.4118215897511389, -0.3959344478193703, -0.1552586616234898, 0.2106398883914972, -0.6267699826570203, 0.1641522282340943, -0.1943008199491194], [-0.1957939450464447, -1.0991463612616623, 1.4250028416602336, 0.2192234204753469, -0.4204850686781715, 0.468163037411036, 2.544973854645046, 0.1297282507366308, -0.6133837121925304, -0.1110241757826186, 0.0895498080214623], [0.2177337894244147, -2.049592567849676, 2.3685388290908143, 0.3715014463619552, -0.4204850686781715, 1.663832813485668, 7.361316986666503, 0.1297282507366308, -0.6091564688879545, -0.1119112688564931, -0.0825722299867752], [-0.0536098683648631, -1.728707977001612, 1.7147501133908845, 1.037464012906056, 0.5974737052481504, 1.894928652558916, 5.859640347613037, 0.1544512511311734, -0.520384359491863, -0.1115339727358273, -0.1948967575432758], [-0.1730010777921454, -1.5259751852293983, 2.1067947453578, -0.0183302999077621, 2.309593728202953, 1.1614505546307805, 0.3579985202461211, 0.1559496147914487, -0.4886800347075446, -0.1041182323904841, -0.1816811098035661], [-0.1947085704152876, -1.6890333876440389, 1.8753398241528427, 0.7928039846482384, -0.4043764125482204, 1.6035469424230815, 0.0647087020349148, 0.1559496147914487, -0.4830437103014435, -0.1032255080312265, -0.1874941678869967], [-0.2055623167268587, 0.1325098468168409, -0.6580914491843862, 1.060813310208669, -0.4201466515325842, 1.8848810073818183, 0.1925109691884014, 0.1559496147914487, -0.4809300886491556, -0.0861832509495622, -0.1811319392257478], [-0.179513325579088, 0.3596577705014077, -0.2723332471761233, -0.1777146336690789, -0.4178454149425912, -0.1547909635690244, -0.0061560166110888, 0.1559496147914487, -0.4802255480983929, -0.1095610353392639, -0.1944588979341687]]",1,"[[""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them""], [""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them""], [""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>""], [""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>""]]",0
gdcYXeQo,"[[-0.0850857326684193, -1.9811430015954008, 2.27938582240446, 0.6527082008325586, -0.1733051855412747, 1.8748333622047209, -0.1081520567431983, -0.0500753884964051, -0.6105655499894799, -0.1120802074179853, -0.194141374507452], [-0.1534643344313174, -1.5015600533170457, 1.5215852655704505, 0.9460971973740908, -0.1582117808480852, 1.8748333622047209, 0.1961975730485981, -0.0350917518936522, -0.5894293334666009, -0.1119202126626898, -0.1943492279133992], [-0.0774881102503196, -2.080111482740116, 2.437118065003394, 0.5958577378348915, -0.1389220035496143, 1.8547380718505253, -0.1650896052506811, -0.007372024178559, -0.5852020901620251, 0.1639561270019308, -0.1944586244428451], [-0.1675742046363598, -1.22252997431873, 1.1432564807860504, 0.9816287367476328, -0.1993633057514897, 1.8647857170276227, -0.1536201710189579, 0.0188493398762588, -0.5697021980452472, -0.1115637854231495, -0.1922592072183356], [-0.1024517267669331, -2.1459451420037814, 2.359966424601742, 0.9095504711613048, -0.1926626462688629, 1.8647857170276227, 2.879635560620682, 0.020347703536534, -0.5675885763929593, -0.1110831386531002, 0.1992583910675883], [0.3903083557783955, -2.843084355001136, 3.184631736450517, 0.6060096062273321, -0.2525624810377988, 1.8647857170276227, 3.399856327559554, 0.0308362491584609, -0.5542023059284693, -0.1120156132621206, -0.1948951165953342], [0.064695966431262, -1.93536462925974, 2.1250825416011554, 0.680118245492148, -0.0899192008685866, 1.8647857170276227, 0.3219517269464198, 0.0802822499475458, -0.4365440339511098, -0.1102404333581275, -0.191860730359829], [-0.0677197385699055, -2.6843859975708435, 3.33150560002996, 0.4050026120570091, -0.1107656970367586, 1.8446904266734276, -0.1589452654836865, 0.0802822499475458, -0.407657871369842, -0.1052524395170511, -0.1846796686756777], [-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581]]",1,"[[""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>""], [""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms""], [""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""]]",0
JqCoDgIt,"[[-0.1534643344313174, -1.5015600533170457, 1.5215852655704505, 0.9460971973740908, -0.1582117808480852, 1.8748333622047209, 0.1961975730485981, -0.0350917518936522, -0.5894293334666009, -0.1119202126626898, -0.1943492279133992], [-0.0774881102503196, -2.080111482740116, 2.437118065003394, 0.5958577378348915, -0.1389220035496143, 1.8547380718505253, -0.1650896052506811, -0.007372024178559, -0.5852020901620251, 0.1639561270019308, -0.1944586244428451], [-0.1675742046363598, -1.22252997431873, 1.1432564807860504, 0.9816287367476328, -0.1993633057514897, 1.8647857170276227, -0.1536201710189579, 0.0188493398762588, -0.5697021980452472, -0.1115637854231495, -0.1922592072183356], [-0.1024517267669331, -2.1459451420037814, 2.359966424601742, 0.9095504711613048, -0.1926626462688629, 1.8647857170276227, 2.879635560620682, 0.020347703536534, -0.5675885763929593, -0.1110831386531002, 0.1992583910675883], [0.3903083557783955, -2.843084355001136, 3.184631736450517, 0.6060096062273321, -0.2525624810377988, 1.8647857170276227, 3.399856327559554, 0.0308362491584609, -0.5542023059284693, -0.1120156132621206, -0.1948951165953342], [0.064695966431262, -1.93536462925974, 2.1250825416011554, 0.680118245492148, -0.0899192008685866, 1.8647857170276227, 0.3219517269464198, 0.0802822499475458, -0.4365440339511098, -0.1102404333581275, -0.191860730359829], [-0.0677197385699055, -2.6843859975708435, 3.33150560002996, 0.4050026120570091, -0.1107656970367586, 1.8446904266734276, -0.1589452654836865, 0.0802822499475458, -0.407657871369842, -0.1052524395170511, -0.1846796686756777], [-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141]]",1,"[[""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered.""]]",0
PhNKWGla,"[[-0.0774881102503196, -2.080111482740116, 2.437118065003394, 0.5958577378348915, -0.1389220035496143, 1.8547380718505253, -0.1650896052506811, -0.007372024178559, -0.5852020901620251, 0.1639561270019308, -0.1944586244428451], [-0.1675742046363598, -1.22252997431873, 1.1432564807860504, 0.9816287367476328, -0.1993633057514897, 1.8647857170276227, -0.1536201710189579, 0.0188493398762588, -0.5697021980452472, -0.1115637854231495, -0.1922592072183356], [-0.1024517267669331, -2.1459451420037814, 2.359966424601742, 0.9095504711613048, -0.1926626462688629, 1.8647857170276227, 2.879635560620682, 0.020347703536534, -0.5675885763929593, -0.1110831386531002, 0.1992583910675883], [0.3903083557783955, -2.843084355001136, 3.184631736450517, 0.6060096062273321, -0.2525624810377988, 1.8647857170276227, 3.399856327559554, 0.0308362491584609, -0.5542023059284693, -0.1120156132621206, -0.1948951165953342], [0.064695966431262, -1.93536462925974, 2.1250825416011554, 0.680118245492148, -0.0899192008685866, 1.8647857170276227, 0.3219517269464198, 0.0802822499475458, -0.4365440339511098, -0.1102404333581275, -0.191860730359829], [-0.0677197385699055, -2.6843859975708435, 3.33150560002996, 0.4050026120570091, -0.1107656970367586, 1.8446904266734276, -0.1589452654836865, 0.0802822499475458, -0.407657871369842, -0.1052524395170511, -0.1846796686756777], [-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141], [0.2318436596294572, -0.834939755210132, 0.4728944497405802, 0.8963530422511321, -0.198957205176785, 1.8446904266734276, -0.1175733777192566, 0.0952658865502991, -0.397794303659165, -0.1118413746673268, -0.1946642899182033]]",1,"[[""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""Code generated in <*> ms"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called""]]",0
ZN32cCu4,"[[-0.1675742046363598, -1.22252997431873, 1.1432564807860504, 0.9816287367476328, -0.1993633057514897, 1.8647857170276227, -0.1536201710189579, 0.0188493398762588, -0.5697021980452472, -0.1115637854231495, -0.1922592072183356], [-0.1024517267669331, -2.1459451420037814, 2.359966424601742, 0.9095504711613048, -0.1926626462688629, 1.8647857170276227, 2.879635560620682, 0.020347703536534, -0.5675885763929593, -0.1110831386531002, 0.1992583910675883], [0.3903083557783955, -2.843084355001136, 3.184631736450517, 0.6060096062273321, -0.2525624810377988, 1.8647857170276227, 3.399856327559554, 0.0308362491584609, -0.5542023059284693, -0.1120156132621206, -0.1948951165953342], [0.064695966431262, -1.93536462925974, 2.1250825416011554, 0.680118245492148, -0.0899192008685866, 1.8647857170276227, 0.3219517269464198, 0.0802822499475458, -0.4365440339511098, -0.1102404333581275, -0.191860730359829], [-0.0677197385699055, -2.6843859975708435, 3.33150560002996, 0.4050026120570091, -0.1107656970367586, 1.8446904266734276, -0.1589452654836865, 0.0802822499475458, -0.407657871369842, -0.1052524395170511, -0.1846796686756777], [-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141], [0.2318436596294572, -0.834939755210132, 0.4728944497405802, 0.8963530422511321, -0.198957205176785, 1.8446904266734276, -0.1175733777192566, 0.0952658865502991, -0.397794303659165, -0.1118413746673268, -0.1946642899182033], [-0.0156217562743642, -0.8196802977649115, 0.0122705818610839, 1.911539881495188, -0.2336788043140326, 1.8647857170276227, 0.0835513439870314, -0.1467198445841619, -0.4816346291999183, -0.1099194500912924, -0.1931578997077336]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>""], [""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called""], [""Deleting directory <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called""]]",0
nwzK16LW,"[[-0.1024517267669331, -2.1459451420037814, 2.359966424601742, 0.9095504711613048, -0.1926626462688629, 1.8647857170276227, 2.879635560620682, 0.020347703536534, -0.5675885763929593, -0.1110831386531002, 0.1992583910675883], [0.3903083557783955, -2.843084355001136, 3.184631736450517, 0.6060096062273321, -0.2525624810377988, 1.8647857170276227, 3.399856327559554, 0.0308362491584609, -0.5542023059284693, -0.1120156132621206, -0.1948951165953342], [0.064695966431262, -1.93536462925974, 2.1250825416011554, 0.680118245492148, -0.0899192008685866, 1.8647857170276227, 0.3219517269464198, 0.0802822499475458, -0.4365440339511098, -0.1102404333581275, -0.191860730359829], [-0.0677197385699055, -2.6843859975708435, 3.33150560002996, 0.4050026120570091, -0.1107656970367586, 1.8446904266734276, -0.1589452654836865, 0.0802822499475458, -0.407657871369842, -0.1052524395170511, -0.1846796686756777], [-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141], [0.2318436596294572, -0.834939755210132, 0.4728944497405802, 0.8963530422511321, -0.198957205176785, 1.8446904266734276, -0.1175733777192566, 0.0952658865502991, -0.397794303659165, -0.1118413746673268, -0.1946642899182033], [-0.0156217562743642, -0.8196802977649115, 0.0122705818610839, 1.911539881495188, -0.2336788043140326, 1.8647857170276227, 0.0835513439870314, -0.1467198445841619, -0.4816346291999183, -0.1099194500912924, -0.1931578997077336], [0.7582503557406562, -0.6230512889707859, -0.0345918960125123, 0.8120925345938754, -0.2744919120718499, 1.7944522007879389, -0.0692379048855661, -0.507076304880372, -0.7528827412435315, -0.1117075488264585, -0.194599198983183]]",1,"[[""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms""], [""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called""]]",0
LMRKfoa0,"[[0.3903083557783955, -2.843084355001136, 3.184631736450517, 0.6060096062273321, -0.2525624810377988, 1.8647857170276227, 3.399856327559554, 0.0308362491584609, -0.5542023059284693, -0.1120156132621206, -0.1948951165953342], [0.064695966431262, -1.93536462925974, 2.1250825416011554, 0.680118245492148, -0.0899192008685866, 1.8647857170276227, 0.3219517269464198, 0.0802822499475458, -0.4365440339511098, -0.1102404333581275, -0.191860730359829], [-0.0677197385699055, -2.6843859975708435, 3.33150560002996, 0.4050026120570091, -0.1107656970367586, 1.8446904266734276, -0.1589452654836865, 0.0802822499475458, -0.407657871369842, -0.1052524395170511, -0.1846796686756777], [-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141], [0.2318436596294572, -0.834939755210132, 0.4728944497405802, 0.8963530422511321, -0.198957205176785, 1.8446904266734276, -0.1175733777192566, 0.0952658865502991, -0.397794303659165, -0.1118413746673268, -0.1946642899182033], [-0.0156217562743642, -0.8196802977649115, 0.0122705818610839, 1.911539881495188, -0.2336788043140326, 1.8647857170276227, 0.0835513439870314, -0.1467198445841619, -0.4816346291999183, -0.1099194500912924, -0.1931578997077336], [0.7582503557406562, -0.6230512889707859, -0.0345918960125123, 0.8120925345938754, -0.2744919120718499, 1.7944522007879389, -0.0692379048855661, -0.507076304880372, -0.7528827412435315, -0.1117075488264585, -0.194599198983183], [1.1696073409492016, -0.5759649631398202, -0.0523081986232622, 0.349167335898586, -0.2815309887000638, 1.6839281038398632, -0.1597645107859524, -0.507076304880372, -0.7528827412435315, -0.1121524203717212, -0.1949076971962204]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called""]]",0
CZn8EmAO,"[[0.064695966431262, -1.93536462925974, 2.1250825416011554, 0.680118245492148, -0.0899192008685866, 1.8647857170276227, 0.3219517269464198, 0.0802822499475458, -0.4365440339511098, -0.1102404333581275, -0.191860730359829], [-0.0677197385699055, -2.6843859975708435, 3.33150560002996, 0.4050026120570091, -0.1107656970367586, 1.8446904266734276, -0.1589452654836865, 0.0802822499475458, -0.407657871369842, -0.1052524395170511, -0.1846796686756777], [-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141], [0.2318436596294572, -0.834939755210132, 0.4728944497405802, 0.8963530422511321, -0.198957205176785, 1.8446904266734276, -0.1175733777192566, 0.0952658865502991, -0.397794303659165, -0.1118413746673268, -0.1946642899182033], [-0.0156217562743642, -0.8196802977649115, 0.0122705818610839, 1.911539881495188, -0.2336788043140326, 1.8647857170276227, 0.0835513439870314, -0.1467198445841619, -0.4816346291999183, -0.1099194500912924, -0.1931578997077336], [0.7582503557406562, -0.6230512889707859, -0.0345918960125123, 0.8120925345938754, -0.2744919120718499, 1.7944522007879389, -0.0692379048855661, -0.507076304880372, -0.7528827412435315, -0.1117075488264585, -0.194599198983183], [1.1696073409492016, -0.5759649631398202, -0.0523081986232622, 0.349167335898586, -0.2815309887000638, 1.6839281038398632, -0.1597645107859524, -0.507076304880372, -0.7528827412435315, -0.1121524203717212, -0.1949076971962204], [0.7484819840602422, -0.4307821251610091, -0.0477362495624235, 0.3958659305038126, -0.2839675921482917, 1.6537851683085705, -0.1585356428325535, -0.507076304880372, -0.7719053361141225, -0.1121693142278704, -0.1949128935313691]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null""], [""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>""], [""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called""]]",0
YzJsKRvp,"[[-0.0677197385699055, -2.6843859975708435, 3.33150560002996, 0.4050026120570091, -0.1107656970367586, 1.8446904266734276, -0.1589452654836865, 0.0802822499475458, -0.407657871369842, -0.1052524395170511, -0.1846796686756777], [-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141], [0.2318436596294572, -0.834939755210132, 0.4728944497405802, 0.8963530422511321, -0.198957205176785, 1.8446904266734276, -0.1175733777192566, 0.0952658865502991, -0.397794303659165, -0.1118413746673268, -0.1946642899182033], [-0.0156217562743642, -0.8196802977649115, 0.0122705818610839, 1.911539881495188, -0.2336788043140326, 1.8647857170276227, 0.0835513439870314, -0.1467198445841619, -0.4816346291999183, -0.1099194500912924, -0.1931578997077336], [0.7582503557406562, -0.6230512889707859, -0.0345918960125123, 0.8120925345938754, -0.2744919120718499, 1.7944522007879389, -0.0692379048855661, -0.507076304880372, -0.7528827412435315, -0.1117075488264585, -0.194599198983183], [1.1696073409492016, -0.5759649631398202, -0.0523081986232622, 0.349167335898586, -0.2815309887000638, 1.6839281038398632, -0.1597645107859524, -0.507076304880372, -0.7528827412435315, -0.1121524203717212, -0.1949076971962204], [0.7484819840602422, -0.4307821251610091, -0.0477362495624235, 0.3958659305038126, -0.2839675921482917, 1.6537851683085705, -0.1585356428325535, -0.507076304880372, -0.7719053361141225, -0.1121693142278704, -0.1949128935313691], [0.7170061197566862, -0.4368859081390973, -0.0483077431950284, 0.441549338269795, -0.2818017224165336, 1.6939757490169611, -0.1577163975302876, -0.507076304880372, -0.7768371199694609, -0.1121524203717212, -0.1949096116354857]]",1,"[[""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1""], [""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Found configuration file null"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered."", ""Deleting staging directory <*>"", ""Shutdown hook called"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
mp9e18wM,"[[-0.1947085704152876, -1.7971575432558864, 1.2895588507328877, 2.0851368310059213, -0.2413270318043035, 1.8848810073818183, 0.1687528554226891, 0.0937675228900238, -0.3999079253114531, -0.111723780178445, -0.1945267237824252], [-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141], [0.2318436596294572, -0.834939755210132, 0.4728944497405802, 0.8963530422511321, -0.198957205176785, 1.8446904266734276, -0.1175733777192566, 0.0952658865502991, -0.397794303659165, -0.1118413746673268, -0.1946642899182033], [-0.0156217562743642, -0.8196802977649115, 0.0122705818610839, 1.911539881495188, -0.2336788043140326, 1.8647857170276227, 0.0835513439870314, -0.1467198445841619, -0.4816346291999183, -0.1099194500912924, -0.1931578997077336], [0.7582503557406562, -0.6230512889707859, -0.0345918960125123, 0.8120925345938754, -0.2744919120718499, 1.7944522007879389, -0.0692379048855661, -0.507076304880372, -0.7528827412435315, -0.1117075488264585, -0.194599198983183], [1.1696073409492016, -0.5759649631398202, -0.0523081986232622, 0.349167335898586, -0.2815309887000638, 1.6839281038398632, -0.1597645107859524, -0.507076304880372, -0.7528827412435315, -0.1121524203717212, -0.1949076971962204], [0.7484819840602422, -0.4307821251610091, -0.0477362495624235, 0.3958659305038126, -0.2839675921482917, 1.6537851683085705, -0.1585356428325535, -0.507076304880372, -0.7719053361141225, -0.1121693142278704, -0.1949128935313691], [0.7170061197566862, -0.4368859081390973, -0.0483077431950284, 0.441549338269795, -0.2818017224165336, 1.6939757490169611, -0.1577163975302876, -0.507076304880372, -0.7768371199694609, -0.1121524203717212, -0.1949096116354857], [0.9329956713569514, -0.453017334581187, -0.0477362495624235, 0.276073883473014, -0.287690180749751, 1.704023394194059, -0.1646799825995481, -0.507076304880372, -0.7888143093324256, -0.1121524203717212, -0.1949126200400455]]",1,"[[""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered.""], [""Deleting staging directory <*>"", ""Shutdown hook called"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
SOiBcT5F,"[[-0.2012208182022303, -1.414363153630072, 0.0648479960607287, 3.375439303685116, -0.2350324728963814, 1.894928652558916, 0.1855473841191409, 0.0952658865502991, -0.3984988442099277, -0.0824357961531684, -0.1775812013712581], [-0.0970248536111475, -0.7468708865262884, 0.3180196753046702, 1.274002546449921, -0.23374648774315, 1.8647857170276227, 0.2154498376518477, 0.0952658865502991, -0.397794303659165, -0.1090711135109367, -0.1945289117130141], [0.2318436596294572, -0.834939755210132, 0.4728944497405802, 0.8963530422511321, -0.198957205176785, 1.8446904266734276, -0.1175733777192566, 0.0952658865502991, -0.397794303659165, -0.1118413746673268, -0.1946642899182033], [-0.0156217562743642, -0.8196802977649115, 0.0122705818610839, 1.911539881495188, -0.2336788043140326, 1.8647857170276227, 0.0835513439870314, -0.1467198445841619, -0.4816346291999183, -0.1099194500912924, -0.1931578997077336], [0.7582503557406562, -0.6230512889707859, -0.0345918960125123, 0.8120925345938754, -0.2744919120718499, 1.7944522007879389, -0.0692379048855661, -0.507076304880372, -0.7528827412435315, -0.1117075488264585, -0.194599198983183], [1.1696073409492016, -0.5759649631398202, -0.0523081986232622, 0.349167335898586, -0.2815309887000638, 1.6839281038398632, -0.1597645107859524, -0.507076304880372, -0.7528827412435315, -0.1121524203717212, -0.1949076971962204], [0.7484819840602422, -0.4307821251610091, -0.0477362495624235, 0.3958659305038126, -0.2839675921482917, 1.6537851683085705, -0.1585356428325535, -0.507076304880372, -0.7719053361141225, -0.1121693142278704, -0.1949128935313691], [0.7170061197566862, -0.4368859081390973, -0.0483077431950284, 0.441549338269795, -0.2818017224165336, 1.6939757490169611, -0.1577163975302876, -0.507076304880372, -0.7768371199694609, -0.1121524203717212, -0.1949096116354857], [0.9329956713569514, -0.453017334581187, -0.0477362495624235, 0.276073883473014, -0.287690180749751, 1.704023394194059, -0.1646799825995481, -0.507076304880372, -0.7888143093324256, -0.1121524203717212, -0.1949126200400455], [0.7582503557406562, -0.4259862956782255, -0.0511652113580526, 0.3826685015936398, -0.2866749293129894, 1.7241186845482546, -0.1671377185063459, -0.507076304880372, -0.7888143093324256, -0.112127245213538, -0.1949117995660746]]",1,"[[""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Saved output of task <*> to <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Saved output of task <*> to <*>"", ""<*> Committed"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Driver commanded a shutdown"", ""MemoryStore cleared"", ""BlockManager stopped"", ""Shutdown hook called"", ""Deleting directory <*>"", ""Driver requested a total number of 0 executor(s)."", ""Driver terminated or disconnected! Shutting down. <*>"", ""Driver terminated or disconnected! Shutting down. <*>"", ""Final app status: SUCCEEDED, exitCode: 0"", ""Unregistering ApplicationMaster with SUCCEEDED"", ""Waiting for application to be successfully unregistered.""], [""Deleting staging directory <*>"", ""Shutdown hook called"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
SL6gGAjz,"[[-0.2554895497600858, 0.9456209363978708, -0.9141205965913518, -0.3299926595556873, -0.4204850686781715, -0.6069349965384231, -0.1724628129710745, -0.4186728489241292, -0.6042246850326161, -0.1121557328925347, -0.1949208247797539], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.5767920610071298, -0.1704146997154096, -0.4186728489241292, -0.6042246850326161, -0.1121136638782024, -0.1949172693925469], [-0.266343296071657, 0.8928668120872513, -0.8398264243527234, -0.3299926595556873, -0.4196051840996447, -0.5968873513613252, -0.1720531903199415, -0.4186728489241292, -0.6042246850326161, -0.1121265827093753, -0.1949202777971067], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1708243223665426, -0.4186728489241292, -0.6028156039310909, -0.1121557328925347, -0.1949208247797539], [-0.2609164229158714, 0.9412610914135215, -0.9084056602653036, -0.324916725359467, -0.4204850686781715, -0.5868397061842275, -0.1667280958552129, -0.4186728489241292, -0.6028156039310909, -0.11207159486387, -0.1949172693925469], [-0.2392089302927292, 0.8095937728861916, -0.8855459149611101, -0.0802566971016495, -0.420417385249054, -0.3557438671109793, -0.1450180953451655, -0.4186728489241292, -0.6028156039310909, -0.1119599629124526, -0.1947846261005938], [-0.2229283108253725, 0.6796703923526006, -0.8198241472115542, 0.0913098787305959, -0.4062038651343913, 0.9002117800262389, 0.1007554953346162, -0.4186728489241292, -0.6028156039310909, -0.1120295258495377, -0.1947559095116143], [-0.0047680099627931, 0.6857741753306889, -0.7306711405252001, -0.2843092517897048, -0.4130398914752529, -0.3557438671109793, 0.0368543617578729, -0.4186728489241292, -0.6014065228295656, -0.1121385077843042, -0.1949057827569551], [-0.0764027356191624, 0.619940516067024, -0.6192298821672575, -0.2640055150048236, -0.4204850686781715, -0.3256009315796861, -0.1024173396273367, -0.4186728489241292, -0.5852020901620251, -0.1121395015405482, -0.1948467086310543], [-0.2229283108253725, 0.4359550577275097, -0.2660468172174701, -0.324916725359467, -0.4204850686781715, -0.5566967706529343, -0.1671377185063459, -0.3834613029076595, -0.5859066307127877, -0.1121428140613618, -0.1949057827569551]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
DaxmViFS,"[[-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.5767920610071298, -0.1704146997154096, -0.4186728489241292, -0.6042246850326161, -0.1121136638782024, -0.1949172693925469], [-0.266343296071657, 0.8928668120872513, -0.8398264243527234, -0.3299926595556873, -0.4196051840996447, -0.5968873513613252, -0.1720531903199415, -0.4186728489241292, -0.6042246850326161, -0.1121265827093753, -0.1949202777971067], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1708243223665426, -0.4186728489241292, -0.6028156039310909, -0.1121557328925347, -0.1949208247797539], [-0.2609164229158714, 0.9412610914135215, -0.9084056602653036, -0.324916725359467, -0.4204850686781715, -0.5868397061842275, -0.1667280958552129, -0.4186728489241292, -0.6028156039310909, -0.11207159486387, -0.1949172693925469], [-0.2392089302927292, 0.8095937728861916, -0.8855459149611101, -0.0802566971016495, -0.420417385249054, -0.3557438671109793, -0.1450180953451655, -0.4186728489241292, -0.6028156039310909, -0.1119599629124526, -0.1947846261005938], [-0.2229283108253725, 0.6796703923526006, -0.8198241472115542, 0.0913098787305959, -0.4062038651343913, 0.9002117800262389, 0.1007554953346162, -0.4186728489241292, -0.6028156039310909, -0.1120295258495377, -0.1947559095116143], [-0.0047680099627931, 0.6857741753306889, -0.7306711405252001, -0.2843092517897048, -0.4130398914752529, -0.3557438671109793, 0.0368543617578729, -0.4186728489241292, -0.6014065228295656, -0.1121385077843042, -0.1949057827569551], [-0.0764027356191624, 0.619940516067024, -0.6192298821672575, -0.2640055150048236, -0.4204850686781715, -0.3256009315796861, -0.1024173396273367, -0.4186728489241292, -0.5852020901620251, -0.1121395015405482, -0.1948467086310543], [-0.2229283108253725, 0.4359550577275097, -0.2660468172174701, -0.324916725359467, -0.4204850686781715, -0.5566967706529343, -0.1671377185063459, -0.3834613029076595, -0.5859066307127877, -0.1121428140613618, -0.1949057827569551], [-0.2446358034485148, 0.3618376929935819, -0.1694643933072531, -0.3046129885745859, -0.4204850686781715, -0.5366014802987388, -0.1650896052506811, -0.3834613029076595, -0.579565765755924, -0.1120898137283447, -0.1948836299597423]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
D0PG5pru,"[[-0.266343296071657, 0.8928668120872513, -0.8398264243527234, -0.3299926595556873, -0.4196051840996447, -0.5968873513613252, -0.1720531903199415, -0.4186728489241292, -0.6042246850326161, -0.1121265827093753, -0.1949202777971067], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1708243223665426, -0.4186728489241292, -0.6028156039310909, -0.1121557328925347, -0.1949208247797539], [-0.2609164229158714, 0.9412610914135215, -0.9084056602653036, -0.324916725359467, -0.4204850686781715, -0.5868397061842275, -0.1667280958552129, -0.4186728489241292, -0.6028156039310909, -0.11207159486387, -0.1949172693925469], [-0.2392089302927292, 0.8095937728861916, -0.8855459149611101, -0.0802566971016495, -0.420417385249054, -0.3557438671109793, -0.1450180953451655, -0.4186728489241292, -0.6028156039310909, -0.1119599629124526, -0.1947846261005938], [-0.2229283108253725, 0.6796703923526006, -0.8198241472115542, 0.0913098787305959, -0.4062038651343913, 0.9002117800262389, 0.1007554953346162, -0.4186728489241292, -0.6028156039310909, -0.1120295258495377, -0.1947559095116143], [-0.0047680099627931, 0.6857741753306889, -0.7306711405252001, -0.2843092517897048, -0.4130398914752529, -0.3557438671109793, 0.0368543617578729, -0.4186728489241292, -0.6014065228295656, -0.1121385077843042, -0.1949057827569551], [-0.0764027356191624, 0.619940516067024, -0.6192298821672575, -0.2640055150048236, -0.4204850686781715, -0.3256009315796861, -0.1024173396273367, -0.4186728489241292, -0.5852020901620251, -0.1121395015405482, -0.1948467086310543], [-0.2229283108253725, 0.4359550577275097, -0.2660468172174701, -0.324916725359467, -0.4204850686781715, -0.5566967706529343, -0.1671377185063459, -0.3834613029076595, -0.5859066307127877, -0.1121428140613618, -0.1949057827569551], [-0.2446358034485148, 0.3618376929935819, -0.1694643933072531, -0.3046129885745859, -0.4204850686781715, -0.5366014802987388, -0.1650896052506811, -0.3834613029076595, -0.579565765755924, -0.1120898137283447, -0.1948836299597423], [-0.2218429361942154, -0.1844508835453082, 0.5466171283466037, -0.324916725359467, -0.2771315658074301, -0.5767920610071298, -0.1728724356222075, -0.3909531212090361, -0.5753385224513483, -0.1118291183403166, -0.1948683144456199]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
xoM2wEye,"[[-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1708243223665426, -0.4186728489241292, -0.6028156039310909, -0.1121557328925347, -0.1949208247797539], [-0.2609164229158714, 0.9412610914135215, -0.9084056602653036, -0.324916725359467, -0.4204850686781715, -0.5868397061842275, -0.1667280958552129, -0.4186728489241292, -0.6028156039310909, -0.11207159486387, -0.1949172693925469], [-0.2392089302927292, 0.8095937728861916, -0.8855459149611101, -0.0802566971016495, -0.420417385249054, -0.3557438671109793, -0.1450180953451655, -0.4186728489241292, -0.6028156039310909, -0.1119599629124526, -0.1947846261005938], [-0.2229283108253725, 0.6796703923526006, -0.8198241472115542, 0.0913098787305959, -0.4062038651343913, 0.9002117800262389, 0.1007554953346162, -0.4186728489241292, -0.6028156039310909, -0.1120295258495377, -0.1947559095116143], [-0.0047680099627931, 0.6857741753306889, -0.7306711405252001, -0.2843092517897048, -0.4130398914752529, -0.3557438671109793, 0.0368543617578729, -0.4186728489241292, -0.6014065228295656, -0.1121385077843042, -0.1949057827569551], [-0.0764027356191624, 0.619940516067024, -0.6192298821672575, -0.2640055150048236, -0.4204850686781715, -0.3256009315796861, -0.1024173396273367, -0.4186728489241292, -0.5852020901620251, -0.1121395015405482, -0.1948467086310543], [-0.2229283108253725, 0.4359550577275097, -0.2660468172174701, -0.324916725359467, -0.4204850686781715, -0.5566967706529343, -0.1671377185063459, -0.3834613029076595, -0.5859066307127877, -0.1121428140613618, -0.1949057827569551], [-0.2446358034485148, 0.3618376929935819, -0.1694643933072531, -0.3046129885745859, -0.4204850686781715, -0.5366014802987388, -0.1650896052506811, -0.3834613029076595, -0.579565765755924, -0.1120898137283447, -0.1948836299597423], [-0.2218429361942154, -0.1844508835453082, 0.5466171283466037, -0.324916725359467, -0.2771315658074301, -0.5767920610071298, -0.1728724356222075, -0.3909531212090361, -0.5753385224513483, -0.1118291183403166, -0.1948683144456199], [-0.0221340040613068, 0.3570418635107984, -0.2997649415411553, -0.2690814492010439, 3.143588941788069, -0.1748862539232198, -0.0995499810694059, -0.3504973023816031, -0.5704067385960099, -0.107927962578173, 2.200963267909496]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ZkxN015A,"[[-0.2609164229158714, 0.9412610914135215, -0.9084056602653036, -0.324916725359467, -0.4204850686781715, -0.5868397061842275, -0.1667280958552129, -0.4186728489241292, -0.6028156039310909, -0.11207159486387, -0.1949172693925469], [-0.2392089302927292, 0.8095937728861916, -0.8855459149611101, -0.0802566971016495, -0.420417385249054, -0.3557438671109793, -0.1450180953451655, -0.4186728489241292, -0.6028156039310909, -0.1119599629124526, -0.1947846261005938], [-0.2229283108253725, 0.6796703923526006, -0.8198241472115542, 0.0913098787305959, -0.4062038651343913, 0.9002117800262389, 0.1007554953346162, -0.4186728489241292, -0.6028156039310909, -0.1120295258495377, -0.1947559095116143], [-0.0047680099627931, 0.6857741753306889, -0.7306711405252001, -0.2843092517897048, -0.4130398914752529, -0.3557438671109793, 0.0368543617578729, -0.4186728489241292, -0.6014065228295656, -0.1121385077843042, -0.1949057827569551], [-0.0764027356191624, 0.619940516067024, -0.6192298821672575, -0.2640055150048236, -0.4204850686781715, -0.3256009315796861, -0.1024173396273367, -0.4186728489241292, -0.5852020901620251, -0.1121395015405482, -0.1948467086310543], [-0.2229283108253725, 0.4359550577275097, -0.2660468172174701, -0.324916725359467, -0.4204850686781715, -0.5566967706529343, -0.1671377185063459, -0.3834613029076595, -0.5859066307127877, -0.1121428140613618, -0.1949057827569551], [-0.2446358034485148, 0.3618376929935819, -0.1694643933072531, -0.3046129885745859, -0.4204850686781715, -0.5366014802987388, -0.1650896052506811, -0.3834613029076595, -0.579565765755924, -0.1120898137283447, -0.1948836299597423], [-0.2218429361942154, -0.1844508835453082, 0.5466171283466037, -0.324916725359467, -0.2771315658074301, -0.5767920610071298, -0.1728724356222075, -0.3909531212090361, -0.5753385224513483, -0.1118291183403166, -0.1948683144456199], [-0.0221340040613068, 0.3570418635107984, -0.2997649415411553, -0.2690814492010439, 3.143588941788069, -0.1748862539232198, -0.0995499810694059, -0.3504973023816031, -0.5704067385960099, -0.107927962578173, 2.200963267909496], [0.4879920725825355, 0.060572404575088, -0.1683214060420435, -0.289385185985925, -0.4204850686781715, -0.2653150605170996, -0.0073848845644877, -0.3504973023816031, -0.5598386303345704, -0.1100496321592658, 1.0300946746721378]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
hHTdUQ1s,"[[0.7484819840602422, -0.5188509938448523, -0.0060172143822706, 0.5278402196055397, -0.420417385249054, 1.834642781496329, 0.4984990895847297, -0.2268823004088906, -0.7768371199694609, -0.1077533927312978, 1.024683922325745], [0.5259801846730345, -0.7917772898650799, 0.211721859640171, 0.9846742972653648, -0.4204850686781715, 1.8446904266734276, 0.2695200276013997, -0.2875660286500404, -0.8212231746675066, -0.1088912436307597, 0.7937221404810688], [0.6280054000018029, -0.5567816452086861, 0.0128420754936888, 0.695346048080809, -0.4124307406131959, 1.704023394194059, 0.3219517269464198, -0.2890643923103157, -0.8092459853045418, -0.1075814729010734, 1.1177352428157934], [0.7180914943878433, -0.4063669932486564, -0.032305921482093, 0.3410458411846336, -0.4204850686781715, 1.8848810073818183, 0.1413081377967802, -0.2396183915212308, -0.855041121104113, -0.1118821186733337, -0.1888342753727087], [0.4988458188941067, -0.295190946147765, -0.1534625715943178, 0.5024605486244383, -0.4203497018199366, 1.8748333622047209, 0.1662951195158913, -0.2081527546554493, -0.7247011192130262, -0.1121136638782024, -0.1949022273697481], [0.298051512130041, -0.3095784345961156, -0.0488792368276332, 0.5379920879979805, -0.4204850686781715, 1.553308716537593, 0.8642921170464717, -0.2673381192363236, -0.7838825254770871, -0.1121130013740397, -0.1948800745725354], [0.9405932937750512, -0.2616201397682797, -0.2471875273415106, 0.1786159469055846, -0.4204850686781715, 0.4581153922339381, 1.154714576699747, -0.2973053924418298, -0.8120641475075925, -0.1120447634452801, -0.194783805626623], [0.3707716124175674, -0.182706945551569, 0.0831357923040834, -0.0599529603167684, -0.4120923234676087, 1.5834516520688855, 1.425065526447507, -0.2381200278609555, -0.782473444375562, -0.1121769330257416, -0.1949112525834274], [1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
HNpGZFyU,"[[0.5259801846730345, -0.7917772898650799, 0.211721859640171, 0.9846742972653648, -0.4204850686781715, 1.8446904266734276, 0.2695200276013997, -0.2875660286500404, -0.8212231746675066, -0.1088912436307597, 0.7937221404810688], [0.6280054000018029, -0.5567816452086861, 0.0128420754936888, 0.695346048080809, -0.4124307406131959, 1.704023394194059, 0.3219517269464198, -0.2890643923103157, -0.8092459853045418, -0.1075814729010734, 1.1177352428157934], [0.7180914943878433, -0.4063669932486564, -0.032305921482093, 0.3410458411846336, -0.4204850686781715, 1.8848810073818183, 0.1413081377967802, -0.2396183915212308, -0.855041121104113, -0.1118821186733337, -0.1888342753727087], [0.4988458188941067, -0.295190946147765, -0.1534625715943178, 0.5024605486244383, -0.4203497018199366, 1.8748333622047209, 0.1662951195158913, -0.2081527546554493, -0.7247011192130262, -0.1121136638782024, -0.1949022273697481], [0.298051512130041, -0.3095784345961156, -0.0488792368276332, 0.5379920879979805, -0.4204850686781715, 1.553308716537593, 0.8642921170464717, -0.2673381192363236, -0.7838825254770871, -0.1121130013740397, -0.1948800745725354], [0.9405932937750512, -0.2616201397682797, -0.2471875273415106, 0.1786159469055846, -0.4204850686781715, 0.4581153922339381, 1.154714576699747, -0.2973053924418298, -0.8120641475075925, -0.1120447634452801, -0.194783805626623], [0.3707716124175674, -0.182706945551569, 0.0831357923040834, -0.0599529603167684, -0.4120923234676087, 1.5834516520688855, 1.425065526447507, -0.2381200278609555, -0.782473444375562, -0.1121769330257416, -0.1949112525834274], [1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
hs48rKXE,"[[0.6280054000018029, -0.5567816452086861, 0.0128420754936888, 0.695346048080809, -0.4124307406131959, 1.704023394194059, 0.3219517269464198, -0.2890643923103157, -0.8092459853045418, -0.1075814729010734, 1.1177352428157934], [0.7180914943878433, -0.4063669932486564, -0.032305921482093, 0.3410458411846336, -0.4204850686781715, 1.8848810073818183, 0.1413081377967802, -0.2396183915212308, -0.855041121104113, -0.1118821186733337, -0.1888342753727087], [0.4988458188941067, -0.295190946147765, -0.1534625715943178, 0.5024605486244383, -0.4203497018199366, 1.8748333622047209, 0.1662951195158913, -0.2081527546554493, -0.7247011192130262, -0.1121136638782024, -0.1949022273697481], [0.298051512130041, -0.3095784345961156, -0.0488792368276332, 0.5379920879979805, -0.4204850686781715, 1.553308716537593, 0.8642921170464717, -0.2673381192363236, -0.7838825254770871, -0.1121130013740397, -0.1948800745725354], [0.9405932937750512, -0.2616201397682797, -0.2471875273415106, 0.1786159469055846, -0.4204850686781715, 0.4581153922339381, 1.154714576699747, -0.2973053924418298, -0.8120641475075925, -0.1120447634452801, -0.194783805626623], [0.3707716124175674, -0.182706945551569, 0.0831357923040834, -0.0599529603167684, -0.4120923234676087, 1.5834516520688855, 1.425065526447507, -0.2381200278609555, -0.782473444375562, -0.1121769330257416, -0.1949112525834274], [1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274], [0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
b9k6ywMS,"[[0.7180914943878433, -0.4063669932486564, -0.032305921482093, 0.3410458411846336, -0.4204850686781715, 1.8848810073818183, 0.1413081377967802, -0.2396183915212308, -0.855041121104113, -0.1118821186733337, -0.1888342753727087], [0.4988458188941067, -0.295190946147765, -0.1534625715943178, 0.5024605486244383, -0.4203497018199366, 1.8748333622047209, 0.1662951195158913, -0.2081527546554493, -0.7247011192130262, -0.1121136638782024, -0.1949022273697481], [0.298051512130041, -0.3095784345961156, -0.0488792368276332, 0.5379920879979805, -0.4204850686781715, 1.553308716537593, 0.8642921170464717, -0.2673381192363236, -0.7838825254770871, -0.1121130013740397, -0.1948800745725354], [0.9405932937750512, -0.2616201397682797, -0.2471875273415106, 0.1786159469055846, -0.4204850686781715, 0.4581153922339381, 1.154714576699747, -0.2973053924418298, -0.8120641475075925, -0.1120447634452801, -0.194783805626623], [0.3707716124175674, -0.182706945551569, 0.0831357923040834, -0.0599529603167684, -0.4120923234676087, 1.5834516520688855, 1.425065526447507, -0.2381200278609555, -0.782473444375562, -0.1121769330257416, -0.1949112525834274], [1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274], [0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927], [0.7625918542652849, -0.4726366370107562, 0.3437368887718876, -0.2132461730426209, -0.4135813589081924, -0.2653150605170996, -0.1044654528830015, -0.1699444813184293, -0.6845423078195562, -0.1120364821432462, -0.1948784336245936]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
PB9VO54a,"[[0.4988458188941067, -0.295190946147765, -0.1534625715943178, 0.5024605486244383, -0.4203497018199366, 1.8748333622047209, 0.1662951195158913, -0.2081527546554493, -0.7247011192130262, -0.1121136638782024, -0.1949022273697481], [0.298051512130041, -0.3095784345961156, -0.0488792368276332, 0.5379920879979805, -0.4204850686781715, 1.553308716537593, 0.8642921170464717, -0.2673381192363236, -0.7838825254770871, -0.1121130013740397, -0.1948800745725354], [0.9405932937750512, -0.2616201397682797, -0.2471875273415106, 0.1786159469055846, -0.4204850686781715, 0.4581153922339381, 1.154714576699747, -0.2973053924418298, -0.8120641475075925, -0.1120447634452801, -0.194783805626623], [0.3707716124175674, -0.182706945551569, 0.0831357923040834, -0.0599529603167684, -0.4120923234676087, 1.5834516520688855, 1.425065526447507, -0.2381200278609555, -0.782473444375562, -0.1121769330257416, -0.1949112525834274], [1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274], [0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927], [0.7625918542652849, -0.4726366370107562, 0.3437368887718876, -0.2132461730426209, -0.4135813589081924, -0.2653150605170996, -0.1044654528830015, -0.1699444813184293, -0.6845423078195562, -0.1120364821432462, -0.1948784336245936], [1.0024596477510064, -0.7372792275607213, 0.5226143957772006, -0.1411679074562929, -0.4204850686781715, 0.1767813272752013, -0.0663705463276354, -0.2163937547869634, -0.7430191735328545, -0.1118831124295778, -0.1947274664139583]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
F3uIBEzC,"[[0.298051512130041, -0.3095784345961156, -0.0488792368276332, 0.5379920879979805, -0.4204850686781715, 1.553308716537593, 0.8642921170464717, -0.2673381192363236, -0.7838825254770871, -0.1121130013740397, -0.1948800745725354], [0.9405932937750512, -0.2616201397682797, -0.2471875273415106, 0.1786159469055846, -0.4204850686781715, 0.4581153922339381, 1.154714576699747, -0.2973053924418298, -0.8120641475075925, -0.1120447634452801, -0.194783805626623], [0.3707716124175674, -0.182706945551569, 0.0831357923040834, -0.0599529603167684, -0.4120923234676087, 1.5834516520688855, 1.425065526447507, -0.2381200278609555, -0.782473444375562, -0.1121769330257416, -0.1949112525834274], [1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274], [0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927], [0.7625918542652849, -0.4726366370107562, 0.3437368887718876, -0.2132461730426209, -0.4135813589081924, -0.2653150605170996, -0.1044654528830015, -0.1699444813184293, -0.6845423078195562, -0.1120364821432462, -0.1948784336245936], [1.0024596477510064, -0.7372792275607213, 0.5226143957772006, -0.1411679074562929, -0.4204850686781715, 0.1767813272752013, -0.0663705463276354, -0.2163937547869634, -0.7430191735328545, -0.1118831124295778, -0.1947274664139583], [0.8505071993890109, -0.4290381871672694, 0.2768721337571221, -0.2792333175934845, -0.4204850686781715, 0.6992588764842841, 0.6045913562281688, -0.256100391784259, -0.7789507416217487, -0.1121739517570094, -0.1949085176701913]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
3mk8pj0x,"[[0.9405932937750512, -0.2616201397682797, -0.2471875273415106, 0.1786159469055846, -0.4204850686781715, 0.4581153922339381, 1.154714576699747, -0.2973053924418298, -0.8120641475075925, -0.1120447634452801, -0.194783805626623], [0.3707716124175674, -0.182706945551569, 0.0831357923040834, -0.0599529603167684, -0.4120923234676087, 1.5834516520688855, 1.425065526447507, -0.2381200278609555, -0.782473444375562, -0.1121769330257416, -0.1949112525834274], [1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274], [0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927], [0.7625918542652849, -0.4726366370107562, 0.3437368887718876, -0.2132461730426209, -0.4135813589081924, -0.2653150605170996, -0.1044654528830015, -0.1699444813184293, -0.6845423078195562, -0.1120364821432462, -0.1948784336245936], [1.0024596477510064, -0.7372792275607213, 0.5226143957772006, -0.1411679074562929, -0.4204850686781715, 0.1767813272752013, -0.0663705463276354, -0.2163937547869634, -0.7430191735328545, -0.1118831124295778, -0.1947274664139583], [0.8505071993890109, -0.4290381871672694, 0.2768721337571221, -0.2792333175934845, -0.4204850686781715, 0.6992588764842841, 0.6045913562281688, -0.256100391784259, -0.7789507416217487, -0.1121739517570094, -0.1949085176701913], [0.268746397088799, -0.5859926066038224, 0.5820497335681035, 0.0882643182128637, -0.4204850686781715, 0.2571624886919831, 0.346119463363265, -0.2291298458993036, -0.7183602542561625, -0.1120619885535107, -0.194829205186343]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals""], [""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
5ZD4yCwH,"[[0.3707716124175674, -0.182706945551569, 0.0831357923040834, -0.0599529603167684, -0.4120923234676087, 1.5834516520688855, 1.425065526447507, -0.2381200278609555, -0.782473444375562, -0.1121769330257416, -0.1949112525834274], [1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274], [0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927], [0.7625918542652849, -0.4726366370107562, 0.3437368887718876, -0.2132461730426209, -0.4135813589081924, -0.2653150605170996, -0.1044654528830015, -0.1699444813184293, -0.6845423078195562, -0.1120364821432462, -0.1948784336245936], [1.0024596477510064, -0.7372792275607213, 0.5226143957772006, -0.1411679074562929, -0.4204850686781715, 0.1767813272752013, -0.0663705463276354, -0.2163937547869634, -0.7430191735328545, -0.1118831124295778, -0.1947274664139583], [0.8505071993890109, -0.4290381871672694, 0.2768721337571221, -0.2792333175934845, -0.4204850686781715, 0.6992588764842841, 0.6045913562281688, -0.256100391784259, -0.7789507416217487, -0.1121739517570094, -0.1949085176701913], [0.268746397088799, -0.5859926066038224, 0.5820497335681035, 0.0882643182128637, -0.4204850686781715, 0.2571624886919831, 0.346119463363265, -0.2291298458993036, -0.7183602542561625, -0.1120619885535107, -0.194829205186343], [0.5607121728700621, -0.7010925141906273, 0.7312095716779651, -0.1827905678652992, -0.4204850686781715, 1.2418317160475625, 0.9253258920652842, 0.0990117957009871, -0.6352244692661719, -0.1121759392694975, -0.1949104321094566]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Dpf1vYOs,"[[1.1858879604165584, -0.4277302336719647, -0.4460673114879929, 0.6882397402061006, -0.4204850686781715, 0.1667336820981035, 0.0315292672931443, -0.1984133908636599, -0.7007467404870967, -0.1120904762325074, -0.1888832303196357], [0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274], [0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927], [0.7625918542652849, -0.4726366370107562, 0.3437368887718876, -0.2132461730426209, -0.4135813589081924, -0.2653150605170996, -0.1044654528830015, -0.1699444813184293, -0.6845423078195562, -0.1120364821432462, -0.1948784336245936], [1.0024596477510064, -0.7372792275607213, 0.5226143957772006, -0.1411679074562929, -0.4204850686781715, 0.1767813272752013, -0.0663705463276354, -0.2163937547869634, -0.7430191735328545, -0.1118831124295778, -0.1947274664139583], [0.8505071993890109, -0.4290381871672694, 0.2768721337571221, -0.2792333175934845, -0.4204850686781715, 0.6992588764842841, 0.6045913562281688, -0.256100391784259, -0.7789507416217487, -0.1121739517570094, -0.1949085176701913], [0.268746397088799, -0.5859926066038224, 0.5820497335681035, 0.0882643182128637, -0.4204850686781715, 0.2571624886919831, 0.346119463363265, -0.2291298458993036, -0.7183602542561625, -0.1120619885535107, -0.194829205186343], [0.5607121728700621, -0.7010925141906273, 0.7312095716779651, -0.1827905678652992, -0.4204850686781715, 1.2418317160475625, 0.9253258920652842, 0.0990117957009871, -0.6352244692661719, -0.1121759392694975, -0.1949104321094566], [0.4434917127050939, -0.8266560497398695, 0.6237687687482564, 0.4100785462532294, -0.4078959508623273, 1.894928652558916, 0.7086355096159431, 0.0480674312516269, -0.6472016586291367, -0.111881456169171, -0.1948855443990076]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>""], [""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
xE7bvk98,"[[0.9427640430373654, -0.2607481707714101, 0.0277009099414144, -0.3147648569670264, -0.4204850686781715, -0.4562203188819567, -0.1568971522280217, -0.2283806640691658, -0.7796552821725113, -0.1120918012408328, -0.1948953900866578], [0.6833595061908156, -0.5615774746914696, 0.5551895328356762, -0.3096889227708062, -0.4204850686781715, 0.22701955316069, -0.1626318693438832, -0.2680873010664614, -0.8409503100888603, -0.1121769330257416, -0.1949112525834274], [0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927], [0.7625918542652849, -0.4726366370107562, 0.3437368887718876, -0.2132461730426209, -0.4135813589081924, -0.2653150605170996, -0.1044654528830015, -0.1699444813184293, -0.6845423078195562, -0.1120364821432462, -0.1948784336245936], [1.0024596477510064, -0.7372792275607213, 0.5226143957772006, -0.1411679074562929, -0.4204850686781715, 0.1767813272752013, -0.0663705463276354, -0.2163937547869634, -0.7430191735328545, -0.1118831124295778, -0.1947274664139583], [0.8505071993890109, -0.4290381871672694, 0.2768721337571221, -0.2792333175934845, -0.4204850686781715, 0.6992588764842841, 0.6045913562281688, -0.256100391784259, -0.7789507416217487, -0.1121739517570094, -0.1949085176701913], [0.268746397088799, -0.5859926066038224, 0.5820497335681035, 0.0882643182128637, -0.4204850686781715, 0.2571624886919831, 0.346119463363265, -0.2291298458993036, -0.7183602542561625, -0.1120619885535107, -0.194829205186343], [0.5607121728700621, -0.7010925141906273, 0.7312095716779651, -0.1827905678652992, -0.4204850686781715, 1.2418317160475625, 0.9253258920652842, 0.0990117957009871, -0.6352244692661719, -0.1121759392694975, -0.1949104321094566], [0.4434917127050939, -0.8266560497398695, 0.6237687687482564, 0.4100785462532294, -0.4078959508623273, 1.894928652558916, 0.7086355096159431, 0.0480674312516269, -0.6472016586291367, -0.111881456169171, -0.1948855443990076], [0.1743188041781303, -1.2909795405730042, 1.0158134007151722, 1.0486310681377404, -0.4204850686781715, 1.894928652558916, 0.6062298468327008, -0.0358409337237897, -0.7247011192130262, -0.1119980569018087, -0.1948819890118006]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root""], [""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
0CSVFGxM,"[[0.2340144088917714, -0.5009756294090228, 0.3951713157063228, 0.2547549598488888, -0.4204850686781715, 0.6892112313071863, -0.0528529988402474, -0.2516053008034332, -0.782473444375562, -0.1121842205715315, -0.1949131670226927], [0.7625918542652849, -0.4726366370107562, 0.3437368887718876, -0.2132461730426209, -0.4135813589081924, -0.2653150605170996, -0.1044654528830015, -0.1699444813184293, -0.6845423078195562, -0.1120364821432462, -0.1948784336245936], [1.0024596477510064, -0.7372792275607213, 0.5226143957772006, -0.1411679074562929, -0.4204850686781715, 0.1767813272752013, -0.0663705463276354, -0.2163937547869634, -0.7430191735328545, -0.1118831124295778, -0.1947274664139583], [0.8505071993890109, -0.4290381871672694, 0.2768721337571221, -0.2792333175934845, -0.4204850686781715, 0.6992588764842841, 0.6045913562281688, -0.256100391784259, -0.7789507416217487, -0.1121739517570094, -0.1949085176701913], [0.268746397088799, -0.5859926066038224, 0.5820497335681035, 0.0882643182128637, -0.4204850686781715, 0.2571624886919831, 0.346119463363265, -0.2291298458993036, -0.7183602542561625, -0.1120619885535107, -0.194829205186343], [0.5607121728700621, -0.7010925141906273, 0.7312095716779651, -0.1827905678652992, -0.4204850686781715, 1.2418317160475625, 0.9253258920652842, 0.0990117957009871, -0.6352244692661719, -0.1121759392694975, -0.1949104321094566], [0.4434917127050939, -0.8266560497398695, 0.6237687687482564, 0.4100785462532294, -0.4078959508623273, 1.894928652558916, 0.7086355096159431, 0.0480674312516269, -0.6472016586291367, -0.111881456169171, -0.1948855443990076], [0.1743188041781303, -1.2909795405730042, 1.0158134007151722, 1.0486310681377404, -0.4204850686781715, 1.894928652558916, 0.6062298468327008, -0.0358409337237897, -0.7247011192130262, -0.1119980569018087, -0.1948819890118006], [0.4814798247955929, -0.92431657738928, 0.666059297561014, 0.5278402196055397, 1.4293030491015075, 1.2518793612246604, 0.3100726700635637, -0.0058736605182837, -0.6915877133271824, -0.1121295639781075, -0.1949068767222496], [0.3023930106546694, -0.5310585598010287, 0.5471886219792087, -0.0102088051938097, -0.4204850686781715, -0.2653150605170996, 0.0278426634329476, 0.0780347044571331, -0.633110847613884, -0.1121547391362907, -0.194899492456512]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:""], [""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests.""], [""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
tHG5zLjQ,"[[0.8505071993890109, -0.4290381871672694, 0.2768721337571221, -0.2792333175934845, -0.4204850686781715, 0.6992588764842841, 0.6045913562281688, -0.256100391784259, -0.7789507416217487, -0.1121739517570094, -0.1949085176701913], [0.268746397088799, -0.5859926066038224, 0.5820497335681035, 0.0882643182128637, -0.4204850686781715, 0.2571624886919831, 0.346119463363265, -0.2291298458993036, -0.7183602542561625, -0.1120619885535107, -0.194829205186343], [0.5607121728700621, -0.7010925141906273, 0.7312095716779651, -0.1827905678652992, -0.4204850686781715, 1.2418317160475625, 0.9253258920652842, 0.0990117957009871, -0.6352244692661719, -0.1121759392694975, -0.1949104321094566], [0.4434917127050939, -0.8266560497398695, 0.6237687687482564, 0.4100785462532294, -0.4078959508623273, 1.894928652558916, 0.7086355096159431, 0.0480674312516269, -0.6472016586291367, -0.111881456169171, -0.1948855443990076], [0.1743188041781303, -1.2909795405730042, 1.0158134007151722, 1.0486310681377404, -0.4204850686781715, 1.894928652558916, 0.6062298468327008, -0.0358409337237897, -0.7247011192130262, -0.1119980569018087, -0.1948819890118006], [0.4814798247955929, -0.92431657738928, 0.666059297561014, 0.5278402196055397, 1.4293030491015075, 1.2518793612246604, 0.3100726700635637, -0.0058736605182837, -0.6915877133271824, -0.1121295639781075, -0.1949068767222496], [0.3023930106546694, -0.5310585598010287, 0.5471886219792087, -0.0102088051938097, -0.4204850686781715, -0.2653150605170996, 0.0278426634329476, 0.0780347044571331, -0.633110847613884, -0.1121547391362907, -0.194899492456512], [0.7332867392240429, -0.5890444980928661, 0.5454741410813941, -0.2741573833972642, 1.4293030491015075, -0.3155532864025883, 0.0692145511973775, 0.015852612555708, -0.6105655499894799, -0.1114402283968032, 0.1441479749199601], [0.7202622436501573, -0.5628854281867742, 0.5466171283466037, -0.324916725359467, -0.4176423646552389, -0.5968873513613252, -0.1683665864597448, -0.0455802975155793, -0.6760878212104046, -0.1089223813264073, 2.4617897553102503], [0.5303216831976629, -0.3335575820100332, 0.3460228633023069, -0.324916725359467, -0.4204850686781715, -0.3858868026422726, -0.1470662086008304, -0.0583163886279192, -0.6789059834134551, -0.1121633516904059, -0.1949049622829843]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:""], [""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)""], [""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
eTnRdf7J,"[[0.5607121728700621, -0.7010925141906273, 0.7312095716779651, -0.1827905678652992, -0.4204850686781715, 1.2418317160475625, 0.9253258920652842, 0.0990117957009871, -0.6352244692661719, -0.1121759392694975, -0.1949104321094566], [0.4434917127050939, -0.8266560497398695, 0.6237687687482564, 0.4100785462532294, -0.4078959508623273, 1.894928652558916, 0.7086355096159431, 0.0480674312516269, -0.6472016586291367, -0.111881456169171, -0.1948855443990076], [0.1743188041781303, -1.2909795405730042, 1.0158134007151722, 1.0486310681377404, -0.4204850686781715, 1.894928652558916, 0.6062298468327008, -0.0358409337237897, -0.7247011192130262, -0.1119980569018087, -0.1948819890118006], [0.4814798247955929, -0.92431657738928, 0.666059297561014, 0.5278402196055397, 1.4293030491015075, 1.2518793612246604, 0.3100726700635637, -0.0058736605182837, -0.6915877133271824, -0.1121295639781075, -0.1949068767222496], [0.3023930106546694, -0.5310585598010287, 0.5471886219792087, -0.0102088051938097, -0.4204850686781715, -0.2653150605170996, 0.0278426634329476, 0.0780347044571331, -0.633110847613884, -0.1121547391362907, -0.194899492456512], [0.7332867392240429, -0.5890444980928661, 0.5454741410813941, -0.2741573833972642, 1.4293030491015075, -0.3155532864025883, 0.0692145511973775, 0.015852612555708, -0.6105655499894799, -0.1114402283968032, 0.1441479749199601], [0.7202622436501573, -0.5628854281867742, 0.5466171283466037, -0.324916725359467, -0.4176423646552389, -0.5968873513613252, -0.1683665864597448, -0.0455802975155793, -0.6760878212104046, -0.1089223813264073, 2.4617897553102503], [0.5303216831976629, -0.3335575820100332, 0.3460228633023069, -0.324916725359467, -0.4204850686781715, -0.3858868026422726, -0.1470662086008304, -0.0583163886279192, -0.6789059834134551, -0.1121633516904059, -0.1949049622829843], [0.240526656678714, -0.39415942729248, 0.5660479118551681, -0.3046129885745859, -0.4203497018199366, -0.5466491254758366, -0.1544394163212238, 0.0323346128187364, -0.6718605779058288, -0.1120908074845887, -0.1948962105606286], [0.6540543911495736, -0.5332384822932029, 0.5340442684292974, -0.3096889227708062, -0.3777768249050658, -0.5366014802987388, -0.1634511146461492, 0.0046148851036433, -0.5964747389742272, -0.1121716329924399, -0.1949085176701913]]",1,"[[""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>""], [""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root""], [""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>""], [""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Qej9ZTp8,"[[0.4434917127050939, -0.8266560497398695, 0.6237687687482564, 0.4100785462532294, -0.4078959508623273, 1.894928652558916, 0.7086355096159431, 0.0480674312516269, -0.6472016586291367, -0.111881456169171, -0.1948855443990076], [0.1743188041781303, -1.2909795405730042, 1.0158134007151722, 1.0486310681377404, -0.4204850686781715, 1.894928652558916, 0.6062298468327008, -0.0358409337237897, -0.7247011192130262, -0.1119980569018087, -0.1948819890118006], [0.4814798247955929, -0.92431657738928, 0.666059297561014, 0.5278402196055397, 1.4293030491015075, 1.2518793612246604, 0.3100726700635637, -0.0058736605182837, -0.6915877133271824, -0.1121295639781075, -0.1949068767222496], [0.3023930106546694, -0.5310585598010287, 0.5471886219792087, -0.0102088051938097, -0.4204850686781715, -0.2653150605170996, 0.0278426634329476, 0.0780347044571331, -0.633110847613884, -0.1121547391362907, -0.194899492456512], [0.7332867392240429, -0.5890444980928661, 0.5454741410813941, -0.2741573833972642, 1.4293030491015075, -0.3155532864025883, 0.0692145511973775, 0.015852612555708, -0.6105655499894799, -0.1114402283968032, 0.1441479749199601], [0.7202622436501573, -0.5628854281867742, 0.5466171283466037, -0.324916725359467, -0.4176423646552389, -0.5968873513613252, -0.1683665864597448, -0.0455802975155793, -0.6760878212104046, -0.1089223813264073, 2.4617897553102503], [0.5303216831976629, -0.3335575820100332, 0.3460228633023069, -0.324916725359467, -0.4204850686781715, -0.3858868026422726, -0.1470662086008304, -0.0583163886279192, -0.6789059834134551, -0.1121633516904059, -0.1949049622829843], [0.240526656678714, -0.39415942729248, 0.5660479118551681, -0.3046129885745859, -0.4203497018199366, -0.5466491254758366, -0.1544394163212238, 0.0323346128187364, -0.6718605779058288, -0.1120908074845887, -0.1948962105606286], [0.6540543911495736, -0.5332384822932029, 0.5340442684292974, -0.3096889227708062, -0.3777768249050658, -0.5366014802987388, -0.1634511146461492, 0.0046148851036433, -0.5964747389742272, -0.1121716329924399, -0.1949085176701913], [0.1471844383992025, -0.7525386850059418, 1.0455310696106237, -0.233549909827502, -0.3424460749057613, 1.151402909453683, -0.1560779069257557, -0.0688049342498464, -0.6521334424844751, -0.1121759392694975, -0.1949104321094566]]",1,"[[""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)""], [""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
X5q8Gmxk,"[[0.1743188041781303, -1.2909795405730042, 1.0158134007151722, 1.0486310681377404, -0.4204850686781715, 1.894928652558916, 0.6062298468327008, -0.0358409337237897, -0.7247011192130262, -0.1119980569018087, -0.1948819890118006], [0.4814798247955929, -0.92431657738928, 0.666059297561014, 0.5278402196055397, 1.4293030491015075, 1.2518793612246604, 0.3100726700635637, -0.0058736605182837, -0.6915877133271824, -0.1121295639781075, -0.1949068767222496], [0.3023930106546694, -0.5310585598010287, 0.5471886219792087, -0.0102088051938097, -0.4204850686781715, -0.2653150605170996, 0.0278426634329476, 0.0780347044571331, -0.633110847613884, -0.1121547391362907, -0.194899492456512], [0.7332867392240429, -0.5890444980928661, 0.5454741410813941, -0.2741573833972642, 1.4293030491015075, -0.3155532864025883, 0.0692145511973775, 0.015852612555708, -0.6105655499894799, -0.1114402283968032, 0.1441479749199601], [0.7202622436501573, -0.5628854281867742, 0.5466171283466037, -0.324916725359467, -0.4176423646552389, -0.5968873513613252, -0.1683665864597448, -0.0455802975155793, -0.6760878212104046, -0.1089223813264073, 2.4617897553102503], [0.5303216831976629, -0.3335575820100332, 0.3460228633023069, -0.324916725359467, -0.4204850686781715, -0.3858868026422726, -0.1470662086008304, -0.0583163886279192, -0.6789059834134551, -0.1121633516904059, -0.1949049622829843], [0.240526656678714, -0.39415942729248, 0.5660479118551681, -0.3046129885745859, -0.4203497018199366, -0.5466491254758366, -0.1544394163212238, 0.0323346128187364, -0.6718605779058288, -0.1120908074845887, -0.1948962105606286], [0.6540543911495736, -0.5332384822932029, 0.5340442684292974, -0.3096889227708062, -0.3777768249050658, -0.5366014802987388, -0.1634511146461492, 0.0046148851036433, -0.5964747389742272, -0.1121716329924399, -0.1949085176701913], [0.1471844383992025, -0.7525386850059418, 1.0455310696106237, -0.233549909827502, -0.3424460749057613, 1.151402909453683, -0.1560779069257557, -0.0688049342498464, -0.6521334424844751, -0.1121759392694975, -0.1949104321094566], [0.1319891935630029, -0.3087064655992454, 0.3368789651806296, 0.0060341842340951, -0.4070160662838005, -0.0141239310896559, -0.1503431898098941, -0.0635606614388828, -0.669746956253541, -0.1120908074845887, -0.1948962105606286]]",1,"[[""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
rFSRgTly,"[[0.4814798247955929, -0.92431657738928, 0.666059297561014, 0.5278402196055397, 1.4293030491015075, 1.2518793612246604, 0.3100726700635637, -0.0058736605182837, -0.6915877133271824, -0.1121295639781075, -0.1949068767222496], [0.3023930106546694, -0.5310585598010287, 0.5471886219792087, -0.0102088051938097, -0.4204850686781715, -0.2653150605170996, 0.0278426634329476, 0.0780347044571331, -0.633110847613884, -0.1121547391362907, -0.194899492456512], [0.7332867392240429, -0.5890444980928661, 0.5454741410813941, -0.2741573833972642, 1.4293030491015075, -0.3155532864025883, 0.0692145511973775, 0.015852612555708, -0.6105655499894799, -0.1114402283968032, 0.1441479749199601], [0.7202622436501573, -0.5628854281867742, 0.5466171283466037, -0.324916725359467, -0.4176423646552389, -0.5968873513613252, -0.1683665864597448, -0.0455802975155793, -0.6760878212104046, -0.1089223813264073, 2.4617897553102503], [0.5303216831976629, -0.3335575820100332, 0.3460228633023069, -0.324916725359467, -0.4204850686781715, -0.3858868026422726, -0.1470662086008304, -0.0583163886279192, -0.6789059834134551, -0.1121633516904059, -0.1949049622829843], [0.240526656678714, -0.39415942729248, 0.5660479118551681, -0.3046129885745859, -0.4203497018199366, -0.5466491254758366, -0.1544394163212238, 0.0323346128187364, -0.6718605779058288, -0.1120908074845887, -0.1948962105606286], [0.6540543911495736, -0.5332384822932029, 0.5340442684292974, -0.3096889227708062, -0.3777768249050658, -0.5366014802987388, -0.1634511146461492, 0.0046148851036433, -0.5964747389742272, -0.1121716329924399, -0.1949085176701913], [0.1471844383992025, -0.7525386850059418, 1.0455310696106237, -0.233549909827502, -0.3424460749057613, 1.151402909453683, -0.1560779069257557, -0.0688049342498464, -0.6521334424844751, -0.1121759392694975, -0.1949104321094566], [0.1319891935630029, -0.3087064655992454, 0.3368789651806296, 0.0060341842340951, -0.4070160662838005, -0.0141239310896559, -0.1503431898098941, -0.0635606614388828, -0.669746956253541, -0.1120908074845887, -0.1948962105606286], [0.5140410637303062, -0.6077918315255655, 0.7026348900477234, -0.3046129885745859, -0.3986910045023552, -0.4964108995903478, -0.1671377185063459, -0.022355660781312, -0.6612924696443893, -0.1121759392694975, -0.1949104321094566]]",1,"[[""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>""], [""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
0pNDrm4T,"[[0.3023930106546694, -0.5310585598010287, 0.5471886219792087, -0.0102088051938097, -0.4204850686781715, -0.2653150605170996, 0.0278426634329476, 0.0780347044571331, -0.633110847613884, -0.1121547391362907, -0.194899492456512], [0.7332867392240429, -0.5890444980928661, 0.5454741410813941, -0.2741573833972642, 1.4293030491015075, -0.3155532864025883, 0.0692145511973775, 0.015852612555708, -0.6105655499894799, -0.1114402283968032, 0.1441479749199601], [0.7202622436501573, -0.5628854281867742, 0.5466171283466037, -0.324916725359467, -0.4176423646552389, -0.5968873513613252, -0.1683665864597448, -0.0455802975155793, -0.6760878212104046, -0.1089223813264073, 2.4617897553102503], [0.5303216831976629, -0.3335575820100332, 0.3460228633023069, -0.324916725359467, -0.4204850686781715, -0.3858868026422726, -0.1470662086008304, -0.0583163886279192, -0.6789059834134551, -0.1121633516904059, -0.1949049622829843], [0.240526656678714, -0.39415942729248, 0.5660479118551681, -0.3046129885745859, -0.4203497018199366, -0.5466491254758366, -0.1544394163212238, 0.0323346128187364, -0.6718605779058288, -0.1120908074845887, -0.1948962105606286], [0.6540543911495736, -0.5332384822932029, 0.5340442684292974, -0.3096889227708062, -0.3777768249050658, -0.5366014802987388, -0.1634511146461492, 0.0046148851036433, -0.5964747389742272, -0.1121716329924399, -0.1949085176701913], [0.1471844383992025, -0.7525386850059418, 1.0455310696106237, -0.233549909827502, -0.3424460749057613, 1.151402909453683, -0.1560779069257557, -0.0688049342498464, -0.6521334424844751, -0.1121759392694975, -0.1949104321094566], [0.1319891935630029, -0.3087064655992454, 0.3368789651806296, 0.0060341842340951, -0.4070160662838005, -0.0141239310896559, -0.1503431898098941, -0.0635606614388828, -0.669746956253541, -0.1120908074845887, -0.1948962105606286], [0.5140410637303062, -0.6077918315255655, 0.7026348900477234, -0.3046129885745859, -0.3986910045023552, -0.4964108995903478, -0.1671377185063459, -0.022355660781312, -0.6612924696443893, -0.1121759392694975, -0.1949104321094566], [0.6182370283213889, -0.5846846531085177, 0.617482338789603, -0.3046129885745859, -0.337505184580188, 0.1767813272752013, -0.151572057763293, 0.0270903400077729, -0.5823839279589746, -0.1121759392694975, -0.1949104321094566]]",1,"[[""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
rM3tQ5no,"[[0.7332867392240429, -0.5890444980928661, 0.5454741410813941, -0.2741573833972642, 1.4293030491015075, -0.3155532864025883, 0.0692145511973775, 0.015852612555708, -0.6105655499894799, -0.1114402283968032, 0.1441479749199601], [0.7202622436501573, -0.5628854281867742, 0.5466171283466037, -0.324916725359467, -0.4176423646552389, -0.5968873513613252, -0.1683665864597448, -0.0455802975155793, -0.6760878212104046, -0.1089223813264073, 2.4617897553102503], [0.5303216831976629, -0.3335575820100332, 0.3460228633023069, -0.324916725359467, -0.4204850686781715, -0.3858868026422726, -0.1470662086008304, -0.0583163886279192, -0.6789059834134551, -0.1121633516904059, -0.1949049622829843], [0.240526656678714, -0.39415942729248, 0.5660479118551681, -0.3046129885745859, -0.4203497018199366, -0.5466491254758366, -0.1544394163212238, 0.0323346128187364, -0.6718605779058288, -0.1120908074845887, -0.1948962105606286], [0.6540543911495736, -0.5332384822932029, 0.5340442684292974, -0.3096889227708062, -0.3777768249050658, -0.5366014802987388, -0.1634511146461492, 0.0046148851036433, -0.5964747389742272, -0.1121716329924399, -0.1949085176701913], [0.1471844383992025, -0.7525386850059418, 1.0455310696106237, -0.233549909827502, -0.3424460749057613, 1.151402909453683, -0.1560779069257557, -0.0688049342498464, -0.6521334424844751, -0.1121759392694975, -0.1949104321094566], [0.1319891935630029, -0.3087064655992454, 0.3368789651806296, 0.0060341842340951, -0.4070160662838005, -0.0141239310896559, -0.1503431898098941, -0.0635606614388828, -0.669746956253541, -0.1120908074845887, -0.1948962105606286], [0.5140410637303062, -0.6077918315255655, 0.7026348900477234, -0.3046129885745859, -0.3986910045023552, -0.4964108995903478, -0.1671377185063459, -0.022355660781312, -0.6612924696443893, -0.1121759392694975, -0.1949104321094566], [0.6182370283213889, -0.5846846531085177, 0.617482338789603, -0.3046129885745859, -0.337505184580188, 0.1767813272752013, -0.151572057763293, 0.0270903400077729, -0.5823839279589746, -0.1121759392694975, -0.1949104321094566], [0.3718569870487246, -0.403315101759612, 0.4294609336626127, -0.161471644241174, 1.168789530428475, 1.060974102859803, -0.1704146997154096, -0.0261015699320003, -0.6317017665123588, -0.1120908074845887, -0.1948962105606286]]",1,"[[""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
G3mdbfXZ,"[[0.4282964678688944, -0.515799102355808, -0.0534511858884719, 0.9044745369650844, 2.75440922436278, 1.894928652558916, -0.1142963965101928, 0.0255919763474976, -0.608451928337192, -0.112006669455924, -0.1949000394391592], [0.4413209634427797, -0.2790595197056747, -0.1260308772292858, 0.4689593829293846, 1.2326150040862225, 1.894928652558916, -0.152391303065559, -0.0111179333292473, -0.6183154960478688, -0.1121295639781075, -0.1949068767222496], [0.1743188041781303, -0.569425195663297, 0.104852550343067, 0.9867046709438532, 1.2880477325334072, 1.894928652558916, -0.1155252644635917, -0.0635606614388828, -0.6683378751520156, -0.1121716329924399, -0.1949104321094566], [0.2340144088917714, -0.3897995823081315, -0.0300199469516737, 0.7521965110784762, 2.4142323096185185, 1.894928652558916, -0.1192118683237884, -0.0620622977786075, -0.6662242534997277, -0.1120865012075311, -0.1948890997862146], [0.4087597245080664, -0.3893635978096965, -0.1174584727402133, 0.7420446426860356, 0.578251611378797, 1.894928652558916, -0.0835746976752201, -0.0193589334607614, -0.6232472799032073, -0.1121484453467449, -0.1949003129304828], [0.463028456065922, -0.8096526543009096, 0.4386048317842901, 0.6821486191706364, 2.0201117018676555, 1.894928652558916, -0.084393942977486, 0.0076116124241938, -0.5971792795249898, -0.1121739517570094, -0.1949104321094566], [0.3197590047531832, -0.7577704989871601, 0.2522979075551143, 1.0262969576743712, 2.3252286003290825, 1.4528322647666154, -0.1261754533930489, -0.044081933855304, -0.6500198208321872, -0.1120865012075311, -0.1948847239250368], [0.2730878956134275, -0.6117156920114795, 0.4534636662320158, 0.3725166332011993, -0.4020751759582273, 0.6389730054216977, -0.1421507367872347, -0.0650590250991581, -0.6683378751520156, -0.1121484453467449, -0.194899492456512], [0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
NXRA96og,"[[0.4413209634427797, -0.2790595197056747, -0.1260308772292858, 0.4689593829293846, 1.2326150040862225, 1.894928652558916, -0.152391303065559, -0.0111179333292473, -0.6183154960478688, -0.1121295639781075, -0.1949068767222496], [0.1743188041781303, -0.569425195663297, 0.104852550343067, 0.9867046709438532, 1.2880477325334072, 1.894928652558916, -0.1155252644635917, -0.0635606614388828, -0.6683378751520156, -0.1121716329924399, -0.1949104321094566], [0.2340144088917714, -0.3897995823081315, -0.0300199469516737, 0.7521965110784762, 2.4142323096185185, 1.894928652558916, -0.1192118683237884, -0.0620622977786075, -0.6662242534997277, -0.1120865012075311, -0.1948890997862146], [0.4087597245080664, -0.3893635978096965, -0.1174584727402133, 0.7420446426860356, 0.578251611378797, 1.894928652558916, -0.0835746976752201, -0.0193589334607614, -0.6232472799032073, -0.1121484453467449, -0.1949003129304828], [0.463028456065922, -0.8096526543009096, 0.4386048317842901, 0.6821486191706364, 2.0201117018676555, 1.894928652558916, -0.084393942977486, 0.0076116124241938, -0.5971792795249898, -0.1121739517570094, -0.1949104321094566], [0.3197590047531832, -0.7577704989871601, 0.2522979075551143, 1.0262969576743712, 2.3252286003290825, 1.4528322647666154, -0.1261754533930489, -0.044081933855304, -0.6500198208321872, -0.1120865012075311, -0.1948847239250368], [0.2730878956134275, -0.6117156920114795, 0.4534636662320158, 0.3725166332011993, -0.4020751759582273, 0.6389730054216977, -0.1421507367872347, -0.0650590250991581, -0.6683378751520156, -0.1121484453467449, -0.194899492456512], [0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
CPGYOEdZ,"[[0.1743188041781303, -0.569425195663297, 0.104852550343067, 0.9867046709438532, 1.2880477325334072, 1.894928652558916, -0.1155252644635917, -0.0635606614388828, -0.6683378751520156, -0.1121716329924399, -0.1949104321094566], [0.2340144088917714, -0.3897995823081315, -0.0300199469516737, 0.7521965110784762, 2.4142323096185185, 1.894928652558916, -0.1192118683237884, -0.0620622977786075, -0.6662242534997277, -0.1120865012075311, -0.1948890997862146], [0.4087597245080664, -0.3893635978096965, -0.1174584727402133, 0.7420446426860356, 0.578251611378797, 1.894928652558916, -0.0835746976752201, -0.0193589334607614, -0.6232472799032073, -0.1121484453467449, -0.1949003129304828], [0.463028456065922, -0.8096526543009096, 0.4386048317842901, 0.6821486191706364, 2.0201117018676555, 1.894928652558916, -0.084393942977486, 0.0076116124241938, -0.5971792795249898, -0.1121739517570094, -0.1949104321094566], [0.3197590047531832, -0.7577704989871601, 0.2522979075551143, 1.0262969576743712, 2.3252286003290825, 1.4528322647666154, -0.1261754533930489, -0.044081933855304, -0.6500198208321872, -0.1120865012075311, -0.1948847239250368], [0.2730878956134275, -0.6117156920114795, 0.4534636662320158, 0.3725166332011993, -0.4020751759582273, 0.6389730054216977, -0.1421507367872347, -0.0650590250991581, -0.6683378751520156, -0.1121484453467449, -0.194899492456512], [0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
BF1gd65A,"[[0.2340144088917714, -0.3897995823081315, -0.0300199469516737, 0.7521965110784762, 2.4142323096185185, 1.894928652558916, -0.1192118683237884, -0.0620622977786075, -0.6662242534997277, -0.1120865012075311, -0.1948890997862146], [0.4087597245080664, -0.3893635978096965, -0.1174584727402133, 0.7420446426860356, 0.578251611378797, 1.894928652558916, -0.0835746976752201, -0.0193589334607614, -0.6232472799032073, -0.1121484453467449, -0.1949003129304828], [0.463028456065922, -0.8096526543009096, 0.4386048317842901, 0.6821486191706364, 2.0201117018676555, 1.894928652558916, -0.084393942977486, 0.0076116124241938, -0.5971792795249898, -0.1121739517570094, -0.1949104321094566], [0.3197590047531832, -0.7577704989871601, 0.2522979075551143, 1.0262969576743712, 2.3252286003290825, 1.4528322647666154, -0.1261754533930489, -0.044081933855304, -0.6500198208321872, -0.1120865012075311, -0.1948847239250368], [0.2730878956134275, -0.6117156920114795, 0.4534636662320158, 0.3725166332011993, -0.4020751759582273, 0.6389730054216977, -0.1421507367872347, -0.0650590250991581, -0.6683378751520156, -0.1121484453467449, -0.194899492456512], [0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
HUerXyxn,"[[0.4087597245080664, -0.3893635978096965, -0.1174584727402133, 0.7420446426860356, 0.578251611378797, 1.894928652558916, -0.0835746976752201, -0.0193589334607614, -0.6232472799032073, -0.1121484453467449, -0.1949003129304828], [0.463028456065922, -0.8096526543009096, 0.4386048317842901, 0.6821486191706364, 2.0201117018676555, 1.894928652558916, -0.084393942977486, 0.0076116124241938, -0.5971792795249898, -0.1121739517570094, -0.1949104321094566], [0.3197590047531832, -0.7577704989871601, 0.2522979075551143, 1.0262969576743712, 2.3252286003290825, 1.4528322647666154, -0.1261754533930489, -0.044081933855304, -0.6500198208321872, -0.1120865012075311, -0.1948847239250368], [0.2730878956134275, -0.6117156920114795, 0.4534636662320158, 0.3725166332011993, -0.4020751759582273, 0.6389730054216977, -0.1421507367872347, -0.0650590250991581, -0.6683378751520156, -0.1121484453467449, -0.194899492456512], [0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977], [-0.2120745645138014, -0.3130663105835945, -0.1540340652269226, 1.2090305887383013, 1.0780260519819858, 1.894928652558916, 0.1740779498874177, -0.1819313906006317, -0.7712007955633599, -0.1120768948971717, -0.1946429575949614]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
hkRBEbo5,"[[0.463028456065922, -0.8096526543009096, 0.4386048317842901, 0.6821486191706364, 2.0201117018676555, 1.894928652558916, -0.084393942977486, 0.0076116124241938, -0.5971792795249898, -0.1121739517570094, -0.1949104321094566], [0.3197590047531832, -0.7577704989871601, 0.2522979075551143, 1.0262969576743712, 2.3252286003290825, 1.4528322647666154, -0.1261754533930489, -0.044081933855304, -0.6500198208321872, -0.1120865012075311, -0.1948847239250368], [0.2730878956134275, -0.6117156920114795, 0.4534636662320158, 0.3725166332011993, -0.4020751759582273, 0.6389730054216977, -0.1421507367872347, -0.0650590250991581, -0.6683378751520156, -0.1121484453467449, -0.194899492456512], [0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977], [-0.2120745645138014, -0.3130663105835945, -0.1540340652269226, 1.2090305887383013, 1.0780260519819858, 1.894928652558916, 0.1740779498874177, -0.1819313906006317, -0.7712007955633599, -0.1120768948971717, -0.1946429575949614], [-0.0872564819307336, -1.1850353074533313, 0.9489486457004068, 1.1643623678115629, 0.5383183881995064, 1.894928652558916, -0.0184446961450779, -0.1819313906006317, -0.7704962550125972, 0.0265229509676495, -0.1946177963931888]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
KilrOY5G,"[[0.3197590047531832, -0.7577704989871601, 0.2522979075551143, 1.0262969576743712, 2.3252286003290825, 1.4528322647666154, -0.1261754533930489, -0.044081933855304, -0.6500198208321872, -0.1120865012075311, -0.1948847239250368], [0.2730878956134275, -0.6117156920114795, 0.4534636662320158, 0.3725166332011993, -0.4020751759582273, 0.6389730054216977, -0.1421507367872347, -0.0650590250991581, -0.6683378751520156, -0.1121484453467449, -0.194899492456512], [0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977], [-0.2120745645138014, -0.3130663105835945, -0.1540340652269226, 1.2090305887383013, 1.0780260519819858, 1.894928652558916, 0.1740779498874177, -0.1819313906006317, -0.7712007955633599, -0.1120768948971717, -0.1946429575949614], [-0.0872564819307336, -1.1850353074533313, 0.9489486457004068, 1.1643623678115629, 0.5383183881995064, 1.894928652558916, -0.0184446961450779, -0.1819313906006317, -0.7704962550125972, 0.0265229509676495, -0.1946177963931888], [-0.1968793196776018, -0.3802079233425638, -0.015161112503948, 1.1054815311354076, 0.32552168705427, 1.894928652558916, 1.0506704233119728, -0.1579575720362269, -0.7528827412435315, -0.111761874167801, -0.1938919504203154]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
8r2Evo6p,"[[0.2730878956134275, -0.6117156920114795, 0.4534636662320158, 0.3725166332011993, -0.4020751759582273, 0.6389730054216977, -0.1421507367872347, -0.0650590250991581, -0.6683378751520156, -0.1121484453467449, -0.194899492456512], [0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977], [-0.2120745645138014, -0.3130663105835945, -0.1540340652269226, 1.2090305887383013, 1.0780260519819858, 1.894928652558916, 0.1740779498874177, -0.1819313906006317, -0.7712007955633599, -0.1120768948971717, -0.1946429575949614], [-0.0872564819307336, -1.1850353074533313, 0.9489486457004068, 1.1643623678115629, 0.5383183881995064, 1.894928652558916, -0.0184446961450779, -0.1819313906006317, -0.7704962550125972, 0.0265229509676495, -0.1946177963931888], [-0.1968793196776018, -0.3802079233425638, -0.015161112503948, 1.1054815311354076, 0.32552168705427, 1.894928652558916, 1.0506704233119728, -0.1579575720362269, -0.7528827412435315, -0.111761874167801, -0.1938919504203154], [-0.1046224760292474, -1.70342087609239, 1.4730083067990394, 1.456736177513851, 0.5177426257478042, 1.894928652558916, 3.4436859512307816, -0.1564592083759516, -0.7521782006927689, -0.1116346733685599, 0.0865334722133158]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
wUl3pxi7,"[[0.2350997835229285, -0.9434998953204142, 1.2432678664918964, -0.2233980414350614, -0.4203497018199366, -0.4260773833506636, -0.1302716799043786, -0.0096195696689721, -0.6352244692661719, -0.1121739517570094, -0.1949104321094566], [0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977], [-0.2120745645138014, -0.3130663105835945, -0.1540340652269226, 1.2090305887383013, 1.0780260519819858, 1.894928652558916, 0.1740779498874177, -0.1819313906006317, -0.7712007955633599, -0.1120768948971717, -0.1946429575949614], [-0.0872564819307336, -1.1850353074533313, 0.9489486457004068, 1.1643623678115629, 0.5383183881995064, 1.894928652558916, -0.0184446961450779, -0.1819313906006317, -0.7704962550125972, 0.0265229509676495, -0.1946177963931888], [-0.1968793196776018, -0.3802079233425638, -0.015161112503948, 1.1054815311354076, 0.32552168705427, 1.894928652558916, 1.0506704233119728, -0.1579575720362269, -0.7528827412435315, -0.111761874167801, -0.1938919504203154], [-0.1046224760292474, -1.70342087609239, 1.4730083067990394, 1.456736177513851, 0.5177426257478042, 1.894928652558916, 3.4436859512307816, -0.1564592083759516, -0.7521782006927689, -0.1116346733685599, 0.0865334722133158], [-0.0492683698402346, -0.8641507166052682, 0.3620246850152424, 1.4242501986580411, 0.5533441094635785, 1.894928652558916, 4.874907494289378, -0.1407263899430609, -0.7359737680252283, -0.1120759011409277, -0.1949074237048968]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
7rbtaC1k,"[[0.3653447392617819, -0.4499654430921432, 0.5740488227116358, -0.3046129885745859, -0.4204850686781715, -0.5165061899445433, -0.1474758312519634, 0.0255919763474976, -0.6098610094387171, -0.1120908074845887, -0.1948874588382729], [0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977], [-0.2120745645138014, -0.3130663105835945, -0.1540340652269226, 1.2090305887383013, 1.0780260519819858, 1.894928652558916, 0.1740779498874177, -0.1819313906006317, -0.7712007955633599, -0.1120768948971717, -0.1946429575949614], [-0.0872564819307336, -1.1850353074533313, 0.9489486457004068, 1.1643623678115629, 0.5383183881995064, 1.894928652558916, -0.0184446961450779, -0.1819313906006317, -0.7704962550125972, 0.0265229509676495, -0.1946177963931888], [-0.1968793196776018, -0.3802079233425638, -0.015161112503948, 1.1054815311354076, 0.32552168705427, 1.894928652558916, 1.0506704233119728, -0.1579575720362269, -0.7528827412435315, -0.111761874167801, -0.1938919504203154], [-0.1046224760292474, -1.70342087609239, 1.4730083067990394, 1.456736177513851, 0.5177426257478042, 1.894928652558916, 3.4436859512307816, -0.1564592083759516, -0.7521782006927689, -0.1116346733685599, 0.0865334722133158], [-0.0492683698402346, -0.8641507166052682, 0.3620246850152424, 1.4242501986580411, 0.5533441094635785, 1.894928652558916, 4.874907494289378, -0.1407263899430609, -0.7359737680252283, -0.1120759011409277, -0.1949074237048968], [-0.0481829952090775, -1.0485721594432174, 0.5991945425462484, 1.4313565065327496, 0.7015031358016581, 1.894928652558916, 4.008145964492014, -0.1137558440581055, -0.6929967944287078, -0.1120865012075311, -0.1948910142254799]]",1,"[[""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library""], [""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
WCat4zGZ,"[[0.5390046802469197, -1.1732637259955898, 1.4330037525167012, -0.3096889227708062, -0.4204850686781715, -0.1849338991003176, -0.1147060191613258, -0.0088703878388343, -0.6126791716417678, -0.1118867562024727, -0.1936854644709863], [0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977], [-0.2120745645138014, -0.3130663105835945, -0.1540340652269226, 1.2090305887383013, 1.0780260519819858, 1.894928652558916, 0.1740779498874177, -0.1819313906006317, -0.7712007955633599, -0.1120768948971717, -0.1946429575949614], [-0.0872564819307336, -1.1850353074533313, 0.9489486457004068, 1.1643623678115629, 0.5383183881995064, 1.894928652558916, -0.0184446961450779, -0.1819313906006317, -0.7704962550125972, 0.0265229509676495, -0.1946177963931888], [-0.1968793196776018, -0.3802079233425638, -0.015161112503948, 1.1054815311354076, 0.32552168705427, 1.894928652558916, 1.0506704233119728, -0.1579575720362269, -0.7528827412435315, -0.111761874167801, -0.1938919504203154], [-0.1046224760292474, -1.70342087609239, 1.4730083067990394, 1.456736177513851, 0.5177426257478042, 1.894928652558916, 3.4436859512307816, -0.1564592083759516, -0.7521782006927689, -0.1116346733685599, 0.0865334722133158], [-0.0492683698402346, -0.8641507166052682, 0.3620246850152424, 1.4242501986580411, 0.5533441094635785, 1.894928652558916, 4.874907494289378, -0.1407263899430609, -0.7359737680252283, -0.1120759011409277, -0.1949074237048968], [-0.0481829952090775, -1.0485721594432174, 0.5991945425462484, 1.4313565065327496, 0.7015031358016581, 1.894928652558916, 4.008145964492014, -0.1137558440581055, -0.6929967944287078, -0.1120865012075311, -0.1948910142254799], [-0.1957939450464447, -0.264236046758889, -0.04259280686898, 0.8821404265017152, 0.7622151717200033, 1.894928652558916, 4.903171457217552, -0.0980230256252148, -0.633110847613884, -0.1120222383037478, -0.1949085176701913]]",1,"[[""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>""], [""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms""], [""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
p0rBTLQk,"[[0.376198485573353, -2.385300631644524, 3.093192755233744, -0.2832940649504607, 0.4575720572623986, -0.0342192214438514, -0.1503431898098941, -0.0508245703265429, -0.6507243613829498, -0.1121295639781075, -0.1941763813968747], [0.415271972295009, -1.3306541299305772, 1.5415875427116197, -0.0193454867470062, 1.1130183848357031, 1.894928652558916, 0.3244094628532176, -0.0620622977786075, -0.654247064136763, -0.1120533759993954, -0.1948726903067977], [-0.2120745645138014, -0.3130663105835945, -0.1540340652269226, 1.2090305887383013, 1.0780260519819858, 1.894928652558916, 0.1740779498874177, -0.1819313906006317, -0.7712007955633599, -0.1120768948971717, -0.1946429575949614], [-0.0872564819307336, -1.1850353074533313, 0.9489486457004068, 1.1643623678115629, 0.5383183881995064, 1.894928652558916, -0.0184446961450779, -0.1819313906006317, -0.7704962550125972, 0.0265229509676495, -0.1946177963931888], [-0.1968793196776018, -0.3802079233425638, -0.015161112503948, 1.1054815311354076, 0.32552168705427, 1.894928652558916, 1.0506704233119728, -0.1579575720362269, -0.7528827412435315, -0.111761874167801, -0.1938919504203154], [-0.1046224760292474, -1.70342087609239, 1.4730083067990394, 1.456736177513851, 0.5177426257478042, 1.894928652558916, 3.4436859512307816, -0.1564592083759516, -0.7521782006927689, -0.1116346733685599, 0.0865334722133158], [-0.0492683698402346, -0.8641507166052682, 0.3620246850152424, 1.4242501986580411, 0.5533441094635785, 1.894928652558916, 4.874907494289378, -0.1407263899430609, -0.7359737680252283, -0.1120759011409277, -0.1949074237048968], [-0.0481829952090775, -1.0485721594432174, 0.5991945425462484, 1.4313565065327496, 0.7015031358016581, 1.894928652558916, 4.008145964492014, -0.1137558440581055, -0.6929967944287078, -0.1120865012075311, -0.1948910142254799], [-0.1957939450464447, -0.264236046758889, -0.04259280686898, 0.8821404265017152, 0.7622151717200033, 1.894928652558916, 4.903171457217552, -0.0980230256252148, -0.633110847613884, -0.1120222383037478, -0.1949085176701913], [-0.1849401987348736, -0.1704993795953927, 0.0202714927175516, 0.5430680221942006, 0.8749080812005435, 1.543261071360495, -0.0864420562331509, -0.0980230256252148, -0.6147927932940556, -0.1114273095656303, -0.1933999395291326]]",1,"[[""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Input split: <*>"", ""Updating epoch to <*> and clearing cache"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations""], [""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Successfully loaded & initialized native-zlib library"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Got brand-new <*> <*>"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them""], [""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Code generated in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Updating epoch to <*> and clearing cache"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Don't have map outputs for shuffle <*> fetching them"", ""Don't have map outputs for shuffle <*> fetching them"", ""Got the output locations""], [""Don't have map outputs for shuffle <*> fetching them"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Started <*> remote fetches in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""Code generated in <*> ms"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""File Output Committer Algorithm version is 1"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>"", ""Using output committer class <*>""]]",0
8U5mcFEq,"[[-0.2609164229158714, 0.4084880343261125, -0.207754466691777, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4366532128474327, -0.4675438181846656, -0.1120682823430564, -0.1949074237048968], [-0.2283551839811581, 0.4350830887306395, -0.2649038299522604, -0.3198407911632467, -0.4155441783525982, -0.5968873513613252, -0.1757397941801383, -0.4621253950721128, -0.4604984126770393, -0.1121308889864329, -0.194904415300337], [-0.1143908477096613, 0.3587858015045375, -0.2191843393438737, -0.3299926595556873, -0.4159502789273028, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.4569757099232261, -0.112177264277823, -0.194903047843719], [0.064695966431262, 0.736348377149134, -0.8083942745594576, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.447816682763312, -0.1121524203717212, -0.1949109790921038], [0.9644715356605076, -0.1909906510218315, -0.0723104757644314, -0.3198407911632467, 3.253912931249499, -0.4562203188819567, -0.1757397941801383, -0.414926939773441, -0.4414758178064483, -0.0998152678536543, 3.667516458690245], [0.4141865976638519, -0.0126729911619701, -0.0105891634431093, -0.3299926595556873, -0.4161533292146552, -0.6169826417155208, -0.1757397941801383, -0.4606270314118376, -0.4125896552251804, -0.1050775384180945, 1.91458448614342], [-0.0764027356191624, 0.4677819261132546, -0.3820600246362514, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4643729405625258, -0.394271600905352, 3.4671830009271147, -0.189322457385361], [0.0809765858986186, 0.6469715549699855, -0.6998104843645391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3872261953977257, 3.531377004277485, -0.1889633632774548], [-0.1024517267669331, 0.4908891045303027, -0.3980618463491867, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3696126816286599, -0.1049705439958161, -0.1948808950465062], [-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
T175pYIG,"[[-0.1143908477096613, 0.3587858015045375, -0.2191843393438737, -0.3299926595556873, -0.4159502789273028, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.4569757099232261, -0.112177264277823, -0.194903047843719], [0.064695966431262, 0.736348377149134, -0.8083942745594576, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.447816682763312, -0.1121524203717212, -0.1949109790921038], [0.9644715356605076, -0.1909906510218315, -0.0723104757644314, -0.3198407911632467, 3.253912931249499, -0.4562203188819567, -0.1757397941801383, -0.414926939773441, -0.4414758178064483, -0.0998152678536543, 3.667516458690245], [0.4141865976638519, -0.0126729911619701, -0.0105891634431093, -0.3299926595556873, -0.4161533292146552, -0.6169826417155208, -0.1757397941801383, -0.4606270314118376, -0.4125896552251804, -0.1050775384180945, 1.91458448614342], [-0.0764027356191624, 0.4677819261132546, -0.3820600246362514, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4643729405625258, -0.394271600905352, 3.4671830009271147, -0.189322457385361], [0.0809765858986186, 0.6469715549699855, -0.6998104843645391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3872261953977257, 3.531377004277485, -0.1889633632774548], [-0.1024517267669331, 0.4908891045303027, -0.3980618463491867, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3696126816286599, -0.1049705439958161, -0.1948808950465062], [-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843], [-0.2392089302927292, 0.3243430261281833, -0.1111720427815601, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3710217627301851, -0.112099420038704, -0.1948702288848852], [-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
t9X0bB8L,"[[0.064695966431262, 0.736348377149134, -0.8083942745594576, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.447816682763312, -0.1121524203717212, -0.1949109790921038], [0.9644715356605076, -0.1909906510218315, -0.0723104757644314, -0.3198407911632467, 3.253912931249499, -0.4562203188819567, -0.1757397941801383, -0.414926939773441, -0.4414758178064483, -0.0998152678536543, 3.667516458690245], [0.4141865976638519, -0.0126729911619701, -0.0105891634431093, -0.3299926595556873, -0.4161533292146552, -0.6169826417155208, -0.1757397941801383, -0.4606270314118376, -0.4125896552251804, -0.1050775384180945, 1.91458448614342], [-0.0764027356191624, 0.4677819261132546, -0.3820600246362514, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4643729405625258, -0.394271600905352, 3.4671830009271147, -0.189322457385361], [0.0809765858986186, 0.6469715549699855, -0.6998104843645391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3872261953977257, 3.531377004277485, -0.1889633632774548], [-0.1024517267669331, 0.4908891045303027, -0.3980618463491867, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3696126816286599, -0.1049705439958161, -0.1948808950465062], [-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843], [-0.2392089302927292, 0.3243430261281833, -0.1111720427815601, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3710217627301851, -0.112099420038704, -0.1948702288848852], [-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245], [0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
G4v3d1zX,"[[0.9644715356605076, -0.1909906510218315, -0.0723104757644314, -0.3198407911632467, 3.253912931249499, -0.4562203188819567, -0.1757397941801383, -0.414926939773441, -0.4414758178064483, -0.0998152678536543, 3.667516458690245], [0.4141865976638519, -0.0126729911619701, -0.0105891634431093, -0.3299926595556873, -0.4161533292146552, -0.6169826417155208, -0.1757397941801383, -0.4606270314118376, -0.4125896552251804, -0.1050775384180945, 1.91458448614342], [-0.0764027356191624, 0.4677819261132546, -0.3820600246362514, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4643729405625258, -0.394271600905352, 3.4671830009271147, -0.189322457385361], [0.0809765858986186, 0.6469715549699855, -0.6998104843645391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3872261953977257, 3.531377004277485, -0.1889633632774548], [-0.1024517267669331, 0.4908891045303027, -0.3980618463491867, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3696126816286599, -0.1049705439958161, -0.1948808950465062], [-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843], [-0.2392089302927292, 0.3243430261281833, -0.1111720427815601, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3710217627301851, -0.112099420038704, -0.1948702288848852], [-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245], [0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265], [0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
kBOQ37Hz,"[[0.4141865976638519, -0.0126729911619701, -0.0105891634431093, -0.3299926595556873, -0.4161533292146552, -0.6169826417155208, -0.1757397941801383, -0.4606270314118376, -0.4125896552251804, -0.1050775384180945, 1.91458448614342], [-0.0764027356191624, 0.4677819261132546, -0.3820600246362514, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4643729405625258, -0.394271600905352, 3.4671830009271147, -0.189322457385361], [0.0809765858986186, 0.6469715549699855, -0.6998104843645391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3872261953977257, 3.531377004277485, -0.1889633632774548], [-0.1024517267669331, 0.4908891045303027, -0.3980618463491867, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3696126816286599, -0.1049705439958161, -0.1948808950465062], [-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843], [-0.2392089302927292, 0.3243430261281833, -0.1111720427815601, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3710217627301851, -0.112099420038704, -0.1948702288848852], [-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245], [0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265], [0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437], [-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ZBxoh3gE,"[[-0.0764027356191624, 0.4677819261132546, -0.3820600246362514, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4643729405625258, -0.394271600905352, 3.4671830009271147, -0.189322457385361], [0.0809765858986186, 0.6469715549699855, -0.6998104843645391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3872261953977257, 3.531377004277485, -0.1889633632774548], [-0.1024517267669331, 0.4908891045303027, -0.3980618463491867, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3696126816286599, -0.1049705439958161, -0.1948808950465062], [-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843], [-0.2392089302927292, 0.3243430261281833, -0.1111720427815601, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3710217627301851, -0.112099420038704, -0.1948702288848852], [-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245], [0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265], [0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437], [-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662], [-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root""], [""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
RYgLsTz9,"[[0.0809765858986186, 0.6469715549699855, -0.6998104843645391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3872261953977257, 3.531377004277485, -0.1889633632774548], [-0.1024517267669331, 0.4908891045303027, -0.3980618463491867, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3696126816286599, -0.1049705439958161, -0.1948808950465062], [-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843], [-0.2392089302927292, 0.3243430261281833, -0.1111720427815601, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3710217627301851, -0.112099420038704, -0.1948702288848852], [-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245], [0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265], [0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437], [-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662], [-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216], [-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>""], [""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>""], [""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
PaTbLON3,"[[-0.1024517267669331, 0.4908891045303027, -0.3980618463491867, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4508876676200482, -0.3696126816286599, -0.1049705439958161, -0.1948808950465062], [-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843], [-0.2392089302927292, 0.3243430261281833, -0.1111720427815601, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3710217627301851, -0.112099420038704, -0.1948702288848852], [-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245], [0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265], [0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437], [-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662], [-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216], [-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934], [0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root""], [""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>""], [""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
z1e6l7fE,"[[-0.2392089302927292, 0.4276713522572467, -0.2443300591784864, -0.3299926595556873, -0.4097234034484982, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3766580871362862, -0.1121391702884669, -0.1949049622829843], [-0.2392089302927292, 0.3243430261281833, -0.1111720427815601, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4164253034337162, -0.3710217627301851, -0.112099420038704, -0.1948702288848852], [-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245], [0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265], [0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437], [-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662], [-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216], [-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934], [0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718], [-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949]]",1,"[[""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""ApplicationAttemptId: <*>"", ""Connecting to ResourceManager at slave1/172.17.0.3:8030"", ""Registering the ApplicationMaster"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Preparing Local resources"", ""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>""], [""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
iG34OxsC,"[[-0.2337820571369436, -0.0100570841713608, 0.3271635734263475, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4239171217350925, -0.3667945194256095, -0.1121669954633009, -0.1949019538784245], [0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265], [0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437], [-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662], [-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216], [-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934], [0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718], [-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949], [-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188]]",1,"[[""Will request 2 executor container(s), each with 4 core(s) and 4505 MB memory (including 409 MB of overhead)"", ""Submitted 2 unlocalized container requests."", ""Started progress reporter thread with (heartbeat : 3000, initial allocation : 200) intervals"", ""Received new token for : <*>"", ""Received new token for : <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Launching container <*> on host <*> for executor with ID <*>"", ""Received <*> containers from YARN, launching executors on <*> of them."", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""yarn.client.max-cached-nodemanagers-proxies : 0"", ""Opening proxy : <*>"", ""Opening proxy : <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:""], [""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)""], [""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Started daemon with process name: <*>""], [""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver""], [""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
MgKvblEW,"[[0.0386469752834913, 0.543207244342487, -0.541506748133, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.414926939773441, -0.3625672761210335, -0.1118771498921133, -0.1944178742356265], [0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437], [-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662], [-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216], [-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934], [0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718], [-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949], [-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root""], [""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>""], [""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
JQ5B2boL,"[[0.4358940902869942, 0.4272353677588122, -0.5986561113934834, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4141777579433032, -0.3519991678595941, -0.1120765636450904, -0.1947747804129437], [-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662], [-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216], [-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934], [0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718], [-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949], [-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637], [-0.1588912075871029, -1.1017622682522712, 1.7187505688191185, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.003116521443368, -0.2272954903746084, -0.1119493628458492, -0.1562001966737078]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root""], [""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>""], [""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ElFVbpwn,"[[-0.1567204583247887, 0.1774162501556324, 0.0414167571239305, -0.3299926595556873, -0.406474598850861, -0.6169826417155208, -0.1757397941801383, -0.1714428449787046, -0.3364992757428161, -0.1120421134286292, -0.1949035948263662], [-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216], [-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934], [0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718], [-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949], [-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637], [-0.1588912075871029, -1.1017622682522712, 1.7187505688191185, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.003116521443368, -0.2272954903746084, -0.1119493628458492, -0.1562001966737078], [-0.2717701692274425, -0.8554310266365707, 1.4547205105556846, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.000868975952955, -0.2082728955040173, -0.1121640141945687, -0.1949071502135732]]",1,"[[""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:""], [""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Started daemon with process name: <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Registered signal handler for <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root""], [""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>""], [""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
yEIods5C,"[[-0.1578058329559458, -0.2476686358183642, 0.5986230489136436, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1684461176581538, -0.3245220863798514, -0.1120464197056869, -0.1948926551734216], [-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934], [0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718], [-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949], [-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637], [-0.1588912075871029, -1.1017622682522712, 1.7187505688191185, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.003116521443368, -0.2272954903746084, -0.1119493628458492, -0.1562001966737078], [-0.2717701692274425, -0.8554310266365707, 1.4547205105556846, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.000868975952955, -0.2082728955040173, -0.1121640141945687, -0.1949071502135732], [-0.2337820571369436, -0.8353757397085667, 1.4090010199472982, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, 0.015852612555708, -0.1977047872425777, -0.1121348640114092, -0.1948986719825411]]",1,"[[""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>""], [""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>""], [""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
bLIYGJ2h,"[[-0.1740864524233025, -0.007005192682317, 0.2917309682048477, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1669477539978785, -0.3097267348138361, -0.1119106063523304, -0.1946514358259934], [0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718], [-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949], [-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637], [-0.1588912075871029, -1.1017622682522712, 1.7187505688191185, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.003116521443368, -0.2272954903746084, -0.1119493628458492, -0.1562001966737078], [-0.2717701692274425, -0.8554310266365707, 1.4547205105556846, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.000868975952955, -0.2082728955040173, -0.1121640141945687, -0.1949071502135732], [-0.2337820571369436, -0.8353757397085667, 1.4090010199472982, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, 0.015852612555708, -0.1977047872425777, -0.1121348640114092, -0.1948986719825411], [-0.2880507886947993, -0.8301439257273484, 1.430717777986282, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1843185167780876, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Changing <*> acls to: root"", ""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)""], [""Fetching <*> to <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Changing <*> acls to: root""], [""Changing <*> acls to: root"", ""Changing <*> acls groups to:"", ""Changing <*> acls groups to:"", ""SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set()"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Created local directory at <*>"", ""MemoryStore started with capacity 2004.6 MiB"", ""Connecting to driver: <*>"", ""Resources for spark.executor:"", ""Successfully registered with driver"", ""Starting executor ID <*> on host <*>"", ""Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <*>"", ""Server created on <*>"", ""Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy"", ""Registering BlockManager <*> <*> <*> None)"", ""Registered BlockManager <*> <*> <*> None)"", ""Initialized BlockManager: <*> <*> <*> None)"", ""Fetching <*> with timestamp <*>"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Fetching <*> to <*>""], [""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Sn3b0MZr,"[[0.3599178661059964, -0.9443718643172838, 1.2392674110636626, -0.3299926595556873, 3.2790911668811877, -0.4562203188819567, -0.1757397941801383, -0.2118986638061376, -0.298454086001634, -0.1045213661734958, 5.796749519259718], [-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949], [-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637], [-0.1588912075871029, -1.1017622682522712, 1.7187505688191185, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.003116521443368, -0.2272954903746084, -0.1119493628458492, -0.1562001966737078], [-0.2717701692274425, -0.8554310266365707, 1.4547205105556846, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.000868975952955, -0.2082728955040173, -0.1121640141945687, -0.1949071502135732], [-0.2337820571369436, -0.8353757397085667, 1.4090010199472982, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, 0.015852612555708, -0.1977047872425777, -0.1121348640114092, -0.1948986719825411], [-0.2880507886947993, -0.8301439257273484, 1.430717777986282, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1843185167780876, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8205522667617814, 1.4067150454168789, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1800912734735119, -0.112172626748684, -0.1949107056007802]]",1,"[[""Copying <*> to <*>"", ""Adding <*> to class loader"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Copying <*> to <*>"", ""Adding <*> to class loader""], [""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
2cL58EHo,"[[-0.1241592193900754, -1.444446084022078, 2.1462278060075337, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.1729412086389798, -0.2702724639711288, -0.1114637472945796, -0.1922228328722949], [-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637], [-0.1588912075871029, -1.1017622682522712, 1.7187505688191185, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.003116521443368, -0.2272954903746084, -0.1119493628458492, -0.1562001966737078], [-0.2717701692274425, -0.8554310266365707, 1.4547205105556846, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.000868975952955, -0.2082728955040173, -0.1121640141945687, -0.1949071502135732], [-0.2337820571369436, -0.8353757397085667, 1.4090010199472982, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, 0.015852612555708, -0.1977047872425777, -0.1121348640114092, -0.1948986719825411], [-0.2880507886947993, -0.8301439257273484, 1.430717777986282, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1843185167780876, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8205522667617814, 1.4067150454168789, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1800912734735119, -0.112172626748684, -0.1949107056007802], [-0.2609164229158714, -0.9962540196310332, 1.6341695111936023, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.1695231652120725, -0.1121348640114092, -0.1948986719825411]]",1,"[[""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
X5ETJ8Z2,"[[-0.1263299686523896, -0.705016374676541, 1.1815465541705743, -0.3299926595556873, -0.4165594297893598, -0.6169826417155208, -0.1757397941801383, -0.0807918435320488, -0.2547725718543508, -0.1119089500919236, -0.1943421171389852], [-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637], [-0.1588912075871029, -1.1017622682522712, 1.7187505688191185, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.003116521443368, -0.2272954903746084, -0.1119493628458492, -0.1562001966737078], [-0.2717701692274425, -0.8554310266365707, 1.4547205105556846, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.000868975952955, -0.2082728955040173, -0.1121640141945687, -0.1949071502135732], [-0.2337820571369436, -0.8353757397085667, 1.4090010199472982, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, 0.015852612555708, -0.1977047872425777, -0.1121348640114092, -0.1948986719825411], [-0.2880507886947993, -0.8301439257273484, 1.430717777986282, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1843185167780876, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8205522667617814, 1.4067150454168789, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1800912734735119, -0.112172626748684, -0.1949107056007802], [-0.2609164229158714, -0.9962540196310332, 1.6341695111936023, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.1695231652120725, -0.1121348640114092, -0.1948986719825411], [-0.2989045350063704, -0.8275280187367391, 1.4330037525167012, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0510641585721777, -0.1617732191536837, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
6Y3PmXug,"[[-0.130671467177018, -0.844531414175699, 1.3667104911345402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0001197941228175, -0.2315227336791841, -0.1089194000576751, -0.1939406318759188], [-0.2337820571369436, 0.0457489316283023, 0.253440894820324, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0016181577830928, -0.2287045714761336, -0.1114425471613727, -0.1915380105979637], [-0.1588912075871029, -1.1017622682522712, 1.7187505688191185, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.003116521443368, -0.2272954903746084, -0.1119493628458492, -0.1562001966737078], [-0.2717701692274425, -0.8554310266365707, 1.4547205105556846, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.000868975952955, -0.2082728955040173, -0.1121640141945687, -0.1949071502135732], [-0.2337820571369436, -0.8353757397085667, 1.4090010199472982, -0.3299926595556873, -0.4173716309387691, -0.6169826417155208, -0.1757397941801383, 0.015852612555708, -0.1977047872425777, -0.1121348640114092, -0.1948986719825411], [-0.2880507886947993, -0.8301439257273484, 1.430717777986282, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1843185167780876, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8205522667617814, 1.4067150454168789, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.1800912734735119, -0.112172626748684, -0.1949107056007802], [-0.2609164229158714, -0.9962540196310332, 1.6341695111936023, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.1695231652120725, -0.1121348640114092, -0.1948986719825411], [-0.2989045350063704, -0.8275280187367391, 1.4330037525167012, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0510641585721777, -0.1617732191536837, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.7952651658525587, 1.384998287377895, -0.324916725359467, -0.4036995782570459, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1540232730952945, -0.1120464197056869, -0.1949055092656315]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Failed to load implementation from: <*>"", ""Failed to load implementation from: <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Ue8NQ6Dd,"[[-0.2934776618505848, -1.0027937871075563, 1.3872842619083143, 0.1532362759244832, 2.106611124279746, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120464197056869, -0.1949052357743079], [-0.2771970423832281, -1.076475167343049, 1.4478625869644268, 0.202980431047442, 2.2361572076105296, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119735442477883, -0.1948869118556257], [-0.2934776618505848, -1.0088975700856444, 1.3975711472952013, 0.149175528567507, 2.347293398221369, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -1.0006138646153817, 1.384998287377895, 0.1583122101207035, 1.40940412094098, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -1.006281663095035, 1.401571602723435, 0.1471451548890189, 1.8970632277321469, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1121348640114092, -0.1948983984912175], [-0.2826239155390136, -1.0533679889260008, 1.4632929150447576, 0.1268414181041378, 2.034731322557023, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.3043314081621559, -0.9792506241920734, 1.4061435517842742, 0.076082076141935, 2.1649542401789805, 1.8848810073818183, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7935212278588193, 1.391284717336548, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.801804933329082, 1.4021430963560402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
pehN2FGx,"[[-0.2934776618505848, -1.0088975700856444, 1.3975711472952013, 0.149175528567507, 2.347293398221369, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -1.0006138646153817, 1.384998287377895, 0.1583122101207035, 1.40940412094098, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -1.006281663095035, 1.401571602723435, 0.1471451548890189, 1.8970632277321469, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1121348640114092, -0.1948983984912175], [-0.2826239155390136, -1.0533679889260008, 1.4632929150447576, 0.1268414181041378, 2.034731322557023, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.3043314081621559, -0.9792506241920734, 1.4061435517842742, 0.076082076141935, 2.1649542401789805, 1.8848810073818183, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7935212278588193, 1.391284717336548, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.801804933329082, 1.4021430963560402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
TxwRn9F4,"[[-0.2989045350063704, -1.0006138646153817, 1.384998287377895, 0.1583122101207035, 1.40940412094098, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -1.006281663095035, 1.401571602723435, 0.1471451548890189, 1.8970632277321469, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1121348640114092, -0.1948983984912175], [-0.2826239155390136, -1.0533679889260008, 1.4632929150447576, 0.1268414181041378, 2.034731322557023, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.3043314081621559, -0.9792506241920734, 1.4061435517842742, 0.076082076141935, 2.1649542401789805, 1.8848810073818183, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7935212278588193, 1.391284717336548, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.801804933329082, 1.4021430963560402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Yxz4CucW,"[[-0.3043314081621559, -1.006281663095035, 1.401571602723435, 0.1471451548890189, 1.8970632277321469, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1121348640114092, -0.1948983984912175], [-0.2826239155390136, -1.0533679889260008, 1.4632929150447576, 0.1268414181041378, 2.034731322557023, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.3043314081621559, -0.9792506241920734, 1.4061435517842742, 0.076082076141935, 2.1649542401789805, 1.8848810073818183, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7935212278588193, 1.391284717336548, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.801804933329082, 1.4021430963560402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
BAjdopTM,"[[-0.2826239155390136, -1.0533679889260008, 1.4632929150447576, 0.1268414181041378, 2.034731322557023, 1.894928652558916, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.3043314081621559, -0.9792506241920734, 1.4061435517842742, 0.076082076141935, 2.1649542401789805, 1.8848810073818183, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7935212278588193, 1.391284717336548, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.801804933329082, 1.4021430963560402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
qKaD1QS3,"[[-0.3043314081621559, -0.9792506241920734, 1.4061435517842742, 0.076082076141935, 2.1649542401789805, 1.8848810073818183, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7935212278588193, 1.391284717336548, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.801804933329082, 1.4021430963560402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
pR3TvG1D,"[[-0.3097582813179415, -0.7935212278588193, 1.391284717336548, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.801804933329082, 1.4021430963560402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
UHFCKL1g,"[[-0.3043314081621559, -0.801804933329082, 1.4021430963560402, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121212826760736, -0.1949022273697481], [-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
UDJeB4dr,"[[-0.315185154473727, -0.8144484837836932, 1.424431348027629, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
chSFv1wn,"[[-0.3097582813179415, -0.6278471184535694, 1.1769746051097354, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
S9em0hEF,"[[-0.3097582813179415, -0.5759649631398202, 1.1089668628297604, -0.3299926595556873, -0.4185899326628831, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120500634785818, -0.1948940226300397], [-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
sUhQgEmf,"[[-0.3097582813179415, -0.5711691336570367, 1.1026804328711073, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674], [-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
LnQmejZE,"[[-0.2934776618505848, -0.5070794123871111, 1.0100984643891242, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674], [-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717], [-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
gtzb8uks,"[[-0.315185154473727, -0.2707758142354123, 0.7117787881694008, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674], [-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717], [-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
rwysagRl,"[[-0.2880507886947993, 0.0597004355782178, 0.2642992738398157, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119473753333611, -0.1949035948263662], [-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674], [-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717], [-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
F9lhKAm6,"[[-0.3043314081621559, 0.3038517547017445, -0.0471647559298187, -0.3299926595556873, -0.4185222492337656, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1119848068185544, -0.1948869118556257], [-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674], [-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717], [-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
PlmAku2q,"[[-0.3097582813179415, 0.3792770729309763, -0.1431756862074308, -0.3299926595556873, -0.407692900574975, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.5205360504238741, -0.328339623171397, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674], [-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717], [-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
IBwMA7gt,"[[-0.315185154473727, 0.5323076318816153, -0.3409124830887033, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674], [-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717], [-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397], [-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
4IAWZFg7,"[[-0.315185154473727, 0.5240239264113529, -0.3300541040692115, -0.3299926595556873, -0.3990294216479425, -0.6069349965384231, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120957762658091, -0.1948885528035674], [-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717], [-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397], [-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
YQV3sOSy,"[[-0.2989045350063704, 0.520100065925439, -0.3334830658648405, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1279552727170773, -0.112112338869877, -0.1949025008610717], [-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397], [-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.8227321892539555, 1.4210023862319996, -0.3299926595556873, -0.4162886960728901, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1244325699632641, -0.1120421134286292, -0.1949035948263662]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ix3LWaQN,"[[-0.315185154473727, 0.5305636938878762, -0.338626508558284, -0.3299926595556873, -0.4030227439658715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397], [-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.8227321892539555, 1.4210023862319996, -0.3299926595556873, -0.4162886960728901, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1244325699632641, -0.1120421134286292, -0.1949035948263662], [-0.315185154473727, -0.8074727318087351, 1.412429981742927, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1119735442477883, -0.1948869118556257]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
sVMux9p6,"[[-0.3206120276295126, 0.7298086096726107, -0.596941630495669, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397], [-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.8227321892539555, 1.4210023862319996, -0.3299926595556873, -0.4162886960728901, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1244325699632641, -0.1120421134286292, -0.1949035948263662], [-0.315185154473727, -0.8074727318087351, 1.412429981742927, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1119735442477883, -0.1948869118556257], [-0.3043314081621559, -0.7917772898650799, 1.3889987428061288, -0.3299926595556873, -0.4200789681034668, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Irb0oQJl,"[[-0.3097582813179415, 0.7450680671178309, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397], [-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.8227321892539555, 1.4210023862319996, -0.3299926595556873, -0.4162886960728901, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1244325699632641, -0.1120421134286292, -0.1949035948263662], [-0.315185154473727, -0.8074727318087351, 1.412429981742927, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1119735442477883, -0.1948869118556257], [-0.3043314081621559, -0.7917772898650799, 1.3889987428061288, -0.3299926595556873, -0.4200789681034668, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.788289413877601, 1.3872842619083143, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
kvNZRMmT,"[[-0.3097582813179415, 0.7385282996413083, -0.6198013757998624, -0.3198407911632467, -0.4204850686781715, -0.5968873513613252, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397], [-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.8227321892539555, 1.4210023862319996, -0.3299926595556873, -0.4162886960728901, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1244325699632641, -0.1120421134286292, -0.1949035948263662], [-0.315185154473727, -0.8074727318087351, 1.412429981742927, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1119735442477883, -0.1948869118556257], [-0.3043314081621559, -0.7917772898650799, 1.3889987428061288, -0.3299926595556873, -0.4200789681034668, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.788289413877601, 1.3872842619083143, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -0.7861094913854267, 1.3815693255822663, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
CBFJ3nPl,"[[-0.3097582813179415, 0.7271927026820014, -0.6220873503302816, -0.289385185985925, -0.4183868823755308, -0.5767920610071298, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1120613260493479, -0.1948940226300397], [-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.8227321892539555, 1.4210023862319996, -0.3299926595556873, -0.4162886960728901, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1244325699632641, -0.1120421134286292, -0.1949035948263662], [-0.315185154473727, -0.8074727318087351, 1.412429981742927, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1119735442477883, -0.1948869118556257], [-0.3043314081621559, -0.7917772898650799, 1.3889987428061288, -0.3299926595556873, -0.4200789681034668, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.788289413877601, 1.3872842619083143, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -0.7861094913854267, 1.3815693255822663, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7891613828744709, 1.3827123128474756, -0.3299926595556873, -0.4198759178161145, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
POt1ZqvE,"[[-0.2989045350063704, 0.7067014312555627, -0.5780823406197094, -0.3299926595556873, -0.372294467146553, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.1118337558694556, -0.1931510624246432], [-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.8227321892539555, 1.4210023862319996, -0.3299926595556873, -0.4162886960728901, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1244325699632641, -0.1120421134286292, -0.1949035948263662], [-0.315185154473727, -0.8074727318087351, 1.412429981742927, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1119735442477883, -0.1948869118556257], [-0.3043314081621559, -0.7917772898650799, 1.3889987428061288, -0.3299926595556873, -0.4200789681034668, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.788289413877601, 1.3872842619083143, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -0.7861094913854267, 1.3815693255822663, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7891613828744709, 1.3827123128474756, -0.3299926595556873, -0.4198759178161145, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481], [-0.3043314081621559, -0.8026769023259516, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120954450137277, -0.1949025008610717]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Successfully created connection to <*> after <*> ms (0 ms spent in bootstraps)"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
PCriv54N,"[[-0.2554895497600858, -0.5192869783432874, 1.0060980089608904, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1272507321663146, -0.0624172391205098, -0.1521467817664142], [-0.2717701692274425, -0.7987530418400379, 1.3809978319496612, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1258416510647893, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.8227321892539555, 1.4210023862319996, -0.3299926595556873, -0.4162886960728901, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1244325699632641, -0.1120421134286292, -0.1949035948263662], [-0.315185154473727, -0.8074727318087351, 1.412429981742927, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1119735442477883, -0.1948869118556257], [-0.3043314081621559, -0.7917772898650799, 1.3889987428061288, -0.3299926595556873, -0.4200789681034668, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.788289413877601, 1.3872842619083143, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -0.7861094913854267, 1.3815693255822663, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7891613828744709, 1.3827123128474756, -0.3299926595556873, -0.4198759178161145, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481], [-0.3043314081621559, -0.8026769023259516, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7970091038462985, 1.398714134560411, -0.3299926595556873, -0.3067092243317521, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
9DfMtZQi,"[[-0.2989045350063704, -0.7891613828744709, 1.3827123128474756, -0.3299926595556873, -0.4198759178161145, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121212826760736, -0.1949022273697481], [-0.3043314081621559, -0.8026769023259516, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7970091038462985, 1.398714134560411, -0.3299926595556873, -0.3067092243317521, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121126701219583, -0.1948986719825411], [-0.3097582813179415, -0.7952651658525587, 1.396428160029992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -0.7874174448807311, 1.3832838064800803, -0.3299926595556873, -0.417506997797004, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.8131405302883885, 1.411286994477717, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120444321931987, -0.1948940226300397], [-0.2826239155390136, -0.8079087163071702, 1.398714134560411, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
sKBA1wPJ,"[[-0.3043314081621559, -0.8026769023259516, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120954450137277, -0.1949025008610717], [-0.3097582813179415, -0.7970091038462985, 1.398714134560411, -0.3299926595556873, -0.3067092243317521, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121126701219583, -0.1948986719825411], [-0.3097582813179415, -0.7952651658525587, 1.396428160029992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -0.7874174448807311, 1.3832838064800803, -0.3299926595556873, -0.417506997797004, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.8131405302883885, 1.411286994477717, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120444321931987, -0.1948940226300397], [-0.2826239155390136, -0.8079087163071702, 1.398714134560411, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
4AfhEDsy,"[[-0.3097582813179415, -0.7970091038462985, 1.398714134560411, -0.3299926595556873, -0.3067092243317521, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121126701219583, -0.1948986719825411], [-0.3097582813179415, -0.7952651658525587, 1.396428160029992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -0.7874174448807311, 1.3832838064800803, -0.3299926595556873, -0.417506997797004, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.8131405302883885, 1.411286994477717, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120444321931987, -0.1948940226300397], [-0.2826239155390136, -0.8079087163071702, 1.398714134560411, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662], [-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
E3bTKQOW,"[[-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121126701219583, -0.1948986719825411], [-0.3097582813179415, -0.7952651658525587, 1.396428160029992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3043314081621559, -0.7874174448807311, 1.3832838064800803, -0.3299926595556873, -0.417506997797004, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.8131405302883885, 1.411286994477717, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120444321931987, -0.1948940226300397], [-0.2826239155390136, -0.8079087163071702, 1.398714134560411, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662], [-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257], [-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
UcK0kmF5,"[[-0.3043314081621559, -0.7874174448807311, 1.3832838064800803, -0.3299926595556873, -0.417506997797004, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.8131405302883885, 1.411286994477717, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120444321931987, -0.1948940226300397], [-0.2826239155390136, -0.8079087163071702, 1.398714134560411, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662], [-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257], [-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
KuDH9w0f,"[[-0.2989045350063704, -0.8131405302883885, 1.411286994477717, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.1120444321931987, -0.1948940226300397], [-0.2826239155390136, -0.8079087163071702, 1.398714134560411, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662], [-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257], [-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
nOTKRr4J,"[[-0.2826239155390136, -0.8079087163071702, 1.398714134560411, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662], [-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257], [-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
YM2zGPQg,"[[-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662], [-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257], [-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
NpRrXKo0,"[[-0.2989045350063704, -0.7407671035482002, 1.3192765196283391, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1120222383037478, -0.1949003129304828], [-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662], [-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257], [-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.7922132743635146, 1.3809978319496612, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1202053266586884, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks""], [""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
islfWnEb,"[[-0.3097582813179415, -0.4970517689231089, 1.0049550216956806, -0.3299926595556873, -0.4189960332375877, -0.6069349965384231, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119470440812797, -0.1949035948263662], [-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257], [-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.7922132743635146, 1.3809978319496612, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1202053266586884, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7935212278588193, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1216144077602136, -0.112172626748684, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
UZzNrEx6,"[[-0.315185154473727, -0.3618965744083, 0.8312209573838111, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119735442477883, -0.1948869118556257], [-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.7922132743635146, 1.3809978319496612, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1202053266586884, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7935212278588193, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1216144077602136, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.7943931968556892, 1.3867127682757097, -0.3299926595556873, -0.4135136754790749, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
VUzPDJE7,"[[-0.3206120276295126, -0.3483810549568189, 0.8163621229360852, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.7922132743635146, 1.3809978319496612, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1202053266586884, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7935212278588193, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1216144077602136, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.7943931968556892, 1.3867127682757097, -0.3299926595556873, -0.4135136754790749, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.791341305366645, 1.3798548446844516, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1223189483109761, -0.1120441009411174, -0.1948940226300397]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
0lBnRPvy,"[[-0.2989045350063704, -0.1508800771658235, 0.5460456347139988, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1216144077602136, -0.1119745380040324, -0.1949071502135732], [-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.7922132743635146, 1.3809978319496612, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1202053266586884, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7935212278588193, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1216144077602136, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.7943931968556892, 1.3867127682757097, -0.3299926595556873, -0.4135136754790749, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.791341305366645, 1.3798548446844516, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1223189483109761, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.8048568248181261, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.112172626748684, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
LWsMU9Qb,"[[-0.2826239155390136, 0.1839560176321557, 0.0985661203844139, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.069793704325619, -0.1223189483109761, -0.1119367752667576, -0.1948951165953342], [-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.7922132743635146, 1.3809978319496612, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1202053266586884, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7935212278588193, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1216144077602136, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.7943931968556892, 1.3867127682757097, -0.3299926595556873, -0.4135136754790749, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.791341305366645, 1.3798548446844516, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1223189483109761, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.8048568248181261, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.8070367473103003, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>""], [""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
SWJ5ztwB,"[[-0.2934776618505848, 0.5148682519442204, -0.3294826104366067, -0.3299926595556873, -0.4179807818008261, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.7922132743635146, 1.3809978319496612, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1202053266586884, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7935212278588193, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1216144077602136, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.7943931968556892, 1.3867127682757097, -0.3299926595556873, -0.4135136754790749, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.791341305366645, 1.3798548446844516, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1223189483109761, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.8048568248181261, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.8070367473103003, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.7935212278588193, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0690445224954812, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
jAqQcW02,"[[-0.2337820571369436, 0.3587858015045375, -0.156320039757342, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.0620541868393423, -0.1504399224157349], [-0.2771970423832281, -0.9552714767781556, 1.5890215142178208, -0.3299926595556873, -0.3339179628369636, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1216144077602136, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.7922132743635146, 1.3809978319496612, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1202053266586884, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7935212278588193, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1216144077602136, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.7943931968556892, 1.3867127682757097, -0.3299926595556873, -0.4135136754790749, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.791341305366645, 1.3798548446844516, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1223189483109761, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.8048568248181261, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.8070367473103003, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.7935212278588193, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0690445224954812, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7900333518713404, 1.3752828956236127, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1120460884536055, -0.1949052357743079]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
izlPYgeR,"[[-0.2880507886947993, -0.791341305366645, 1.3798548446844516, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1223189483109761, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.8048568248181261, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.8070367473103003, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.7935212278588193, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0690445224954812, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7900333518713404, 1.3752828956236127, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1120460884536055, -0.1949052357743079], [-0.3097582813179415, -0.7852375223885569, 1.3832838064800803, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1230234888617389, -0.111964931693673, -0.1948833564684187], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.7939572123572544, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
y0oTiZDe,"[[-0.3043314081621559, -0.8048568248181261, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.112172626748684, -0.1949107056007802], [-0.2934776618505848, -0.8070367473103003, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.7935212278588193, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0690445224954812, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7900333518713404, 1.3752828956236127, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1120460884536055, -0.1949052357743079], [-0.3097582813179415, -0.7852375223885569, 1.3832838064800803, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1230234888617389, -0.111964931693673, -0.1948833564684187], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.7939572123572544, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
LBp480n2,"[[-0.2934776618505848, -0.8070367473103003, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0682953406653434, -0.1230234888617389, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.7935212278588193, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0690445224954812, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7900333518713404, 1.3752828956236127, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1120460884536055, -0.1949052357743079], [-0.3097582813179415, -0.7852375223885569, 1.3832838064800803, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1230234888617389, -0.111964931693673, -0.1948833564684187], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.7939572123572544, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
BpSOLebm,"[[-0.3043314081621559, -0.7935212278588193, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0690445224954812, -0.1237280294125014, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7900333518713404, 1.3752828956236127, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1120460884536055, -0.1949052357743079], [-0.3097582813179415, -0.7852375223885569, 1.3832838064800803, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1230234888617389, -0.111964931693673, -0.1948833564684187], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.7939572123572544, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
hqHdPc96,"[[-0.2826239155390136, -0.7900333518713404, 1.3752828956236127, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1237280294125014, -0.1120460884536055, -0.1949052357743079], [-0.3097582813179415, -0.7852375223885569, 1.3832838064800803, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1230234888617389, -0.111964931693673, -0.1948833564684187], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.7939572123572544, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
2cBInF7d,"[[-0.3097582813179415, -0.7852375223885569, 1.3832838064800803, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0675461588352059, -0.1230234888617389, -0.111964931693673, -0.1948833564684187], [-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.7939572123572544, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
rJiAxjnk,"[[-0.3097582813179415, -0.7861094913854267, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.7939572123572544, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
B8kxpMof,"[[-0.2934776618505848, -0.7939572123572544, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0660477951749307, -0.1244325699632641, -0.112172626748684, -0.1949107056007802], [-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
BL6hVqI2,"[[-0.3097582813179415, -0.7926492588619497, 1.3929991982343628, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1265461916155521, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
OoUMAhWT,"[[-0.3097582813179415, -0.7486148245200278, 1.33242087317825, -0.324916725359467, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0638002496845176, -0.1258416510647893, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
hX6287mW,"[[-0.3043314081621559, -0.5676812576695578, 1.095251015647244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1265461916155521, -0.1120954450137277, -0.1949025008610717], [-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
M36ulwAK,"[[-0.315185154473727, -0.5702971646601664, 1.1043949137689215, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1272507321663146, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
wjogMhTm,"[[-0.315185154473727, -0.4486574895968385, 0.9449481902721732, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0593051587036918, -0.1293643538186026, -0.1120222383037478, -0.1949003129304828], [-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8052928093165609, 1.4010001090908304, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.1314779754708903, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
fXE8HoIY,"[[-0.3043314081621559, -0.3475090859599488, 0.8066467311818032, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0578067950434165, -0.1307734349201278, -0.112172626748684, -0.1949107056007802], [-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8052928093165609, 1.4010001090908304, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.1314779754708903, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.8113965922946491, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.132182516021653, -0.1121722954966026, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
2X94AtJR,"[[-0.315185154473727, -0.3047826051133321, 0.7563552915125776, -0.3299926595556873, -0.4186576160920005, -0.6169826417155208, -0.1757397941801383, 0.0563084313831413, -0.1314779754708903, -0.1120358196390834, -0.1948967575432758], [-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8052928093165609, 1.4010001090908304, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.1314779754708903, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.8113965922946491, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.132182516021653, -0.1121722954966026, -0.1949107056007802], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
9Mq2ewPL,"[[-0.315185154473727, 0.3269589331187926, -0.0717389821318266, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0540608858927282, -0.1335915971231782, -0.1116648173079634, -0.1948871853469493], [-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8052928093165609, 1.4010001090908304, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.1314779754708903, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.8113965922946491, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.132182516021653, -0.1121722954966026, -0.1949107056007802], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.8087806853040398, 1.402714589988645, -0.3299926595556873, -0.4008568742341133, -0.6069349965384231, -0.1757397941801383, 0.0563084313831413, -0.1335915971231782, -0.1120957762658091, -0.1948885528035674]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
0TNxFtsM,"[[-0.2934776618505848, 0.7407082221334824, -0.6255163121259106, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8052928093165609, 1.4010001090908304, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.1314779754708903, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.8113965922946491, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.132182516021653, -0.1121722954966026, -0.1949107056007802], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.8087806853040398, 1.402714589988645, -0.3299926595556873, -0.4008568742341133, -0.6069349965384231, -0.1757397941801383, 0.0563084313831413, -0.1335915971231782, -0.1120957762658091, -0.1948885528035674], [-0.3043314081621559, -0.7939572123572544, 1.3918562109691532, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1350006782247035, -0.1120954450137277, -0.1949025008610717]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
5gOpPCVF,"[[-0.3043314081621559, 0.7450680671178309, -0.6255163121259106, -0.3299926595556873, -0.3426491251931136, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8052928093165609, 1.4010001090908304, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.1314779754708903, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.8113965922946491, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.132182516021653, -0.1121722954966026, -0.1949107056007802], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.8087806853040398, 1.402714589988645, -0.3299926595556873, -0.4008568742341133, -0.6069349965384231, -0.1757397941801383, 0.0563084313831413, -0.1335915971231782, -0.1120957762658091, -0.1948885528035674], [-0.3043314081621559, -0.7939572123572544, 1.3918562109691532, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1350006782247035, -0.1120954450137277, -0.1949025008610717], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1371142998769914, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
eI06mL5Y,"[[-0.3206120276295126, 0.7511718500959191, -0.6249448184933059, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.1121212826760736, -0.1949022273697481], [-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8052928093165609, 1.4010001090908304, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.1314779754708903, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.8113965922946491, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.132182516021653, -0.1121722954966026, -0.1949107056007802], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.8087806853040398, 1.402714589988645, -0.3299926595556873, -0.4008568742341133, -0.6069349965384231, -0.1757397941801383, 0.0563084313831413, -0.1335915971231782, -0.1120957762658091, -0.1948885528035674], [-0.3043314081621559, -0.7939572123572544, 1.3918562109691532, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1350006782247035, -0.1120954450137277, -0.1949025008610717], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1371142998769914, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.8070367473103003, 1.4090010199472982, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1378188404277542, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
X9mfHVhW,"[[-0.2012208182022303, -0.5245187923245054, 0.9843812509219064, -0.3299926595556873, -0.4124984240423133, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.134296137673941, -0.061623559133578, -0.1692372545790971], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.130068894369365, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8052928093165609, 1.4010001090908304, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.1314779754708903, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.8113965922946491, 1.4032860836212495, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0570576132132788, -0.132182516021653, -0.1121722954966026, -0.1949107056007802], [-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.8087806853040398, 1.402714589988645, -0.3299926595556873, -0.4008568742341133, -0.6069349965384231, -0.1757397941801383, 0.0563084313831413, -0.1335915971231782, -0.1120957762658091, -0.1948885528035674], [-0.3043314081621559, -0.7939572123572544, 1.3918562109691532, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1350006782247035, -0.1120954450137277, -0.1949025008610717], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1371142998769914, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.8070367473103003, 1.4090010199472982, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1378188404277542, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8004969798337773, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1385233809785167, -0.1121722954966026, -0.1949107056007802]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
cuWT63Sa,"[[-0.2989045350063704, -0.7917772898650799, 1.3861412746431048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1335915971231782, -0.1121348640114092, -0.1948983984912175], [-0.2880507886947993, -0.8087806853040398, 1.402714589988645, -0.3299926595556873, -0.4008568742341133, -0.6069349965384231, -0.1757397941801383, 0.0563084313831413, -0.1335915971231782, -0.1120957762658091, -0.1948885528035674], [-0.3043314081621559, -0.7939572123572544, 1.3918562109691532, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1350006782247035, -0.1120954450137277, -0.1949025008610717], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1371142998769914, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.8070367473103003, 1.4090010199472982, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1378188404277542, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8004969798337773, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1385233809785167, -0.1121722954966026, -0.1949107056007802], [-0.315185154473727, -0.797881072843168, 1.402714589988645, -0.3299926595556873, -0.418116148659061, -0.6169826417155208, -0.1757397941801383, 0.0518133404023152, -0.1399324620800419, -0.1121269139614567, -0.1948953900866578], [-0.2880507886947993, -0.7996250108369075, 1.3907132237039437, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0495657949119022, -0.1427506242830924, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
qYGVI09C,"[[-0.2880507886947993, -0.8087806853040398, 1.402714589988645, -0.3299926595556873, -0.4008568742341133, -0.6069349965384231, -0.1757397941801383, 0.0563084313831413, -0.1335915971231782, -0.1120957762658091, -0.1948885528035674], [-0.3043314081621559, -0.7939572123572544, 1.3918562109691532, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1350006782247035, -0.1120954450137277, -0.1949025008610717], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1371142998769914, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.8070367473103003, 1.4090010199472982, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1378188404277542, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8004969798337773, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1385233809785167, -0.1121722954966026, -0.1949107056007802], [-0.315185154473727, -0.797881072843168, 1.402714589988645, -0.3299926595556873, -0.418116148659061, -0.6169826417155208, -0.1757397941801383, 0.0518133404023152, -0.1399324620800419, -0.1121269139614567, -0.1948953900866578], [-0.2880507886947993, -0.7996250108369075, 1.3907132237039437, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0495657949119022, -0.1427506242830924, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
awWj7dCy,"[[-0.3043314081621559, -0.7939572123572544, 1.3918562109691532, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0548100677228657, -0.1350006782247035, -0.1120954450137277, -0.1949025008610717], [-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1371142998769914, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.8070367473103003, 1.4090010199472982, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1378188404277542, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8004969798337773, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1385233809785167, -0.1121722954966026, -0.1949107056007802], [-0.315185154473727, -0.797881072843168, 1.402714589988645, -0.3299926595556873, -0.418116148659061, -0.6169826417155208, -0.1757397941801383, 0.0518133404023152, -0.1399324620800419, -0.1121269139614567, -0.1948953900866578], [-0.2880507886947993, -0.7996250108369075, 1.3907132237039437, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0495657949119022, -0.1427506242830924, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
eptlnwA4,"[[-0.3043314081621559, -0.7961371348494286, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1371142998769914, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.8070367473103003, 1.4090010199472982, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1378188404277542, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8004969798337773, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1385233809785167, -0.1121722954966026, -0.1949107056007802], [-0.315185154473727, -0.797881072843168, 1.402714589988645, -0.3299926595556873, -0.418116148659061, -0.6169826417155208, -0.1757397941801383, 0.0518133404023152, -0.1399324620800419, -0.1121269139614567, -0.1948953900866578], [-0.2880507886947993, -0.7996250108369075, 1.3907132237039437, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0495657949119022, -0.1427506242830924, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
jE2nuLBc,"[[-0.3043314081621559, -0.8070367473103003, 1.4090010199472982, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1378188404277542, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8004969798337773, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1385233809785167, -0.1121722954966026, -0.1949107056007802], [-0.315185154473727, -0.797881072843168, 1.402714589988645, -0.3299926595556873, -0.418116148659061, -0.6169826417155208, -0.1757397941801383, 0.0518133404023152, -0.1399324620800419, -0.1121269139614567, -0.1948953900866578], [-0.2880507886947993, -0.7996250108369075, 1.3907132237039437, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0495657949119022, -0.1427506242830924, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
w87nIB9z,"[[-0.2934776618505848, -0.8004969798337773, 1.3947136791321773, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.052562522232453, -0.1385233809785167, -0.1121722954966026, -0.1949107056007802], [-0.315185154473727, -0.797881072843168, 1.402714589988645, -0.3299926595556873, -0.418116148659061, -0.6169826417155208, -0.1757397941801383, 0.0518133404023152, -0.1399324620800419, -0.1121269139614567, -0.1948953900866578], [-0.2880507886947993, -0.7996250108369075, 1.3907132237039437, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0495657949119022, -0.1427506242830924, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
4sgUqcWn,"[[-0.315185154473727, -0.797881072843168, 1.402714589988645, -0.3299926595556873, -0.418116148659061, -0.6169826417155208, -0.1757397941801383, 0.0518133404023152, -0.1399324620800419, -0.1121269139614567, -0.1948953900866578], [-0.2880507886947993, -0.7996250108369075, 1.3907132237039437, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0495657949119022, -0.1427506242830924, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ePaI3W8m,"[[-0.2880507886947993, -0.7996250108369075, 1.3907132237039437, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0495657949119022, -0.1427506242830924, -0.1120441009411174, -0.1948940226300397], [-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
DM6ycZ9X,"[[-0.3043314081621559, -0.788289413877601, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1434551648338551, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
CH35WKye,"[[-0.3043314081621559, -0.781313661902643, 1.3752828956236127, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0473182494214894, -0.1469778675876683, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
u9SmUciw,"[[-0.3097582813179415, -0.6221793199739161, 1.169545187885873, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1483869486891936, -0.1120222383037478, -0.1949003129304828], [-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
jArZNDXg,"[[-0.315185154473727, -0.5681172421679923, 1.1015374456058973, -0.3299926595556873, -0.4193344503831749, -0.6169826417155208, -0.1757397941801383, 0.0435723402708011, -0.1519096514430068, -0.1120417821765479, -0.1949035948263662], [-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
sXYlNbjy,"[[-0.3097582813179415, -0.4351419701453575, 0.9243744194983992, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0413247947803881, -0.1540232730952945, -0.1118801311608456, -0.194885270907684], [-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.227269809350001, -0.5859926066038224, 1.0792491939343087, -0.3299926595556873, -0.416897846934947, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1624777597044461, -0.0622522755839939, -0.1697317268921924]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
RaP2X4wt,"[[-0.2989045350063704, -0.1848868680437433, 0.5906221380571759, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.111923193931422, -0.1948986719825411], [-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.227269809350001, -0.5859926066038224, 1.0792491939343087, -0.3299926595556873, -0.416897846934947, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1624777597044461, -0.0622522755839939, -0.1697317268921924], [-0.2880507886947993, -0.8161924217774326, 1.412429981742927, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1617732191536837, -0.1120441009411174, -0.1948940226300397]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
8JeoPVRA,"[[-0.2880507886947993, 0.2336582504537307, 0.036273314430487, -0.3299926595556873, -0.3590961984686519, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1568414352983452, -0.1120649698222429, -0.1949052357743079], [-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.227269809350001, -0.5859926066038224, 1.0792491939343087, -0.3299926595556873, -0.416897846934947, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1624777597044461, -0.0622522755839939, -0.1697317268921924], [-0.2880507886947993, -0.8161924217774326, 1.412429981742927, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1617732191536837, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8096526543009096, 1.4152874499059511, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1631823002552089, -0.1121722954966026, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
sOx57T0a,"[[-0.2989045350063704, 0.4167717397963749, -0.1980390749374948, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120354883870021, -0.1948967575432758], [-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.227269809350001, -0.5859926066038224, 1.0792491939343087, -0.3299926595556873, -0.416897846934947, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1624777597044461, -0.0622522755839939, -0.1697317268921924], [-0.2880507886947993, -0.8161924217774326, 1.412429981742927, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1617732191536837, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8096526543009096, 1.4152874499059511, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1631823002552089, -0.1121722954966026, -0.1949107056007802], [-0.2934776618505848, -0.8192443132664767, 1.4198593989667898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1638868408059714, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ZjQz3I57,"[[-0.2500626766043003, 0.9369012464291732, -0.9055481921022792, -0.3299926595556873, -0.41919908352494, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121371827759787, -0.1948188125160457], [-0.2989045350063704, 0.9587004713509166, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121838893194501, -0.1949180898665178], [-0.2771970423832281, 0.9434410139056966, -0.899833255776231, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121464578342568, -0.1949090646528385], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121375140280601, -0.1914917905642728], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121269139614567, -0.1949057827569551], [-0.2717701692274425, 0.9412610914135215, -0.899833255776231, -0.3299926595556873, -0.4191314000958226, -0.6069349965384231, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121497703550703, -0.1949093381441621], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.194907970687544], [-0.2717701692274425, 0.9521607038743932, -0.9141205965913518, -0.3299926595556873, -0.4146642937740715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
gfpLcY7i,"[[-0.2989045350063704, 0.9587004713509166, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121838893194501, -0.1949180898665178], [-0.2771970423832281, 0.9434410139056966, -0.899833255776231, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121464578342568, -0.1949090646528385], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121375140280601, -0.1914917905642728], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121269139614567, -0.1949057827569551], [-0.2717701692274425, 0.9412610914135215, -0.899833255776231, -0.3299926595556873, -0.4191314000958226, -0.6069349965384231, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121497703550703, -0.1949093381441621], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.194907970687544], [-0.2717701692274425, 0.9521607038743932, -0.9141205965913518, -0.3299926595556873, -0.4146642937740715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
GQA5oWJE,"[[-0.2771970423832281, 0.9434410139056966, -0.899833255776231, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121464578342568, -0.1949090646528385], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121375140280601, -0.1914917905642728], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121269139614567, -0.1949057827569551], [-0.2717701692274425, 0.9412610914135215, -0.899833255776231, -0.3299926595556873, -0.4191314000958226, -0.6069349965384231, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121497703550703, -0.1949093381441621], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.194907970687544], [-0.2717701692274425, 0.9521607038743932, -0.9141205965913518, -0.3299926595556873, -0.4146642937740715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
wu3aH7Yy,"[[-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121375140280601, -0.1914917905642728], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121269139614567, -0.1949057827569551], [-0.2717701692274425, 0.9412610914135215, -0.899833255776231, -0.3299926595556873, -0.4191314000958226, -0.6069349965384231, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121497703550703, -0.1949093381441621], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.194907970687544], [-0.2717701692274425, 0.9521607038743932, -0.9141205965913518, -0.3299926595556873, -0.4146642937740715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
C0HhgMQZ,"[[-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121269139614567, -0.1949057827569551], [-0.2717701692274425, 0.9412610914135215, -0.899833255776231, -0.3299926595556873, -0.4191314000958226, -0.6069349965384231, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121497703550703, -0.1949093381441621], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.194907970687544], [-0.2717701692274425, 0.9521607038743932, -0.9141205965913518, -0.3299926595556873, -0.4146642937740715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732], [-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
1V3FQqkw,"[[-0.2717701692274425, 0.9412610914135215, -0.899833255776231, -0.3299926595556873, -0.4191314000958226, -0.6069349965384231, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121497703550703, -0.1949093381441621], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.194907970687544], [-0.2717701692274425, 0.9521607038743932, -0.9141205965913518, -0.3299926595556873, -0.4146642937740715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732], [-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751], [-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
jCqRiE7m,"[[-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.194907970687544], [-0.2717701692274425, 0.9521607038743932, -0.9141205965913518, -0.3299926595556873, -0.4146642937740715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732], [-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751], [-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843], [-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
mTotu0I5,"[[-0.2717701692274425, 0.9521607038743932, -0.9141205965913518, -0.3299926595556873, -0.4146642937740715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732], [-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751], [-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843], [-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
2TznheZP,"[[-0.2609164229158714, 0.9238217114761272, -0.8855459149611101, -0.324916725359467, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121421515571991, -0.194907970687544], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732], [-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751], [-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843], [-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
zGgBf7s2,"[[-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.3997062559391169, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121245951968872, -0.1948822625031243], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1119318064855373, -0.1948981249998939], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732], [-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751], [-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843], [-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103], [-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
yI7dhiFH,"[[-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120209132954224, -0.1949035948263662], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732], [-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751], [-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843], [-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103], [-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
bG5O9sBx,"[[-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949071502135732], [-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751], [-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843], [-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103], [-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
tFdZ5P2o,"[[-0.266343296071657, 0.9412610914135215, -0.9026907239392552, -0.3299926595556873, -0.4182515155172959, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121732892528467, -0.194911526074751], [-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843], [-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103], [-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
xN3ohquB,"[[-0.266343296071657, 0.9369012464291732, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120927949970769, -0.1949049622829843], [-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103], [-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.3927348627400204, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
lw6MtTI8,"[[-0.2717701692274425, 0.9434410139056966, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121351952634906, -0.1913531304632001], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103], [-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.3927348627400204, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121103513573888, -0.1949090646528385]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
l0WUzKJL,"[[-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1948932021560688], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103], [-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.3927348627400204, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121103513573888, -0.1949090646528385], [-0.2500626766043003, 0.93036147895265, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.111900006285727, -0.1949000394391592]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
x42zAIfs,"[[-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121279077177007, -0.1948751517287103], [-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.3927348627400204, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121103513573888, -0.1949090646528385], [-0.2500626766043003, 0.93036147895265, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.111900006285727, -0.1949000394391592], [-0.2392089302927292, 0.934721323936999, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120258820766427, -0.1949071502135732]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
lfQ3mIhB,"[[-0.266343296071657, 0.9390811689213474, -0.9026907239392552, -0.324916725359467, -0.3864403038320983, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112113332626121, -0.1948926551734216], [-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.3927348627400204, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121103513573888, -0.1949090646528385], [-0.2500626766043003, 0.93036147895265, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.111900006285727, -0.1949000394391592], [-0.2392089302927292, 0.934721323936999, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120258820766427, -0.1949071502135732], [-0.2500626766043003, 0.9390811689213474, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
qwuCJl9S,"[[-0.266343296071657, 0.947800858890045, -0.9112631284283276, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121822330590433, -0.1949145344793108], [-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.3927348627400204, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121103513573888, -0.1949090646528385], [-0.2500626766043003, 0.93036147895265, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.111900006285727, -0.1949000394391592], [-0.2392089302927292, 0.934721323936999, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120258820766427, -0.1949071502135732], [-0.2500626766043003, 0.9390811689213474, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2392089302927292, 0.93036147895265, -0.9055481921022792, -0.324916725359467, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
yl1CT2Da,"[[-0.2609164229158714, 0.9369012464291732, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112121613928155, -0.1890057544326151], [-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.3927348627400204, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121103513573888, -0.1949090646528385], [-0.2500626766043003, 0.93036147895265, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.111900006285727, -0.1949000394391592], [-0.2392089302927292, 0.934721323936999, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120258820766427, -0.1949071502135732], [-0.2500626766043003, 0.9390811689213474, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2392089302927292, 0.93036147895265, -0.9055481921022792, -0.324916725359467, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2446358034485148, 0.934721323936999, -0.9055481921022792, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949126200400455]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
h59sPUQ2,"[[-0.2554895497600858, 0.934721323936999, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9369012464291732, -0.9026907239392552, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.112149439102989, -0.1948964840519522], [-0.2609164229158714, 0.9434410139056966, -0.9084056602653036, -0.3299926595556873, -0.3927348627400204, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2554895497600858, 0.9390811689213474, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121103513573888, -0.1949090646528385], [-0.2500626766043003, 0.93036147895265, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.111900006285727, -0.1949000394391592], [-0.2392089302927292, 0.934721323936999, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1120258820766427, -0.1949071502135732], [-0.2500626766043003, 0.9390811689213474, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121501016071517, -0.1949107056007802], [-0.2392089302927292, 0.93036147895265, -0.9055481921022792, -0.324916725359467, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121693142278704, -0.1949153549532817], [-0.2446358034485148, 0.934721323936999, -0.9055481921022792, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1121524203717212, -0.1949126200400455], [0.0722935888493618, 0.6212484695623287, -0.6615204109800152, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.3946990303597244, -0.233636355331472, -0.1088077681062577, 0.9091874423979606]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
qKCLGJiw,"[[-0.2283551839811581, 0.4834773680569099, -0.3226246868453487, -0.3299926595556873, -0.420417385249054, -0.6169826417155208, -0.1757397941801383, -0.5317993052749143, -0.7014512810378594, -0.1121441390696872, -0.1949164489185761], [-0.1458667120132176, 0.6678988108948594, -0.6072285158825561, -0.3299926595556873, -0.411686222892904, -0.6169826417155208, -0.1757397941801383, -0.530300941614639, -0.694405875530233, -0.1113322402182808, -0.1941380926115687], [-0.2283551839811581, 0.5815738802047552, -0.4512107541814363, -0.3299926595556873, -0.4096557200193808, -0.6169826417155208, -0.1757397941801383, -0.4433958493186716, -0.7028603621393845, -0.1121524203717212, -0.1949126200400455], [-0.2229283108253725, 0.3016718322095703, -0.0865978165795522, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4433958493186716, -0.6972240377332835, -0.112186539336101, -0.1949180898665178], [-0.2500626766043003, 0.5044046239817838, -0.338626508558284, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4703663952036269, -0.688769551124132, -0.112135526515572, -0.1948978515085703], [-0.2392089302927292, 0.2345302194506003, 0.0094131136980599, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4658713042228011, -0.6852468483703188, -0.1121388390363855, -0.1948912877168035], [0.0429884738081198, 0.6975457567884307, -0.7455299749729257, -0.3299926595556873, -0.4171685806514168, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6774969023119298, -0.112186539336101, -0.1949180898665178], [0.1851725504897013, 0.4577542826492531, -0.5129320665027584, -0.3198407911632467, 3.2351646213839675, -0.446172673704859, -0.1757397941801383, -0.4224187580748173, -0.6725651184565914, -0.1098584997083227, 0.5128501065159747], [-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
uSXbfvg7,"[[-0.1458667120132176, 0.6678988108948594, -0.6072285158825561, -0.3299926595556873, -0.411686222892904, -0.6169826417155208, -0.1757397941801383, -0.530300941614639, -0.694405875530233, -0.1113322402182808, -0.1941380926115687], [-0.2283551839811581, 0.5815738802047552, -0.4512107541814363, -0.3299926595556873, -0.4096557200193808, -0.6169826417155208, -0.1757397941801383, -0.4433958493186716, -0.7028603621393845, -0.1121524203717212, -0.1949126200400455], [-0.2229283108253725, 0.3016718322095703, -0.0865978165795522, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4433958493186716, -0.6972240377332835, -0.112186539336101, -0.1949180898665178], [-0.2500626766043003, 0.5044046239817838, -0.338626508558284, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4703663952036269, -0.688769551124132, -0.112135526515572, -0.1948978515085703], [-0.2392089302927292, 0.2345302194506003, 0.0094131136980599, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4658713042228011, -0.6852468483703188, -0.1121388390363855, -0.1948912877168035], [0.0429884738081198, 0.6975457567884307, -0.7455299749729257, -0.3299926595556873, -0.4171685806514168, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6774969023119298, -0.112186539336101, -0.1949180898665178], [0.1851725504897013, 0.4577542826492531, -0.5129320665027584, -0.3198407911632467, 3.2351646213839675, -0.446172673704859, -0.1757397941801383, -0.4224187580748173, -0.6725651184565914, -0.1098584997083227, 0.5128501065159747], [-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
2dS35vnP,"[[-0.2283551839811581, 0.5815738802047552, -0.4512107541814363, -0.3299926595556873, -0.4096557200193808, -0.6169826417155208, -0.1757397941801383, -0.4433958493186716, -0.7028603621393845, -0.1121524203717212, -0.1949126200400455], [-0.2229283108253725, 0.3016718322095703, -0.0865978165795522, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4433958493186716, -0.6972240377332835, -0.112186539336101, -0.1949180898665178], [-0.2500626766043003, 0.5044046239817838, -0.338626508558284, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4703663952036269, -0.688769551124132, -0.112135526515572, -0.1948978515085703], [-0.2392089302927292, 0.2345302194506003, 0.0094131136980599, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4658713042228011, -0.6852468483703188, -0.1121388390363855, -0.1948912877168035], [0.0429884738081198, 0.6975457567884307, -0.7455299749729257, -0.3299926595556873, -0.4171685806514168, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6774969023119298, -0.112186539336101, -0.1949180898665178], [0.1851725504897013, 0.4577542826492531, -0.5129320665027584, -0.3198407911632467, 3.2351646213839675, -0.446172673704859, -0.1757397941801383, -0.4224187580748173, -0.6725651184565914, -0.1098584997083227, 0.5128501065159747], [-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
HKkQeZ1s,"[[-0.2229283108253725, 0.3016718322095703, -0.0865978165795522, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4433958493186716, -0.6972240377332835, -0.112186539336101, -0.1949180898665178], [-0.2500626766043003, 0.5044046239817838, -0.338626508558284, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4703663952036269, -0.688769551124132, -0.112135526515572, -0.1948978515085703], [-0.2392089302927292, 0.2345302194506003, 0.0094131136980599, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4658713042228011, -0.6852468483703188, -0.1121388390363855, -0.1948912877168035], [0.0429884738081198, 0.6975457567884307, -0.7455299749729257, -0.3299926595556873, -0.4171685806514168, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6774969023119298, -0.112186539336101, -0.1949180898665178], [0.1851725504897013, 0.4577542826492531, -0.5129320665027584, -0.3198407911632467, 3.2351646213839675, -0.446172673704859, -0.1757397941801383, -0.4224187580748173, -0.6725651184565914, -0.1098584997083227, 0.5128501065159747], [-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
whek5FjX,"[[-0.2500626766043003, 0.5044046239817838, -0.338626508558284, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4703663952036269, -0.688769551124132, -0.112135526515572, -0.1948978515085703], [-0.2392089302927292, 0.2345302194506003, 0.0094131136980599, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4658713042228011, -0.6852468483703188, -0.1121388390363855, -0.1948912877168035], [0.0429884738081198, 0.6975457567884307, -0.7455299749729257, -0.3299926595556873, -0.4171685806514168, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6774969023119298, -0.112186539336101, -0.1949180898665178], [0.1851725504897013, 0.4577542826492531, -0.5129320665027584, -0.3198407911632467, 3.2351646213839675, -0.446172673704859, -0.1757397941801383, -0.4224187580748173, -0.6725651184565914, -0.1098584997083227, 0.5128501065159747], [-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
lXFmV9GK,"[[-0.2392089302927292, 0.2345302194506003, 0.0094131136980599, -0.3299926595556873, -0.4203497018199366, -0.6169826417155208, -0.1757397941801383, -0.4658713042228011, -0.6852468483703188, -0.1121388390363855, -0.1948912877168035], [0.0429884738081198, 0.6975457567884307, -0.7455299749729257, -0.3299926595556873, -0.4171685806514168, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6774969023119298, -0.112186539336101, -0.1949180898665178], [0.1851725504897013, 0.4577542826492531, -0.5129320665027584, -0.3198407911632467, 3.2351646213839675, -0.446172673704859, -0.1757397941801383, -0.4224187580748173, -0.6725651184565914, -0.1098584997083227, 0.5128501065159747], [-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
uZ5vn7p8,"[[0.0429884738081198, 0.6975457567884307, -0.7455299749729257, -0.3299926595556873, -0.4171685806514168, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6774969023119298, -0.112186539336101, -0.1949180898665178], [0.1851725504897013, 0.4577542826492531, -0.5129320665027584, -0.3198407911632467, 3.2351646213839675, -0.446172673704859, -0.1757397941801383, -0.4224187580748173, -0.6725651184565914, -0.1098584997083227, 0.5128501065159747], [-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
6TIj0sHu,"[[0.1851725504897013, 0.4577542826492531, -0.5129320665027584, -0.3198407911632467, 3.2351646213839675, -0.446172673704859, -0.1757397941801383, -0.4224187580748173, -0.6725651184565914, -0.1098584997083227, 0.5128501065159747], [-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ZzVHsdQ0,"[[-0.130671467177018, 0.8061058968987127, -0.7969644019073608, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6563606857890508, -0.1105448540208948, 0.295937026982739], [-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
amTlvJkg,"[[-0.2717701692274425, 0.947800858890045, -0.9112631284283276, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.112186539336101, -0.1949180898665178], [-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
c6ZTyj1E,"[[-0.266343296071657, 0.9390811689213474, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121004137949481, -0.1949005864218065], [-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
6QAxPs4w,"[[-0.2771970423832281, 0.947800858890045, -0.9055481921022792, -0.3299926595556873, -0.4158825954981854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6500198208321872, -0.1121693142278704, -0.1949153549532817], [-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
3nfOZgYB,"[[-0.2609164229158714, 0.9412610914135215, -0.9055481921022792, -0.3299926595556873, -0.4183191989464133, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
NwVZ08bv,"[[-0.2771970423832281, 0.9499807813822192, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121206201719109, -0.1949096116354857], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
X5VrLNme,"[[-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121252577010499, -0.1949107056007802], [-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
clzRrEkn,"[[-0.2446358034485148, 0.9281815564604756, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121421515571991, -0.1949128935313691], [-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Jq0UcGtB,"[[-0.2771970423832281, 0.9390811689213474, -0.8941183194501827, -0.3299926595556873, -0.4194021338122924, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1119944131289138, -0.194904415300337], [-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
QWycpehq,"[[-0.2717701692274425, 0.9499807813822192, -0.9112631284283276, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121673267153822, -0.1949126200400455], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
oHKLRBlY,"[[-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
GsvkQOiD,"[[-0.2880507886947993, 0.947800858890045, -0.9026907239392552, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
4rZvDspx,"[[-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
jdC5o7xR,"[[-0.266343296071657, 0.9325414014448248, -0.8912608512871585, -0.3299926595556873, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163], [-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
MGeRQJsr,"[[-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4100618205940854, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163], [-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761], [-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
RZ4WGy95,"[[-0.2717701692274425, 0.9565205488587424, -0.9198355329174002, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163], [-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761], [-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337], [-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
xL9aA2JE,"[[-0.266343296071657, 0.9434410139056966, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163], [-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761], [-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337], [-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
lBxpZvoP,"[[-0.2717701692274425, 0.9456209363978708, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163], [-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761], [-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337], [-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Vl7EUtRb,"[[-0.2880507886947993, 0.9543406263665682, -0.9084056602653036, -0.3299926595556873, -0.4181838320881784, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163], [-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761], [-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337], [-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2826239155390136, 0.9434410139056966, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
xhZcN98S,"[[-0.2934776618505848, 0.9543406263665682, -0.9055481921022792, -0.3299926595556873, -0.4037672616861634, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9521607038743932, -0.9055481921022792, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163], [-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761], [-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337], [-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2826239155390136, 0.9434410139056966, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2880507886947993, 0.9390811689213474, -0.8884033831241342, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
hsgX0wGW,"[[-0.2771970423832281, 0.9369012464291732, -0.8912608512871585, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112127245213538, -0.1949134405140163], [-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761], [-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337], [-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2826239155390136, 0.9434410139056966, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2880507886947993, 0.9390811689213474, -0.8884033831241342, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9281815564604756, -0.8798309786350619, -0.3198407911632467, 2.695998425034428, -0.4763156092361523, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [-0.2934776618505848, 0.9456209363978708, -0.8941183194501827, -0.3299926595556873, 0.1641643920382892, -0.5868397061842275, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
WIFBMZcX,"[[-0.2934776618505848, 0.9565205488587424, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121441390696872, -0.1949164489185761], [-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337], [-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2826239155390136, 0.9434410139056966, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2880507886947993, 0.9390811689213474, -0.8884033831241342, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9281815564604756, -0.8798309786350619, -0.3198407911632467, 2.695998425034428, -0.4763156092361523, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [-0.2934776618505848, 0.9456209363978708, -0.8941183194501827, -0.3299926595556873, 0.1641643920382892, -0.5868397061842275, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.2826239155390136, 0.9412610914135215, -0.8941183194501827, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
3CqvdDVB,"[[-0.2826239155390136, 0.9369012464291732, -0.8912608512871585, -0.324916725359467, -0.4195375006705272, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1120093194725749, -0.194904415300337], [-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2826239155390136, 0.9434410139056966, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2880507886947993, 0.9390811689213474, -0.8884033831241342, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9281815564604756, -0.8798309786350619, -0.3198407911632467, 2.695998425034428, -0.4763156092361523, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [-0.2934776618505848, 0.9456209363978708, -0.8941183194501827, -0.3299926595556873, 0.1641643920382892, -0.5868397061842275, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.2826239155390136, 0.9412610914135215, -0.8941183194501827, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
7AqEHrTb,"[[-0.2826239155390136, 0.9281815564604756, -0.8769735104720376, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.266343296071657, 0.9456209363978708, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.947800858890045, -0.899833255776231, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2826239155390136, 0.9434410139056966, -0.8969757876132067, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817], [-0.2880507886947993, 0.9390811689213474, -0.8884033831241342, -0.3299926595556873, -0.4194698172414098, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2880507886947993, 0.9281815564604756, -0.8798309786350619, -0.3198407911632467, 2.695998425034428, -0.4763156092361523, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112135526515572, -0.1949096116354857], [-0.2934776618505848, 0.9456209363978708, -0.8941183194501827, -0.3299926595556873, 0.1641643920382892, -0.5868397061842275, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121524203717212, -0.1949126200400455], [-0.2826239155390136, 0.9412610914135215, -0.8941183194501827, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.112186539336101, -0.1949180898665178], [-0.2717701692274425, 0.947800858890045, -0.9084056602653036, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121183014073414, -0.1949068767222496], [-0.2826239155390136, 0.9521607038743932, -0.9084056602653036, -0.3299926595556873, -0.4176423646552389, -0.6169826417155208, -0.1757397941801383, -0.4224187580748173, -0.6507243613829498, -0.1121693142278704, -0.1949153549532817]]",1,"[[""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
W4MiZa38,"[[-0.2989045350063704, 0.7162930902211297, -0.5906552005370158, -0.3299926595556873, -0.4149350274905412, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1596595975013957, -0.1120222383037478, -0.1949003129304828], [-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.227269809350001, -0.5859926066038224, 1.0792491939343087, -0.3299926595556873, -0.416897846934947, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1624777597044461, -0.0622522755839939, -0.1697317268921924], [-0.2880507886947993, -0.8161924217774326, 1.412429981742927, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1617732191536837, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8096526543009096, 1.4152874499059511, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1631823002552089, -0.1121722954966026, -0.1949107056007802], [-0.2934776618505848, -0.8192443132664767, 1.4198593989667898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1638868408059714, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8066007628118655, 1.402714589988645, -0.3299926595556873, -0.3794689106330018, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
HOBPCtSK,"[[-0.3206120276295126, 0.7533517725880939, -0.6278022866563301, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121510953633957, -0.1949025008610717], [-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.227269809350001, -0.5859926066038224, 1.0792491939343087, -0.3299926595556873, -0.416897846934947, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1624777597044461, -0.0622522755839939, -0.1697317268921924], [-0.2880507886947993, -0.8161924217774326, 1.412429981742927, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1617732191536837, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8096526543009096, 1.4152874499059511, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1631823002552089, -0.1121722954966026, -0.1949107056007802], [-0.2934776618505848, -0.8192443132664767, 1.4198593989667898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1638868408059714, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8066007628118655, 1.402714589988645, -0.3299926595556873, -0.3794689106330018, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8026769023259516, 1.3975711472952013, -0.3299926595556873, -0.4166271132184773, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1617732191536837, -0.1120460884536055, -0.1949052357743079]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
pLNoFUql,"[[-0.3097582813179415, 0.7337324701585247, -0.610657477678185, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.227269809350001, -0.5859926066038224, 1.0792491939343087, -0.3299926595556873, -0.416897846934947, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1624777597044461, -0.0622522755839939, -0.1697317268921924], [-0.2880507886947993, -0.8161924217774326, 1.412429981742927, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1617732191536837, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8096526543009096, 1.4152874499059511, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1631823002552089, -0.1121722954966026, -0.1949107056007802], [-0.2934776618505848, -0.8192443132664767, 1.4198593989667898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1638868408059714, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8066007628118655, 1.402714589988645, -0.3299926595556873, -0.3794689106330018, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8026769023259516, 1.3975711472952013, -0.3299926595556873, -0.4166271132184773, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1617732191536837, -0.1120460884536055, -0.1949052357743079], [-0.2771970423832281, -0.8436594451788294, 1.4398616761079592, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1596595975013957, -0.1119735442477883, -0.1948869118556257]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
uOd1LvYg,"[[-0.3314657739410837, 0.7529157880896589, -0.621515856697677, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, 0.7407082221334824, -0.6226588439628865, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.227269809350001, -0.5859926066038224, 1.0792491939343087, -0.3299926595556873, -0.416897846934947, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1624777597044461, -0.0622522755839939, -0.1697317268921924], [-0.2880507886947993, -0.8161924217774326, 1.412429981742927, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1617732191536837, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8096526543009096, 1.4152874499059511, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1631823002552089, -0.1121722954966026, -0.1949107056007802], [-0.2934776618505848, -0.8192443132664767, 1.4198593989667898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0338329764790117, -0.1638868408059714, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8066007628118655, 1.402714589988645, -0.3299926595556873, -0.3794689106330018, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8026769023259516, 1.3975711472952013, -0.3299926595556873, -0.4166271132184773, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1617732191536837, -0.1120460884536055, -0.1949052357743079], [-0.2771970423832281, -0.8436594451788294, 1.4398616761079592, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1596595975013957, -0.1119735442477883, -0.1948869118556257], [-0.266343296071657, -0.8353757397085667, 1.426717322558048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1561368947475825, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
RinJrZB2,"[[-0.2934776618505848, -0.8066007628118655, 1.402714589988645, -0.3299926595556873, -0.3794689106330018, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.2934776618505848, -0.8026769023259516, 1.3975711472952013, -0.3299926595556873, -0.4166271132184773, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1617732191536837, -0.1120460884536055, -0.1949052357743079], [-0.2771970423832281, -0.8436594451788294, 1.4398616761079592, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1596595975013957, -0.1119735442477883, -0.1948869118556257], [-0.266343296071657, -0.8353757397085667, 1.426717322558048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1561368947475825, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7939572123572544, 1.3804263383170563, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0465690675913516, -0.1547278136460572, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.7891613828744709, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1547278136460572, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7895973673729056, 1.3832838064800803, -0.3299926595556873, -0.4196051840996447, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1561368947475825, -0.1121126701219583, -0.1948986719825411], [-0.2989045350063704, -0.7861094913854267, 1.3787118574192418, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0390772492899753, -0.1582505163998704, -0.1120954450137277, -0.1949025008610717], [-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
CyUYoKe3,"[[-0.2934776618505848, -0.8026769023259516, 1.3975711472952013, -0.3299926595556873, -0.4166271132184773, -0.6169826417155208, -0.1757397941801383, 0.0398264311201128, -0.1617732191536837, -0.1120460884536055, -0.1949052357743079], [-0.2771970423832281, -0.8436594451788294, 1.4398616761079592, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1596595975013957, -0.1119735442477883, -0.1948869118556257], [-0.266343296071657, -0.8353757397085667, 1.426717322558048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1561368947475825, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7939572123572544, 1.3804263383170563, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0465690675913516, -0.1547278136460572, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.7891613828744709, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1547278136460572, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7895973673729056, 1.3832838064800803, -0.3299926595556873, -0.4196051840996447, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1561368947475825, -0.1121126701219583, -0.1948986719825411], [-0.2989045350063704, -0.7861094913854267, 1.3787118574192418, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0390772492899753, -0.1582505163998704, -0.1120954450137277, -0.1949025008610717], [-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
WeF3GwYd,"[[-0.2771970423832281, -0.8436594451788294, 1.4398616761079592, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1596595975013957, -0.1119735442477883, -0.1948869118556257], [-0.266343296071657, -0.8353757397085667, 1.426717322558048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1561368947475825, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7939572123572544, 1.3804263383170563, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0465690675913516, -0.1547278136460572, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.7891613828744709, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1547278136460572, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7895973673729056, 1.3832838064800803, -0.3299926595556873, -0.4196051840996447, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1561368947475825, -0.1121126701219583, -0.1948986719825411], [-0.2989045350063704, -0.7861094913854267, 1.3787118574192418, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0390772492899753, -0.1582505163998704, -0.1120954450137277, -0.1949025008610717], [-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
6xogjvTb,"[[-0.266343296071657, -0.8353757397085667, 1.426717322558048, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0450707039310764, -0.1561368947475825, -0.1121212826760736, -0.1949022273697481], [-0.2826239155390136, -0.7939572123572544, 1.3804263383170563, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0465690675913516, -0.1547278136460572, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.7891613828744709, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1547278136460572, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7895973673729056, 1.3832838064800803, -0.3299926595556873, -0.4196051840996447, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1561368947475825, -0.1121126701219583, -0.1948986719825411], [-0.2989045350063704, -0.7861094913854267, 1.3787118574192418, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0390772492899753, -0.1582505163998704, -0.1120954450137277, -0.1949025008610717], [-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
xN1W4jts,"[[-0.2826239155390136, -0.7939572123572544, 1.3804263383170563, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0465690675913516, -0.1547278136460572, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.7891613828744709, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1547278136460572, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7895973673729056, 1.3832838064800803, -0.3299926595556873, -0.4196051840996447, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1561368947475825, -0.1121126701219583, -0.1948986719825411], [-0.2989045350063704, -0.7861094913854267, 1.3787118574192418, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0390772492899753, -0.1582505163998704, -0.1120954450137277, -0.1949025008610717], [-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ez4k8opK,"[[-0.3043314081621559, -0.7891613828744709, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0420739766105258, -0.1547278136460572, -0.1121348640114092, -0.1948983984912175], [-0.2989045350063704, -0.7895973673729056, 1.3832838064800803, -0.3299926595556873, -0.4196051840996447, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1561368947475825, -0.1121126701219583, -0.1948986719825411], [-0.2989045350063704, -0.7861094913854267, 1.3787118574192418, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0390772492899753, -0.1582505163998704, -0.1120954450137277, -0.1949025008610717], [-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
AiJxpayh,"[[-0.2989045350063704, -0.7895973673729056, 1.3832838064800803, -0.3299926595556873, -0.4196051840996447, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1561368947475825, -0.1121126701219583, -0.1948986719825411], [-0.2989045350063704, -0.7861094913854267, 1.3787118574192418, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0390772492899753, -0.1582505163998704, -0.1120954450137277, -0.1949025008610717], [-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
OGmpETUi,"[[-0.2989045350063704, -0.7861094913854267, 1.3787118574192418, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0390772492899753, -0.1582505163998704, -0.1120954450137277, -0.1949025008610717], [-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
NnePX6GA,"[[-0.2934776618505848, -0.7869814603822963, 1.3769973765214274, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121348640114092, -0.1948983984912175], [-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
YRuMOL9a,"[[-0.315185154473727, -0.7874174448807311, 1.3889987428061288, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0323346128187364, -0.1638868408059714, -0.1121212826760736, -0.1949022273697481], [-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8026769023259516, 1.399857121825621, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
5N0HB6be,"[[-0.3097582813179415, -0.589916467089736, 1.127254659073115, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1660004624582594, -0.111974206751951, -0.1949071502135732], [-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8026769023259516, 1.399857121825621, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.804420840319691, 1.3969996536625966, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0255919763474976, -0.1730458679658858, -0.1121722954966026, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
qzaBfXb3,"[[-0.3043314081621559, -0.3527408999411673, 0.8135046547730611, -0.3299926595556873, -0.418725299521118, -0.6169826417155208, -0.1757397941801383, 0.0285887036680481, -0.1688186246613098, -0.1121348640114092, -0.1948983984912175], [-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8026769023259516, 1.399857121825621, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.804420840319691, 1.3969996536625966, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0255919763474976, -0.1730458679658858, -0.1121722954966026, -0.1949107056007802], [-0.2771970423832281, -0.8105246232977792, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0270903400077729, -0.1716367868643603, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
SyOXvfeV,"[[-0.3043314081621559, -0.295190946147765, 0.7380674952692232, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0263411581776351, -0.170227705762835, -0.1119563191395577, -0.194892381682098], [-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8026769023259516, 1.399857121825621, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.804420840319691, 1.3969996536625966, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0255919763474976, -0.1730458679658858, -0.1121722954966026, -0.1949107056007802], [-0.2771970423832281, -0.8105246232977792, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0270903400077729, -0.1716367868643603, -0.1121348640114092, -0.1948983984912175], [-0.2717701692274425, -0.8066007628118655, 1.391284717336548, -0.3299926595556873, -0.4196728675287621, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1688186246613098, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
raTwSfIc,"[[-0.3097582813179415, 0.3239070416297482, -0.0705959948666169, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.172341327415123, -0.1118751623796252, -0.1949052357743079], [-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8026769023259516, 1.399857121825621, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.804420840319691, 1.3969996536625966, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0255919763474976, -0.1730458679658858, -0.1121722954966026, -0.1949107056007802], [-0.2771970423832281, -0.8105246232977792, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0270903400077729, -0.1716367868643603, -0.1121348640114092, -0.1948983984912175], [-0.2717701692274425, -0.8066007628118655, 1.391284717336548, -0.3299926595556873, -0.4196728675287621, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1688186246613098, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.8070367473103003, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1652959219074966, -0.1120954450137277, -0.1949025008610717]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
5tQS0gyz,"[[-0.315185154473727, 0.6443556479793768, -0.4877863466681458, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1120354883870021, -0.1948967575432758], [-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8026769023259516, 1.399857121825621, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.804420840319691, 1.3969996536625966, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0255919763474976, -0.1730458679658858, -0.1121722954966026, -0.1949107056007802], [-0.2771970423832281, -0.8105246232977792, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0270903400077729, -0.1716367868643603, -0.1121348640114092, -0.1948983984912175], [-0.2717701692274425, -0.8066007628118655, 1.391284717336548, -0.3299926595556873, -0.4196728675287621, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1688186246613098, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.8070367473103003, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1652959219074966, -0.1120954450137277, -0.1949025008610717], [-0.2989045350063704, -0.7957011503509939, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1617732191536837, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
r3UKDlbC,"[[-0.315185154473727, 0.7407082221334824, -0.614086439473814, -0.3299926595556873, -0.3482668498098613, -0.6169826417155208, -0.1757397941801383, 0.0248427945173598, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8026769023259516, 1.399857121825621, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.804420840319691, 1.3969996536625966, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0255919763474976, -0.1730458679658858, -0.1121722954966026, -0.1949107056007802], [-0.2771970423832281, -0.8105246232977792, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0270903400077729, -0.1716367868643603, -0.1121348640114092, -0.1948983984912175], [-0.2717701692274425, -0.8066007628118655, 1.391284717336548, -0.3299926595556873, -0.4196728675287621, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1688186246613098, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.8070367473103003, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1652959219074966, -0.1120954450137277, -0.1949025008610717], [-0.2989045350063704, -0.7957011503509939, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1617732191536837, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7821856308995128, 1.3792833510518463, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1582505163998704, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
BdHvs4hn,"[[-0.2771970423832281, 0.2728968553128685, -0.0237335169930205, -0.324916725359467, -0.4141905097702494, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.0623211760169162, -0.1504721943919214], [-0.2771970423832281, -0.8257840807429997, 1.4192879053341851, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1737504085166483, -0.1119735442477883, -0.1948869118556257], [-0.2989045350063704, -0.8026769023259516, 1.399857121825621, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0233444308570846, -0.1730458679658858, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.804420840319691, 1.3969996536625966, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0255919763474976, -0.1730458679658858, -0.1121722954966026, -0.1949107056007802], [-0.2771970423832281, -0.8105246232977792, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0270903400077729, -0.1716367868643603, -0.1121348640114092, -0.1948983984912175], [-0.2717701692274425, -0.8066007628118655, 1.391284717336548, -0.3299926595556873, -0.4196728675287621, -0.6169826417155208, -0.1757397941801383, 0.0308362491584609, -0.1688186246613098, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.8070367473103003, 1.4061435517842742, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1652959219074966, -0.1120954450137277, -0.1949025008610717], [-0.2989045350063704, -0.7957011503509939, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1617732191536837, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7821856308995128, 1.3792833510518463, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1582505163998704, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7904693363697752, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.15543235419682, -0.1121722954966026, -0.1949107056007802]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
bvoI6qLi,"[[-0.2989045350063704, -0.7957011503509939, 1.391284717336548, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1617732191536837, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7821856308995128, 1.3792833510518463, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1582505163998704, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7904693363697752, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.15543235419682, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.7887253983760357, 1.384998287377895, -0.3299926595556873, -0.4198759178161145, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1568414352983452, -0.1121262514572939, -0.1948948431040106], [-0.2934776618505848, -0.7957011503509939, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1582505163998704, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8052928093165609, 1.4095725135799029, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.8061647783134305, 1.4078580326820882, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0330837946488739, -0.1631823002552089, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7974450883447333, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0293378854981856, -0.1660004624582594, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
4Hq5xLVO,"[[-0.3097582813179415, -0.7821856308995128, 1.3792833510518463, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0405756129502506, -0.1582505163998704, -0.1121212826760736, -0.1949022273697481], [-0.2989045350063704, -0.7904693363697752, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.15543235419682, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.7887253983760357, 1.384998287377895, -0.3299926595556873, -0.4198759178161145, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1568414352983452, -0.1121262514572939, -0.1948948431040106], [-0.2934776618505848, -0.7957011503509939, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1582505163998704, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8052928093165609, 1.4095725135799029, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.8061647783134305, 1.4078580326820882, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0330837946488739, -0.1631823002552089, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7974450883447333, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0293378854981856, -0.1660004624582594, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
FYZhmMuB,"[[-0.2989045350063704, -0.7904693363697752, 1.3844267937452903, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0383280674598375, -0.15543235419682, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.7887253983760357, 1.384998287377895, -0.3299926595556873, -0.4198759178161145, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1568414352983452, -0.1121262514572939, -0.1948948431040106], [-0.2934776618505848, -0.7957011503509939, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1582505163998704, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8052928093165609, 1.4095725135799029, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.8061647783134305, 1.4078580326820882, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0330837946488739, -0.1631823002552089, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7974450883447333, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0293378854981856, -0.1660004624582594, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
6ez8OIZa,"[[-0.3043314081621559, -0.7887253983760357, 1.384998287377895, -0.3299926595556873, -0.4198759178161145, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1568414352983452, -0.1121262514572939, -0.1948948431040106], [-0.2934776618505848, -0.7957011503509939, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1582505163998704, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8052928093165609, 1.4095725135799029, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.8061647783134305, 1.4078580326820882, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0330837946488739, -0.1631823002552089, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7974450883447333, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0293378854981856, -0.1660004624582594, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
cKvmZBqV,"[[-0.2934776618505848, -0.7957011503509939, 1.388427249173524, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0368297037995623, -0.1582505163998704, -0.1120441009411174, -0.1948940226300397], [-0.3097582813179415, -0.8052928093165609, 1.4095725135799029, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.8061647783134305, 1.4078580326820882, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0330837946488739, -0.1631823002552089, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7974450883447333, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0293378854981856, -0.1660004624582594, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
f4JuBpvA,"[[-0.3097582813179415, -0.8052928093165609, 1.4095725135799029, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.035331340139287, -0.1610686786029209, -0.1121722954966026, -0.1949107056007802], [-0.3043314081621559, -0.8061647783134305, 1.4078580326820882, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0330837946488739, -0.1631823002552089, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7974450883447333, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0293378854981856, -0.1660004624582594, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Cp8rxPn7,"[[-0.3043314081621559, -0.8061647783134305, 1.4078580326820882, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0330837946488739, -0.1631823002552089, -0.1121348640114092, -0.1948983984912175], [-0.3097582813179415, -0.7974450883447333, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0293378854981856, -0.1660004624582594, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
vHrSMapc,"[[-0.3097582813179415, -0.7974450883447333, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0293378854981856, -0.1660004624582594, -0.1121212826760736, -0.1949022273697481], [-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758], [-0.3097582813179415, 0.6984177257853003, -0.5615090252741693, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.0643689763838663, -0.1928595206736699]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
8hJ0vKyG,"[[-0.266343296071657, -0.8161924217774326, 1.401571602723435, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0278395218379104, -0.1681140841105473, -0.1120460884536055, -0.1949052357743079], [-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758], [-0.3097582813179415, 0.6984177257853003, -0.5615090252741693, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.0643689763838663, -0.1928595206736699], [-0.2771970423832281, -0.7656182199589877, 1.340421784034718, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1800912734735119, -0.1100880574007032, -0.1718231150438741]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
ljhMscSV,"[[-0.2934776618505848, -0.7852375223885569, 1.371853933827984, -0.324916725359467, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0210968853666715, -0.172341327415123, -0.1118744998754625, -0.194885270907684], [-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758], [-0.3097582813179415, 0.6984177257853003, -0.5615090252741693, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.0643689763838663, -0.1928595206736699], [-0.2771970423832281, -0.7656182199589877, 1.340421784034718, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1800912734735119, -0.1100880574007032, -0.1718231150438741], [-0.2989045350063704, -0.8175003752727372, 1.4198593989667898, -0.3299926595556873, -0.4166947966475947, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>""], [""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
u4IrctBY,"[[-0.3043314081621559, -0.1870667905359175, 0.5963370743832244, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.174454949067411, -0.111923193931422, -0.1948986719825411], [-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758], [-0.3097582813179415, 0.6984177257853003, -0.5615090252741693, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.0643689763838663, -0.1928595206736699], [-0.2771970423832281, -0.7656182199589877, 1.340421784034718, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1800912734735119, -0.1100880574007032, -0.1718231150438741], [-0.2989045350063704, -0.8175003752727372, 1.4198593989667898, -0.3299926595556873, -0.4166947966475947, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8083447008056049, 1.4050005645190642, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1120441009411174, -0.1948940226300397]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
hp3kl5JR,"[[-0.3097582813179415, -0.1534959841564328, 0.5551895328356762, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0173509762159832, -0.1758640301689362, -0.1120732511242768, -0.1949087911615149], [-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758], [-0.3097582813179415, 0.6984177257853003, -0.5615090252741693, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.0643689763838663, -0.1928595206736699], [-0.2771970423832281, -0.7656182199589877, 1.340421784034718, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1800912734735119, -0.1100880574007032, -0.1718231150438741], [-0.2989045350063704, -0.8175003752727372, 1.4198593989667898, -0.3299926595556873, -0.4166947966475947, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8083447008056049, 1.4050005645190642, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1120441009411174, -0.1948940226300397], [-0.2826239155390136, -0.797881072843168, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0151034307255704, -0.1772731112704615, -0.1121722954966026, -0.1949107056007802]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
UIYH8TO2,"[[-0.3043314081621559, 0.2319143124599909, 0.0471316934499789, -0.3299926595556873, -0.3538845744266089, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.177977651821224, -0.1120354883870021, -0.1948967575432758], [-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758], [-0.3097582813179415, 0.6984177257853003, -0.5615090252741693, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.0643689763838663, -0.1928595206736699], [-0.2771970423832281, -0.7656182199589877, 1.340421784034718, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1800912734735119, -0.1100880574007032, -0.1718231150438741], [-0.2989045350063704, -0.8175003752727372, 1.4198593989667898, -0.3299926595556873, -0.4166947966475947, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8083447008056049, 1.4050005645190642, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1120441009411174, -0.1948940226300397], [-0.2826239155390136, -0.797881072843168, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0151034307255704, -0.1772731112704615, -0.1121722954966026, -0.1949107056007802], [-0.2880507886947993, -0.8061647783134305, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0166017943858457, -0.1751594896181735, -0.1121348640114092, -0.1948983984912175]]",1,"[[""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)""], [""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
LPvCj0YW,"[[-0.2880507886947993, 0.5070205309723931, -0.3220531932127438, -0.3299926595556873, -0.3962544010541273, -0.6069349965384231, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1119964006414019, -0.1948866383643021], [-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758], [-0.3097582813179415, 0.6984177257853003, -0.5615090252741693, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.0643689763838663, -0.1928595206736699], [-0.2771970423832281, -0.7656182199589877, 1.340421784034718, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1800912734735119, -0.1100880574007032, -0.1718231150438741], [-0.2989045350063704, -0.8175003752727372, 1.4198593989667898, -0.3299926595556873, -0.4166947966475947, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8083447008056049, 1.4050005645190642, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1120441009411174, -0.1948940226300397], [-0.2826239155390136, -0.797881072843168, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0151034307255704, -0.1772731112704615, -0.1121722954966026, -0.1949107056007802], [-0.2880507886947993, -0.8061647783134305, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0166017943858457, -0.1751594896181735, -0.1121348640114092, -0.1948983984912175], [-0.2609164229158714, -0.8266560497398695, 1.4118584881103222, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0188493398762588, -0.172341327415123, -0.1121212826760736, -0.1949022273697481]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
Wpaj4Co5,"[[-0.2989045350063704, 0.5222799884176131, -0.3363405340278647, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0143542488954327, -0.1786821923719867, -0.1121067075844939, -0.1949025008610717], [-0.2934776618505848, 0.7298086096726107, -0.6112289713107898, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.1120354883870021, -0.1948967575432758], [-0.3097582813179415, 0.6984177257853003, -0.5615090252741693, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1793867329227494, -0.0643689763838663, -0.1928595206736699], [-0.2771970423832281, -0.7656182199589877, 1.340421784034718, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1800912734735119, -0.1100880574007032, -0.1718231150438741], [-0.2989045350063704, -0.8175003752727372, 1.4198593989667898, -0.3299926595556873, -0.4166947966475947, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1121348640114092, -0.1948983984912175], [-0.2934776618505848, -0.8083447008056049, 1.4050005645190642, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0128558852351574, -0.1786821923719867, -0.1120441009411174, -0.1948940226300397], [-0.2826239155390136, -0.797881072843168, 1.3855697810105, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0151034307255704, -0.1772731112704615, -0.1121722954966026, -0.1949107056007802], [-0.2880507886947993, -0.8061647783134305, 1.399285628193016, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0166017943858457, -0.1751594896181735, -0.1121348640114092, -0.1948983984912175], [-0.2609164229158714, -0.8266560497398695, 1.4118584881103222, -0.3299926595556873, -0.4204850686781715, -0.6169826417155208, -0.1757397941801383, 0.0188493398762588, -0.172341327415123, -0.1121212826760736, -0.1949022273697481], [-0.2880507886947993, -0.7965731193478633, 1.3867127682757097, -0.3299926595556873, -0.4200112846743493, -0.6169826417155208, -0.1757397941801383, 0.0225952490269468, -0.1688186246613098, -0.1120417821765479, -0.1949035948263662]]",1,"[[""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>""], [""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Updating epoch to <*> and clearing cache"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)""], [""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Don't have map outputs for shuffle <*> fetching them"", ""Doing the fetch; tracker endpoint = <*>"", ""Got the output locations"", ""Getting <*> <*> <*> non-empty blocks including <*> <*> <*> local and 0 (0.0 B) host-local and <*> <*> <*> remote blocks"", ""Started <*> remote fetches in <*> ms"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Finished task <*> in stage <*> (TID <*> <*> bytes result sent <*> <*>"", ""Got assigned task <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Running task <*> in stage <*> (TID <*>""], [""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Got assigned task <*>"", ""Running task <*> in stage <*> (TID <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Input split: <*>"", ""Started reading broadcast variable <*> with <*> pieces (estimated total size <*> MiB)"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""Reading broadcast variable <*> took <*> ms"", ""Block <*> stored as <*> in memory (estimated size <*> <*> free <*> MiB)"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""], [""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding"", ""padding""]]",0
